-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.1
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity janus_step is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_int_0_x_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_1_x_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_2_x_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_3_x_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_4_x_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_5_x_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_6_x_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_7_x_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_8_x_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_0_y_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_1_y_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_2_y_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_3_y_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_4_y_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_5_y_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_6_y_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_7_y_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_8_y_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_0_z_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_1_z_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_2_z_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_3_z_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_4_z_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_5_z_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_6_z_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_7_z_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_8_z_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_0_vx_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_1_vx_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_2_vx_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_3_vx_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_4_vx_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_5_vx_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_6_vx_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_7_vx_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_8_vx_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_0_vy_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_1_vy_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_2_vy_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_3_vy_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_4_vy_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_5_vy_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_6_vy_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_7_vy_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_8_vy_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_0_vz_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_1_vz_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_2_vz_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_3_vz_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_4_vz_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_5_vz_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_6_vz_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_7_vz_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_int_8_vz_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_x_0_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_x_0_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_x_0_o_ap_vld : OUT STD_LOGIC;
    p_y_0_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_y_0_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_y_0_o_ap_vld : OUT STD_LOGIC;
    p_z_0_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_z_0_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_z_0_o_ap_vld : OUT STD_LOGIC;
    p_vx_0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_vx_0_ap_vld : OUT STD_LOGIC;
    p_vy_0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_vy_0_ap_vld : OUT STD_LOGIC;
    p_vz_0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_vz_0_ap_vld : OUT STD_LOGIC;
    p_x_1_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_x_1_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_x_1_o_ap_vld : OUT STD_LOGIC;
    p_y_1_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_y_1_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_y_1_o_ap_vld : OUT STD_LOGIC;
    p_z_1_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_z_1_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_z_1_o_ap_vld : OUT STD_LOGIC;
    p_vx_1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_vx_1_ap_vld : OUT STD_LOGIC;
    p_vy_1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_vy_1_ap_vld : OUT STD_LOGIC;
    p_vz_1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_vz_1_ap_vld : OUT STD_LOGIC;
    p_x_2_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_x_2_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_x_2_o_ap_vld : OUT STD_LOGIC;
    p_y_2_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_y_2_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_y_2_o_ap_vld : OUT STD_LOGIC;
    p_z_2_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_z_2_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_z_2_o_ap_vld : OUT STD_LOGIC;
    p_vx_2 : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_vx_2_ap_vld : OUT STD_LOGIC;
    p_vy_2 : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_vy_2_ap_vld : OUT STD_LOGIC;
    p_vz_2 : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_vz_2_ap_vld : OUT STD_LOGIC;
    p_x_3_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_x_3_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_x_3_o_ap_vld : OUT STD_LOGIC;
    p_y_3_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_y_3_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_y_3_o_ap_vld : OUT STD_LOGIC;
    p_z_3_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_z_3_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_z_3_o_ap_vld : OUT STD_LOGIC;
    p_vx_3 : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_vx_3_ap_vld : OUT STD_LOGIC;
    p_vy_3 : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_vy_3_ap_vld : OUT STD_LOGIC;
    p_vz_3 : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_vz_3_ap_vld : OUT STD_LOGIC;
    p_x_4_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_x_4_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_x_4_o_ap_vld : OUT STD_LOGIC;
    p_y_4_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_y_4_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_y_4_o_ap_vld : OUT STD_LOGIC;
    p_z_4_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_z_4_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_z_4_o_ap_vld : OUT STD_LOGIC;
    p_vx_4 : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_vx_4_ap_vld : OUT STD_LOGIC;
    p_vy_4 : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_vy_4_ap_vld : OUT STD_LOGIC;
    p_vz_4 : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_vz_4_ap_vld : OUT STD_LOGIC;
    p_x_5_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_x_5_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_x_5_o_ap_vld : OUT STD_LOGIC;
    p_y_5_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_y_5_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_y_5_o_ap_vld : OUT STD_LOGIC;
    p_z_5_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_z_5_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_z_5_o_ap_vld : OUT STD_LOGIC;
    p_vx_5 : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_vx_5_ap_vld : OUT STD_LOGIC;
    p_vy_5 : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_vy_5_ap_vld : OUT STD_LOGIC;
    p_vz_5 : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_vz_5_ap_vld : OUT STD_LOGIC;
    p_x_6_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_x_6_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_x_6_o_ap_vld : OUT STD_LOGIC;
    p_y_6_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_y_6_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_y_6_o_ap_vld : OUT STD_LOGIC;
    p_z_6_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_z_6_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_z_6_o_ap_vld : OUT STD_LOGIC;
    p_vx_6 : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_vx_6_ap_vld : OUT STD_LOGIC;
    p_vy_6 : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_vy_6_ap_vld : OUT STD_LOGIC;
    p_vz_6 : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_vz_6_ap_vld : OUT STD_LOGIC;
    p_x_7_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_x_7_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_x_7_o_ap_vld : OUT STD_LOGIC;
    p_y_7_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_y_7_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_y_7_o_ap_vld : OUT STD_LOGIC;
    p_z_7_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_z_7_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_z_7_o_ap_vld : OUT STD_LOGIC;
    p_vx_7 : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_vx_7_ap_vld : OUT STD_LOGIC;
    p_vy_7 : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_vy_7_ap_vld : OUT STD_LOGIC;
    p_vz_7 : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_vz_7_ap_vld : OUT STD_LOGIC;
    p_x_8_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_x_8_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_x_8_o_ap_vld : OUT STD_LOGIC;
    p_y_8_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_y_8_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_y_8_o_ap_vld : OUT STD_LOGIC;
    p_z_8_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_z_8_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_z_8_o_ap_vld : OUT STD_LOGIC;
    p_vx_8 : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_vx_8_ap_vld : OUT STD_LOGIC;
    p_vy_8 : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_vy_8_ap_vld : OUT STD_LOGIC;
    p_vz_8 : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_vz_8_ap_vld : OUT STD_LOGIC;
    p_m_1 : IN STD_LOGIC_VECTOR (63 downto 0);
    p_m_2 : IN STD_LOGIC_VECTOR (63 downto 0);
    p_m_3 : IN STD_LOGIC_VECTOR (63 downto 0);
    p_m_4 : IN STD_LOGIC_VECTOR (63 downto 0);
    p_m_5 : IN STD_LOGIC_VECTOR (63 downto 0);
    p_ax_0_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_ax_0_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_ax_0_o_ap_vld : OUT STD_LOGIC;
    p_ay_0_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_ay_0_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_ay_0_o_ap_vld : OUT STD_LOGIC;
    p_az_0_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_az_0_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_az_0_o_ap_vld : OUT STD_LOGIC;
    p_m_0 : IN STD_LOGIC_VECTOR (63 downto 0);
    p_ax_1_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_ax_1_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_ax_1_o_ap_vld : OUT STD_LOGIC;
    p_ay_1_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_ay_1_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_ay_1_o_ap_vld : OUT STD_LOGIC;
    p_az_1_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_az_1_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_az_1_o_ap_vld : OUT STD_LOGIC;
    p_ax_2_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_ax_2_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_ax_2_o_ap_vld : OUT STD_LOGIC;
    p_ay_2_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_ay_2_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_ay_2_o_ap_vld : OUT STD_LOGIC;
    p_az_2_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_az_2_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_az_2_o_ap_vld : OUT STD_LOGIC;
    p_ax_3_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_ax_3_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_ax_3_o_ap_vld : OUT STD_LOGIC;
    p_ay_3_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_ay_3_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_ay_3_o_ap_vld : OUT STD_LOGIC;
    p_az_3_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_az_3_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_az_3_o_ap_vld : OUT STD_LOGIC;
    p_ax_4_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_ax_4_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_ax_4_o_ap_vld : OUT STD_LOGIC;
    p_ay_4_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_ay_4_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_ay_4_o_ap_vld : OUT STD_LOGIC;
    p_az_4_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_az_4_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_az_4_o_ap_vld : OUT STD_LOGIC;
    p_ax_5_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_ax_5_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_ax_5_o_ap_vld : OUT STD_LOGIC;
    p_ay_5_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_ay_5_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_ay_5_o_ap_vld : OUT STD_LOGIC;
    p_az_5_i : IN STD_LOGIC_VECTOR (63 downto 0);
    p_az_5_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_az_5_o_ap_vld : OUT STD_LOGIC;
    ap_return_0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_8 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_9 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_10 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_11 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_12 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_13 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_14 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_15 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_16 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_17 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_18 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_19 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_20 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_21 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_22 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_23 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_24 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_25 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_26 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_27 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_28 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_29 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_30 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_31 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_32 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_33 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_34 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_35 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_36 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_37 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_38 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_39 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_40 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_41 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_42 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_43 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_44 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_45 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_46 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_47 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_48 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_49 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_50 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_51 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_52 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_53 : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of janus_step is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_ax_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_ay_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_az_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_ax_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_ay_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_az_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_ax_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_ay_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal p_az_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal reg_1252 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_drift_fu_754_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal reg_1258 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1264 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1270 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1276 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1282 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1288 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1294 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1300 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1306 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1312 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1318 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1324 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1330 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1336 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1342 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1348 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1354 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1360 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1366 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1372 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1378 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1384 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1390 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1396 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1402 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_1408 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_int_vx_assign_4_reg_2170 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_kick_fu_866_ap_done : STD_LOGIC;
    signal p_int_vx25_assign_4_reg_2177 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_int_vx26_assign_4_reg_2184 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_int_vx27_assign_4_reg_2191 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_int_vx28_assign_4_reg_2198 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_int_vx29_assign_4_reg_2205 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_int_vx30_assign_4_reg_2212 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_int_vx3138_assign_4_reg_2219 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_int_vx32_assign_4_reg_2226 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_int_vy_assign_4_reg_2233 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_int_vy33_assign_4_reg_2240 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_int_vy34_assign_4_reg_2247 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_int_vy35_assign_4_reg_2254 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_int_vy36_assign_4_reg_2261 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_int_vy37_assign_4_reg_2268 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_int_vy38_assign_4_reg_2275 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_int_vy39_assign_4_reg_2282 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_int_vy40_assign_4_reg_2289 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_int_vz_assign_4_reg_2296 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_int_vz41_assign_4_reg_2303 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_int_vz42_assign_4_reg_2310 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_int_vz43_assign_4_reg_2317 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_int_vz44_assign_4_reg_2324 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_int_vz45_assign_4_reg_2331 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_int_vz46_assign_4_reg_2338 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_int_vz47_assign_4_reg_2345 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_int_vz48_assign_4_reg_2352 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gravity_fu_624_ap_start : STD_LOGIC;
    signal grp_gravity_fu_624_ap_done : STD_LOGIC;
    signal grp_gravity_fu_624_ap_idle : STD_LOGIC;
    signal grp_gravity_fu_624_ap_ready : STD_LOGIC;
    signal grp_gravity_fu_624_p_ax_0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gravity_fu_624_p_ax_0_ap_vld : STD_LOGIC;
    signal grp_gravity_fu_624_p_ay_0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gravity_fu_624_p_ay_0_ap_vld : STD_LOGIC;
    signal grp_gravity_fu_624_p_az_0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gravity_fu_624_p_az_0_ap_vld : STD_LOGIC;
    signal grp_gravity_fu_624_p_ax_1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gravity_fu_624_p_ax_1_ap_vld : STD_LOGIC;
    signal grp_gravity_fu_624_p_ay_1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gravity_fu_624_p_ay_1_ap_vld : STD_LOGIC;
    signal grp_gravity_fu_624_p_az_1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gravity_fu_624_p_az_1_ap_vld : STD_LOGIC;
    signal grp_gravity_fu_624_p_ax_2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gravity_fu_624_p_ax_2_ap_vld : STD_LOGIC;
    signal grp_gravity_fu_624_p_ay_2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gravity_fu_624_p_ay_2_ap_vld : STD_LOGIC;
    signal grp_gravity_fu_624_p_az_2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gravity_fu_624_p_az_2_ap_vld : STD_LOGIC;
    signal grp_gravity_fu_624_p_ax_3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gravity_fu_624_p_ax_3_ap_vld : STD_LOGIC;
    signal grp_gravity_fu_624_p_ay_3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gravity_fu_624_p_ay_3_ap_vld : STD_LOGIC;
    signal grp_gravity_fu_624_p_az_3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gravity_fu_624_p_az_3_ap_vld : STD_LOGIC;
    signal grp_gravity_fu_624_p_ax_4 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gravity_fu_624_p_ax_4_ap_vld : STD_LOGIC;
    signal grp_gravity_fu_624_p_ay_4 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gravity_fu_624_p_ay_4_ap_vld : STD_LOGIC;
    signal grp_gravity_fu_624_p_az_4 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gravity_fu_624_p_az_4_ap_vld : STD_LOGIC;
    signal grp_gravity_fu_624_p_ax_5 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gravity_fu_624_p_ax_5_ap_vld : STD_LOGIC;
    signal grp_gravity_fu_624_p_ay_5 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gravity_fu_624_p_ay_5_ap_vld : STD_LOGIC;
    signal grp_gravity_fu_624_p_az_5 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gravity_fu_624_p_az_5_ap_vld : STD_LOGIC;
    signal grp_gravity_fu_624_p_ax_6 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gravity_fu_624_p_ax_6_ap_vld : STD_LOGIC;
    signal grp_gravity_fu_624_p_ay_6 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gravity_fu_624_p_ay_6_ap_vld : STD_LOGIC;
    signal grp_gravity_fu_624_p_az_6 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gravity_fu_624_p_az_6_ap_vld : STD_LOGIC;
    signal grp_gravity_fu_624_p_ax_7 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gravity_fu_624_p_ax_7_ap_vld : STD_LOGIC;
    signal grp_gravity_fu_624_p_ay_7 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gravity_fu_624_p_ay_7_ap_vld : STD_LOGIC;
    signal grp_gravity_fu_624_p_az_7 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gravity_fu_624_p_az_7_ap_vld : STD_LOGIC;
    signal grp_gravity_fu_624_p_ax_8 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gravity_fu_624_p_ax_8_ap_vld : STD_LOGIC;
    signal grp_gravity_fu_624_p_ay_8 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gravity_fu_624_p_ay_8_ap_vld : STD_LOGIC;
    signal grp_gravity_fu_624_p_az_8 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gravity_fu_624_p_az_8_ap_vld : STD_LOGIC;
    signal grp_drift_fu_754_ap_start : STD_LOGIC;
    signal grp_drift_fu_754_ap_idle : STD_LOGIC;
    signal grp_drift_fu_754_ap_ready : STD_LOGIC;
    signal grp_drift_fu_754_p_int_0_x_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_1_x_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_2_x_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_3_x_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_4_x_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_5_x_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_6_x_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_7_x_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_8_x_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_0_y_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_1_y_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_2_y_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_3_y_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_4_y_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_5_y_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_6_y_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_7_y_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_8_y_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_0_z_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_1_z_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_2_z_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_3_z_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_4_z_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_5_z_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_6_z_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_7_z_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_8_z_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_0_vx_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_1_vx_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_2_vx_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_3_vx_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_4_vx_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_5_vx_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_6_vx_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_7_vx_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_8_vx_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_0_vy_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_1_vy_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_2_vy_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_3_vy_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_4_vy_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_5_vy_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_6_vy_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_7_vy_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_8_vy_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_0_vz_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_1_vz_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_2_vz_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_3_vz_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_4_vz_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_5_vz_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_6_vz_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_7_vz_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_p_int_8_vz_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_ap_return_0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_ap_return_1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_ap_return_2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_ap_return_3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_ap_return_4 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_ap_return_5 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_ap_return_6 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_ap_return_7 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_ap_return_8 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_ap_return_9 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_ap_return_10 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_ap_return_11 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_ap_return_12 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_ap_return_13 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_ap_return_14 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_ap_return_15 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_ap_return_16 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_ap_return_17 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_ap_return_18 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_ap_return_19 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_ap_return_20 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_ap_return_21 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_ap_return_22 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_ap_return_23 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_ap_return_24 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_ap_return_25 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_drift_fu_754_ap_return_26 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kick_fu_866_ap_start : STD_LOGIC;
    signal grp_kick_fu_866_ap_idle : STD_LOGIC;
    signal grp_kick_fu_866_ap_ready : STD_LOGIC;
    signal grp_kick_fu_866_ap_return_0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kick_fu_866_ap_return_1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kick_fu_866_ap_return_2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kick_fu_866_ap_return_3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kick_fu_866_ap_return_4 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kick_fu_866_ap_return_5 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kick_fu_866_ap_return_6 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kick_fu_866_ap_return_7 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kick_fu_866_ap_return_8 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kick_fu_866_ap_return_9 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kick_fu_866_ap_return_10 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kick_fu_866_ap_return_11 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kick_fu_866_ap_return_12 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kick_fu_866_ap_return_13 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kick_fu_866_ap_return_14 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kick_fu_866_ap_return_15 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kick_fu_866_ap_return_16 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kick_fu_866_ap_return_17 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kick_fu_866_ap_return_18 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kick_fu_866_ap_return_19 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kick_fu_866_ap_return_20 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kick_fu_866_ap_return_21 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kick_fu_866_ap_return_22 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kick_fu_866_ap_return_23 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kick_fu_866_ap_return_24 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kick_fu_866_ap_return_25 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kick_fu_866_ap_return_26 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_ap_start : STD_LOGIC;
    signal grp_to_double_fu_951_ap_done : STD_LOGIC;
    signal grp_to_double_fu_951_ap_idle : STD_LOGIC;
    signal grp_to_double_fu_951_ap_ready : STD_LOGIC;
    signal grp_to_double_fu_951_p_int_0_vx_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_int_1_vx_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_int_2_vx_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_int_3_vx_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_int_4_vx_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_int_5_vx_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_int_6_vx_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_int_7_vx_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_int_8_vx_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_int_0_vy_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_int_1_vy_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_int_2_vy_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_int_3_vy_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_int_4_vy_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_int_5_vy_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_int_6_vy_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_int_7_vy_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_int_8_vy_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_int_0_vz_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_int_1_vz_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_int_2_vz_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_int_3_vz_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_int_4_vz_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_int_5_vz_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_int_6_vz_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_int_7_vz_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_int_8_vz_read : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_x_0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_x_0_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_y_0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_y_0_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_z_0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_z_0_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_vx_0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_vx_0_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_vy_0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_vy_0_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_vz_0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_vz_0_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_x_1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_x_1_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_y_1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_y_1_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_z_1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_z_1_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_vx_1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_vx_1_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_vy_1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_vy_1_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_vz_1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_vz_1_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_x_2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_x_2_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_y_2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_y_2_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_z_2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_z_2_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_vx_2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_vx_2_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_vy_2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_vy_2_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_vz_2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_vz_2_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_x_3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_x_3_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_y_3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_y_3_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_z_3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_z_3_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_vx_3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_vx_3_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_vy_3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_vy_3_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_vz_3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_vz_3_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_x_4 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_x_4_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_y_4 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_y_4_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_z_4 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_z_4_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_vx_4 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_vx_4_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_vy_4 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_vy_4_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_vz_4 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_vz_4_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_x_5 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_x_5_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_y_5 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_y_5_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_z_5 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_z_5_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_vx_5 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_vx_5_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_vy_5 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_vy_5_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_vz_5 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_vz_5_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_x_6 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_x_6_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_y_6 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_y_6_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_z_6 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_z_6_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_vx_6 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_vx_6_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_vy_6 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_vy_6_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_vz_6 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_vz_6_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_x_7 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_x_7_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_y_7 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_y_7_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_z_7 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_z_7_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_vx_7 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_vx_7_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_vy_7 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_vy_7_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_vz_7 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_vz_7_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_x_8 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_x_8_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_y_8 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_y_8_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_z_8 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_z_8_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_vx_8 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_vx_8_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_vy_8 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_vy_8_ap_vld : STD_LOGIC;
    signal grp_to_double_fu_951_p_vz_8 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_to_double_fu_951_p_vz_8_ap_vld : STD_LOGIC;
    signal ap_reg_grp_gravity_fu_624_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_reg_grp_drift_fu_754_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_kick_fu_866_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_reg_grp_to_double_fu_951_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);

    component gravity IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_x_0 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_x_1 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_y_0 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_y_1 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_z_0 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_z_1 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_m_1 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_x_2 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_y_2 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_z_2 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_m_2 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_x_3 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_y_3 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_z_3 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_m_3 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_x_4 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_y_4 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_z_4 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_m_4 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_x_5 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_y_5 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_z_5 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_m_5 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_x_6 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_y_6 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_z_6 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_x_7 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_y_7 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_z_7 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_x_8 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_y_8 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_z_8 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_ax_0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_ax_0_ap_vld : OUT STD_LOGIC;
        p_ay_0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_ay_0_ap_vld : OUT STD_LOGIC;
        p_az_0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_az_0_ap_vld : OUT STD_LOGIC;
        p_m_0 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_ax_1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_ax_1_ap_vld : OUT STD_LOGIC;
        p_ay_1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_ay_1_ap_vld : OUT STD_LOGIC;
        p_az_1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_az_1_ap_vld : OUT STD_LOGIC;
        p_ax_2 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_ax_2_ap_vld : OUT STD_LOGIC;
        p_ay_2 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_ay_2_ap_vld : OUT STD_LOGIC;
        p_az_2 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_az_2_ap_vld : OUT STD_LOGIC;
        p_ax_3 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_ax_3_ap_vld : OUT STD_LOGIC;
        p_ay_3 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_ay_3_ap_vld : OUT STD_LOGIC;
        p_az_3 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_az_3_ap_vld : OUT STD_LOGIC;
        p_ax_4 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_ax_4_ap_vld : OUT STD_LOGIC;
        p_ay_4 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_ay_4_ap_vld : OUT STD_LOGIC;
        p_az_4 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_az_4_ap_vld : OUT STD_LOGIC;
        p_ax_5 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_ax_5_ap_vld : OUT STD_LOGIC;
        p_ay_5 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_ay_5_ap_vld : OUT STD_LOGIC;
        p_az_5 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_az_5_ap_vld : OUT STD_LOGIC;
        p_ax_6 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_ax_6_ap_vld : OUT STD_LOGIC;
        p_ay_6 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_ay_6_ap_vld : OUT STD_LOGIC;
        p_az_6 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_az_6_ap_vld : OUT STD_LOGIC;
        p_ax_7 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_ax_7_ap_vld : OUT STD_LOGIC;
        p_ay_7 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_ay_7_ap_vld : OUT STD_LOGIC;
        p_az_7 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_az_7_ap_vld : OUT STD_LOGIC;
        p_ax_8 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_ax_8_ap_vld : OUT STD_LOGIC;
        p_ay_8 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_ay_8_ap_vld : OUT STD_LOGIC;
        p_az_8 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_az_8_ap_vld : OUT STD_LOGIC );
    end component;


    component drift IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_int_0_x_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_1_x_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_2_x_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_3_x_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_4_x_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_5_x_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_6_x_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_7_x_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_8_x_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_0_y_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_1_y_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_2_y_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_3_y_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_4_y_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_5_y_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_6_y_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_7_y_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_8_y_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_0_z_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_1_z_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_2_z_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_3_z_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_4_z_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_5_z_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_6_z_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_7_z_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_8_z_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_0_vx_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_1_vx_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_2_vx_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_3_vx_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_4_vx_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_5_vx_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_6_vx_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_7_vx_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_8_vx_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_0_vy_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_1_vy_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_2_vy_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_3_vy_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_4_vy_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_5_vy_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_6_vy_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_7_vy_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_8_vy_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_0_vz_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_1_vz_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_2_vz_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_3_vz_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_4_vz_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_5_vz_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_6_vz_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_7_vz_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_8_vz_read : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component kick IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_int_0_vx_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_1_vx_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_2_vx_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_3_vx_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_4_vx_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_5_vx_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_6_vx_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_7_vx_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_8_vx_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_0_vy_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_1_vy_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_2_vy_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_3_vy_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_4_vy_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_5_vy_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_6_vy_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_7_vy_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_8_vy_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_0_vz_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_1_vz_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_2_vz_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_3_vz_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_4_vz_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_5_vz_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_6_vz_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_7_vz_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_8_vz_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_ax_6 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_ax_0 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_ax_3 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_ay_6 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_ay_0 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_ay_3 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_az_6 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_az_0 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_az_3 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_ax_7 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_ax_1 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_ax_4 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_ay_7 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_ay_1 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_ay_4 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_az_7 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_az_1 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_az_4 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_ax_8 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_ax_2 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_ax_5 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_ay_8 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_ay_2 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_ay_5 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_az_8 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_az_2 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_az_5 : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component to_double IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_int_0_x_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_1_x_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_2_x_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_3_x_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_4_x_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_5_x_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_6_x_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_7_x_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_8_x_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_0_y_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_1_y_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_2_y_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_3_y_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_4_y_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_5_y_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_6_y_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_7_y_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_8_y_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_0_z_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_1_z_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_2_z_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_3_z_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_4_z_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_5_z_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_6_z_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_7_z_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_8_z_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_0_vx_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_1_vx_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_2_vx_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_3_vx_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_4_vx_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_5_vx_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_6_vx_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_7_vx_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_8_vx_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_0_vy_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_1_vy_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_2_vy_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_3_vy_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_4_vy_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_5_vy_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_6_vy_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_7_vy_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_8_vy_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_0_vz_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_1_vz_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_2_vz_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_3_vz_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_4_vz_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_5_vz_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_6_vz_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_7_vz_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_int_8_vz_read : IN STD_LOGIC_VECTOR (63 downto 0);
        p_x_0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_x_0_ap_vld : OUT STD_LOGIC;
        p_y_0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_y_0_ap_vld : OUT STD_LOGIC;
        p_z_0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_z_0_ap_vld : OUT STD_LOGIC;
        p_vx_0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_vx_0_ap_vld : OUT STD_LOGIC;
        p_vy_0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_vy_0_ap_vld : OUT STD_LOGIC;
        p_vz_0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_vz_0_ap_vld : OUT STD_LOGIC;
        p_x_1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_x_1_ap_vld : OUT STD_LOGIC;
        p_y_1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_y_1_ap_vld : OUT STD_LOGIC;
        p_z_1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_z_1_ap_vld : OUT STD_LOGIC;
        p_vx_1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_vx_1_ap_vld : OUT STD_LOGIC;
        p_vy_1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_vy_1_ap_vld : OUT STD_LOGIC;
        p_vz_1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_vz_1_ap_vld : OUT STD_LOGIC;
        p_x_2 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_x_2_ap_vld : OUT STD_LOGIC;
        p_y_2 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_y_2_ap_vld : OUT STD_LOGIC;
        p_z_2 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_z_2_ap_vld : OUT STD_LOGIC;
        p_vx_2 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_vx_2_ap_vld : OUT STD_LOGIC;
        p_vy_2 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_vy_2_ap_vld : OUT STD_LOGIC;
        p_vz_2 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_vz_2_ap_vld : OUT STD_LOGIC;
        p_x_3 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_x_3_ap_vld : OUT STD_LOGIC;
        p_y_3 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_y_3_ap_vld : OUT STD_LOGIC;
        p_z_3 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_z_3_ap_vld : OUT STD_LOGIC;
        p_vx_3 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_vx_3_ap_vld : OUT STD_LOGIC;
        p_vy_3 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_vy_3_ap_vld : OUT STD_LOGIC;
        p_vz_3 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_vz_3_ap_vld : OUT STD_LOGIC;
        p_x_4 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_x_4_ap_vld : OUT STD_LOGIC;
        p_y_4 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_y_4_ap_vld : OUT STD_LOGIC;
        p_z_4 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_z_4_ap_vld : OUT STD_LOGIC;
        p_vx_4 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_vx_4_ap_vld : OUT STD_LOGIC;
        p_vy_4 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_vy_4_ap_vld : OUT STD_LOGIC;
        p_vz_4 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_vz_4_ap_vld : OUT STD_LOGIC;
        p_x_5 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_x_5_ap_vld : OUT STD_LOGIC;
        p_y_5 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_y_5_ap_vld : OUT STD_LOGIC;
        p_z_5 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_z_5_ap_vld : OUT STD_LOGIC;
        p_vx_5 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_vx_5_ap_vld : OUT STD_LOGIC;
        p_vy_5 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_vy_5_ap_vld : OUT STD_LOGIC;
        p_vz_5 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_vz_5_ap_vld : OUT STD_LOGIC;
        p_x_6 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_x_6_ap_vld : OUT STD_LOGIC;
        p_y_6 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_y_6_ap_vld : OUT STD_LOGIC;
        p_z_6 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_z_6_ap_vld : OUT STD_LOGIC;
        p_vx_6 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_vx_6_ap_vld : OUT STD_LOGIC;
        p_vy_6 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_vy_6_ap_vld : OUT STD_LOGIC;
        p_vz_6 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_vz_6_ap_vld : OUT STD_LOGIC;
        p_x_7 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_x_7_ap_vld : OUT STD_LOGIC;
        p_y_7 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_y_7_ap_vld : OUT STD_LOGIC;
        p_z_7 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_z_7_ap_vld : OUT STD_LOGIC;
        p_vx_7 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_vx_7_ap_vld : OUT STD_LOGIC;
        p_vy_7 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_vy_7_ap_vld : OUT STD_LOGIC;
        p_vz_7 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_vz_7_ap_vld : OUT STD_LOGIC;
        p_x_8 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_x_8_ap_vld : OUT STD_LOGIC;
        p_y_8 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_y_8_ap_vld : OUT STD_LOGIC;
        p_z_8 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_z_8_ap_vld : OUT STD_LOGIC;
        p_vx_8 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_vx_8_ap_vld : OUT STD_LOGIC;
        p_vy_8 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_vy_8_ap_vld : OUT STD_LOGIC;
        p_vz_8 : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_vz_8_ap_vld : OUT STD_LOGIC );
    end component;



begin
    grp_gravity_fu_624 : component gravity
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_gravity_fu_624_ap_start,
        ap_done => grp_gravity_fu_624_ap_done,
        ap_idle => grp_gravity_fu_624_ap_idle,
        ap_ready => grp_gravity_fu_624_ap_ready,
        p_x_0 => p_x_0_i,
        p_x_1 => p_x_1_i,
        p_y_0 => p_y_0_i,
        p_y_1 => p_y_1_i,
        p_z_0 => p_z_0_i,
        p_z_1 => p_z_1_i,
        p_m_1 => p_m_1,
        p_x_2 => p_x_2_i,
        p_y_2 => p_y_2_i,
        p_z_2 => p_z_2_i,
        p_m_2 => p_m_2,
        p_x_3 => p_x_3_i,
        p_y_3 => p_y_3_i,
        p_z_3 => p_z_3_i,
        p_m_3 => p_m_3,
        p_x_4 => p_x_4_i,
        p_y_4 => p_y_4_i,
        p_z_4 => p_z_4_i,
        p_m_4 => p_m_4,
        p_x_5 => p_x_5_i,
        p_y_5 => p_y_5_i,
        p_z_5 => p_z_5_i,
        p_m_5 => p_m_5,
        p_x_6 => p_x_6_i,
        p_y_6 => p_y_6_i,
        p_z_6 => p_z_6_i,
        p_x_7 => p_x_7_i,
        p_y_7 => p_y_7_i,
        p_z_7 => p_z_7_i,
        p_x_8 => p_x_8_i,
        p_y_8 => p_y_8_i,
        p_z_8 => p_z_8_i,
        p_ax_0 => grp_gravity_fu_624_p_ax_0,
        p_ax_0_ap_vld => grp_gravity_fu_624_p_ax_0_ap_vld,
        p_ay_0 => grp_gravity_fu_624_p_ay_0,
        p_ay_0_ap_vld => grp_gravity_fu_624_p_ay_0_ap_vld,
        p_az_0 => grp_gravity_fu_624_p_az_0,
        p_az_0_ap_vld => grp_gravity_fu_624_p_az_0_ap_vld,
        p_m_0 => p_m_0,
        p_ax_1 => grp_gravity_fu_624_p_ax_1,
        p_ax_1_ap_vld => grp_gravity_fu_624_p_ax_1_ap_vld,
        p_ay_1 => grp_gravity_fu_624_p_ay_1,
        p_ay_1_ap_vld => grp_gravity_fu_624_p_ay_1_ap_vld,
        p_az_1 => grp_gravity_fu_624_p_az_1,
        p_az_1_ap_vld => grp_gravity_fu_624_p_az_1_ap_vld,
        p_ax_2 => grp_gravity_fu_624_p_ax_2,
        p_ax_2_ap_vld => grp_gravity_fu_624_p_ax_2_ap_vld,
        p_ay_2 => grp_gravity_fu_624_p_ay_2,
        p_ay_2_ap_vld => grp_gravity_fu_624_p_ay_2_ap_vld,
        p_az_2 => grp_gravity_fu_624_p_az_2,
        p_az_2_ap_vld => grp_gravity_fu_624_p_az_2_ap_vld,
        p_ax_3 => grp_gravity_fu_624_p_ax_3,
        p_ax_3_ap_vld => grp_gravity_fu_624_p_ax_3_ap_vld,
        p_ay_3 => grp_gravity_fu_624_p_ay_3,
        p_ay_3_ap_vld => grp_gravity_fu_624_p_ay_3_ap_vld,
        p_az_3 => grp_gravity_fu_624_p_az_3,
        p_az_3_ap_vld => grp_gravity_fu_624_p_az_3_ap_vld,
        p_ax_4 => grp_gravity_fu_624_p_ax_4,
        p_ax_4_ap_vld => grp_gravity_fu_624_p_ax_4_ap_vld,
        p_ay_4 => grp_gravity_fu_624_p_ay_4,
        p_ay_4_ap_vld => grp_gravity_fu_624_p_ay_4_ap_vld,
        p_az_4 => grp_gravity_fu_624_p_az_4,
        p_az_4_ap_vld => grp_gravity_fu_624_p_az_4_ap_vld,
        p_ax_5 => grp_gravity_fu_624_p_ax_5,
        p_ax_5_ap_vld => grp_gravity_fu_624_p_ax_5_ap_vld,
        p_ay_5 => grp_gravity_fu_624_p_ay_5,
        p_ay_5_ap_vld => grp_gravity_fu_624_p_ay_5_ap_vld,
        p_az_5 => grp_gravity_fu_624_p_az_5,
        p_az_5_ap_vld => grp_gravity_fu_624_p_az_5_ap_vld,
        p_ax_6 => grp_gravity_fu_624_p_ax_6,
        p_ax_6_ap_vld => grp_gravity_fu_624_p_ax_6_ap_vld,
        p_ay_6 => grp_gravity_fu_624_p_ay_6,
        p_ay_6_ap_vld => grp_gravity_fu_624_p_ay_6_ap_vld,
        p_az_6 => grp_gravity_fu_624_p_az_6,
        p_az_6_ap_vld => grp_gravity_fu_624_p_az_6_ap_vld,
        p_ax_7 => grp_gravity_fu_624_p_ax_7,
        p_ax_7_ap_vld => grp_gravity_fu_624_p_ax_7_ap_vld,
        p_ay_7 => grp_gravity_fu_624_p_ay_7,
        p_ay_7_ap_vld => grp_gravity_fu_624_p_ay_7_ap_vld,
        p_az_7 => grp_gravity_fu_624_p_az_7,
        p_az_7_ap_vld => grp_gravity_fu_624_p_az_7_ap_vld,
        p_ax_8 => grp_gravity_fu_624_p_ax_8,
        p_ax_8_ap_vld => grp_gravity_fu_624_p_ax_8_ap_vld,
        p_ay_8 => grp_gravity_fu_624_p_ay_8,
        p_ay_8_ap_vld => grp_gravity_fu_624_p_ay_8_ap_vld,
        p_az_8 => grp_gravity_fu_624_p_az_8,
        p_az_8_ap_vld => grp_gravity_fu_624_p_az_8_ap_vld);

    grp_drift_fu_754 : component drift
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_drift_fu_754_ap_start,
        ap_done => grp_drift_fu_754_ap_done,
        ap_idle => grp_drift_fu_754_ap_idle,
        ap_ready => grp_drift_fu_754_ap_ready,
        p_int_0_x_read => grp_drift_fu_754_p_int_0_x_read,
        p_int_1_x_read => grp_drift_fu_754_p_int_1_x_read,
        p_int_2_x_read => grp_drift_fu_754_p_int_2_x_read,
        p_int_3_x_read => grp_drift_fu_754_p_int_3_x_read,
        p_int_4_x_read => grp_drift_fu_754_p_int_4_x_read,
        p_int_5_x_read => grp_drift_fu_754_p_int_5_x_read,
        p_int_6_x_read => grp_drift_fu_754_p_int_6_x_read,
        p_int_7_x_read => grp_drift_fu_754_p_int_7_x_read,
        p_int_8_x_read => grp_drift_fu_754_p_int_8_x_read,
        p_int_0_y_read => grp_drift_fu_754_p_int_0_y_read,
        p_int_1_y_read => grp_drift_fu_754_p_int_1_y_read,
        p_int_2_y_read => grp_drift_fu_754_p_int_2_y_read,
        p_int_3_y_read => grp_drift_fu_754_p_int_3_y_read,
        p_int_4_y_read => grp_drift_fu_754_p_int_4_y_read,
        p_int_5_y_read => grp_drift_fu_754_p_int_5_y_read,
        p_int_6_y_read => grp_drift_fu_754_p_int_6_y_read,
        p_int_7_y_read => grp_drift_fu_754_p_int_7_y_read,
        p_int_8_y_read => grp_drift_fu_754_p_int_8_y_read,
        p_int_0_z_read => grp_drift_fu_754_p_int_0_z_read,
        p_int_1_z_read => grp_drift_fu_754_p_int_1_z_read,
        p_int_2_z_read => grp_drift_fu_754_p_int_2_z_read,
        p_int_3_z_read => grp_drift_fu_754_p_int_3_z_read,
        p_int_4_z_read => grp_drift_fu_754_p_int_4_z_read,
        p_int_5_z_read => grp_drift_fu_754_p_int_5_z_read,
        p_int_6_z_read => grp_drift_fu_754_p_int_6_z_read,
        p_int_7_z_read => grp_drift_fu_754_p_int_7_z_read,
        p_int_8_z_read => grp_drift_fu_754_p_int_8_z_read,
        p_int_0_vx_read => grp_drift_fu_754_p_int_0_vx_read,
        p_int_1_vx_read => grp_drift_fu_754_p_int_1_vx_read,
        p_int_2_vx_read => grp_drift_fu_754_p_int_2_vx_read,
        p_int_3_vx_read => grp_drift_fu_754_p_int_3_vx_read,
        p_int_4_vx_read => grp_drift_fu_754_p_int_4_vx_read,
        p_int_5_vx_read => grp_drift_fu_754_p_int_5_vx_read,
        p_int_6_vx_read => grp_drift_fu_754_p_int_6_vx_read,
        p_int_7_vx_read => grp_drift_fu_754_p_int_7_vx_read,
        p_int_8_vx_read => grp_drift_fu_754_p_int_8_vx_read,
        p_int_0_vy_read => grp_drift_fu_754_p_int_0_vy_read,
        p_int_1_vy_read => grp_drift_fu_754_p_int_1_vy_read,
        p_int_2_vy_read => grp_drift_fu_754_p_int_2_vy_read,
        p_int_3_vy_read => grp_drift_fu_754_p_int_3_vy_read,
        p_int_4_vy_read => grp_drift_fu_754_p_int_4_vy_read,
        p_int_5_vy_read => grp_drift_fu_754_p_int_5_vy_read,
        p_int_6_vy_read => grp_drift_fu_754_p_int_6_vy_read,
        p_int_7_vy_read => grp_drift_fu_754_p_int_7_vy_read,
        p_int_8_vy_read => grp_drift_fu_754_p_int_8_vy_read,
        p_int_0_vz_read => grp_drift_fu_754_p_int_0_vz_read,
        p_int_1_vz_read => grp_drift_fu_754_p_int_1_vz_read,
        p_int_2_vz_read => grp_drift_fu_754_p_int_2_vz_read,
        p_int_3_vz_read => grp_drift_fu_754_p_int_3_vz_read,
        p_int_4_vz_read => grp_drift_fu_754_p_int_4_vz_read,
        p_int_5_vz_read => grp_drift_fu_754_p_int_5_vz_read,
        p_int_6_vz_read => grp_drift_fu_754_p_int_6_vz_read,
        p_int_7_vz_read => grp_drift_fu_754_p_int_7_vz_read,
        p_int_8_vz_read => grp_drift_fu_754_p_int_8_vz_read,
        ap_return_0 => grp_drift_fu_754_ap_return_0,
        ap_return_1 => grp_drift_fu_754_ap_return_1,
        ap_return_2 => grp_drift_fu_754_ap_return_2,
        ap_return_3 => grp_drift_fu_754_ap_return_3,
        ap_return_4 => grp_drift_fu_754_ap_return_4,
        ap_return_5 => grp_drift_fu_754_ap_return_5,
        ap_return_6 => grp_drift_fu_754_ap_return_6,
        ap_return_7 => grp_drift_fu_754_ap_return_7,
        ap_return_8 => grp_drift_fu_754_ap_return_8,
        ap_return_9 => grp_drift_fu_754_ap_return_9,
        ap_return_10 => grp_drift_fu_754_ap_return_10,
        ap_return_11 => grp_drift_fu_754_ap_return_11,
        ap_return_12 => grp_drift_fu_754_ap_return_12,
        ap_return_13 => grp_drift_fu_754_ap_return_13,
        ap_return_14 => grp_drift_fu_754_ap_return_14,
        ap_return_15 => grp_drift_fu_754_ap_return_15,
        ap_return_16 => grp_drift_fu_754_ap_return_16,
        ap_return_17 => grp_drift_fu_754_ap_return_17,
        ap_return_18 => grp_drift_fu_754_ap_return_18,
        ap_return_19 => grp_drift_fu_754_ap_return_19,
        ap_return_20 => grp_drift_fu_754_ap_return_20,
        ap_return_21 => grp_drift_fu_754_ap_return_21,
        ap_return_22 => grp_drift_fu_754_ap_return_22,
        ap_return_23 => grp_drift_fu_754_ap_return_23,
        ap_return_24 => grp_drift_fu_754_ap_return_24,
        ap_return_25 => grp_drift_fu_754_ap_return_25,
        ap_return_26 => grp_drift_fu_754_ap_return_26);

    grp_kick_fu_866 : component kick
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_kick_fu_866_ap_start,
        ap_done => grp_kick_fu_866_ap_done,
        ap_idle => grp_kick_fu_866_ap_idle,
        ap_ready => grp_kick_fu_866_ap_ready,
        p_int_0_vx_read => p_int_0_vx_read,
        p_int_1_vx_read => p_int_1_vx_read,
        p_int_2_vx_read => p_int_2_vx_read,
        p_int_3_vx_read => p_int_3_vx_read,
        p_int_4_vx_read => p_int_4_vx_read,
        p_int_5_vx_read => p_int_5_vx_read,
        p_int_6_vx_read => p_int_6_vx_read,
        p_int_7_vx_read => p_int_7_vx_read,
        p_int_8_vx_read => p_int_8_vx_read,
        p_int_0_vy_read => p_int_0_vy_read,
        p_int_1_vy_read => p_int_1_vy_read,
        p_int_2_vy_read => p_int_2_vy_read,
        p_int_3_vy_read => p_int_3_vy_read,
        p_int_4_vy_read => p_int_4_vy_read,
        p_int_5_vy_read => p_int_5_vy_read,
        p_int_6_vy_read => p_int_6_vy_read,
        p_int_7_vy_read => p_int_7_vy_read,
        p_int_8_vy_read => p_int_8_vy_read,
        p_int_0_vz_read => p_int_0_vz_read,
        p_int_1_vz_read => p_int_1_vz_read,
        p_int_2_vz_read => p_int_2_vz_read,
        p_int_3_vz_read => p_int_3_vz_read,
        p_int_4_vz_read => p_int_4_vz_read,
        p_int_5_vz_read => p_int_5_vz_read,
        p_int_6_vz_read => p_int_6_vz_read,
        p_int_7_vz_read => p_int_7_vz_read,
        p_int_8_vz_read => p_int_8_vz_read,
        p_ax_6 => p_ax_6,
        p_ax_0 => p_ax_0_i,
        p_ax_3 => p_ax_3_i,
        p_ay_6 => p_ay_6,
        p_ay_0 => p_ay_0_i,
        p_ay_3 => p_ay_3_i,
        p_az_6 => p_az_6,
        p_az_0 => p_az_0_i,
        p_az_3 => p_az_3_i,
        p_ax_7 => p_ax_7,
        p_ax_1 => p_ax_1_i,
        p_ax_4 => p_ax_4_i,
        p_ay_7 => p_ay_7,
        p_ay_1 => p_ay_1_i,
        p_ay_4 => p_ay_4_i,
        p_az_7 => p_az_7,
        p_az_1 => p_az_1_i,
        p_az_4 => p_az_4_i,
        p_ax_8 => p_ax_8,
        p_ax_2 => p_ax_2_i,
        p_ax_5 => p_ax_5_i,
        p_ay_8 => p_ay_8,
        p_ay_2 => p_ay_2_i,
        p_ay_5 => p_ay_5_i,
        p_az_8 => p_az_8,
        p_az_2 => p_az_2_i,
        p_az_5 => p_az_5_i,
        ap_return_0 => grp_kick_fu_866_ap_return_0,
        ap_return_1 => grp_kick_fu_866_ap_return_1,
        ap_return_2 => grp_kick_fu_866_ap_return_2,
        ap_return_3 => grp_kick_fu_866_ap_return_3,
        ap_return_4 => grp_kick_fu_866_ap_return_4,
        ap_return_5 => grp_kick_fu_866_ap_return_5,
        ap_return_6 => grp_kick_fu_866_ap_return_6,
        ap_return_7 => grp_kick_fu_866_ap_return_7,
        ap_return_8 => grp_kick_fu_866_ap_return_8,
        ap_return_9 => grp_kick_fu_866_ap_return_9,
        ap_return_10 => grp_kick_fu_866_ap_return_10,
        ap_return_11 => grp_kick_fu_866_ap_return_11,
        ap_return_12 => grp_kick_fu_866_ap_return_12,
        ap_return_13 => grp_kick_fu_866_ap_return_13,
        ap_return_14 => grp_kick_fu_866_ap_return_14,
        ap_return_15 => grp_kick_fu_866_ap_return_15,
        ap_return_16 => grp_kick_fu_866_ap_return_16,
        ap_return_17 => grp_kick_fu_866_ap_return_17,
        ap_return_18 => grp_kick_fu_866_ap_return_18,
        ap_return_19 => grp_kick_fu_866_ap_return_19,
        ap_return_20 => grp_kick_fu_866_ap_return_20,
        ap_return_21 => grp_kick_fu_866_ap_return_21,
        ap_return_22 => grp_kick_fu_866_ap_return_22,
        ap_return_23 => grp_kick_fu_866_ap_return_23,
        ap_return_24 => grp_kick_fu_866_ap_return_24,
        ap_return_25 => grp_kick_fu_866_ap_return_25,
        ap_return_26 => grp_kick_fu_866_ap_return_26);

    grp_to_double_fu_951 : component to_double
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_to_double_fu_951_ap_start,
        ap_done => grp_to_double_fu_951_ap_done,
        ap_idle => grp_to_double_fu_951_ap_idle,
        ap_ready => grp_to_double_fu_951_ap_ready,
        p_int_0_x_read => reg_1252,
        p_int_1_x_read => reg_1258,
        p_int_2_x_read => reg_1264,
        p_int_3_x_read => reg_1270,
        p_int_4_x_read => reg_1276,
        p_int_5_x_read => reg_1282,
        p_int_6_x_read => reg_1288,
        p_int_7_x_read => reg_1294,
        p_int_8_x_read => reg_1300,
        p_int_0_y_read => reg_1306,
        p_int_1_y_read => reg_1312,
        p_int_2_y_read => reg_1318,
        p_int_3_y_read => reg_1324,
        p_int_4_y_read => reg_1330,
        p_int_5_y_read => reg_1336,
        p_int_6_y_read => reg_1342,
        p_int_7_y_read => reg_1348,
        p_int_8_y_read => reg_1354,
        p_int_0_z_read => reg_1360,
        p_int_1_z_read => reg_1366,
        p_int_2_z_read => reg_1372,
        p_int_3_z_read => reg_1378,
        p_int_4_z_read => reg_1384,
        p_int_5_z_read => reg_1390,
        p_int_6_z_read => reg_1396,
        p_int_7_z_read => reg_1402,
        p_int_8_z_read => reg_1408,
        p_int_0_vx_read => grp_to_double_fu_951_p_int_0_vx_read,
        p_int_1_vx_read => grp_to_double_fu_951_p_int_1_vx_read,
        p_int_2_vx_read => grp_to_double_fu_951_p_int_2_vx_read,
        p_int_3_vx_read => grp_to_double_fu_951_p_int_3_vx_read,
        p_int_4_vx_read => grp_to_double_fu_951_p_int_4_vx_read,
        p_int_5_vx_read => grp_to_double_fu_951_p_int_5_vx_read,
        p_int_6_vx_read => grp_to_double_fu_951_p_int_6_vx_read,
        p_int_7_vx_read => grp_to_double_fu_951_p_int_7_vx_read,
        p_int_8_vx_read => grp_to_double_fu_951_p_int_8_vx_read,
        p_int_0_vy_read => grp_to_double_fu_951_p_int_0_vy_read,
        p_int_1_vy_read => grp_to_double_fu_951_p_int_1_vy_read,
        p_int_2_vy_read => grp_to_double_fu_951_p_int_2_vy_read,
        p_int_3_vy_read => grp_to_double_fu_951_p_int_3_vy_read,
        p_int_4_vy_read => grp_to_double_fu_951_p_int_4_vy_read,
        p_int_5_vy_read => grp_to_double_fu_951_p_int_5_vy_read,
        p_int_6_vy_read => grp_to_double_fu_951_p_int_6_vy_read,
        p_int_7_vy_read => grp_to_double_fu_951_p_int_7_vy_read,
        p_int_8_vy_read => grp_to_double_fu_951_p_int_8_vy_read,
        p_int_0_vz_read => grp_to_double_fu_951_p_int_0_vz_read,
        p_int_1_vz_read => grp_to_double_fu_951_p_int_1_vz_read,
        p_int_2_vz_read => grp_to_double_fu_951_p_int_2_vz_read,
        p_int_3_vz_read => grp_to_double_fu_951_p_int_3_vz_read,
        p_int_4_vz_read => grp_to_double_fu_951_p_int_4_vz_read,
        p_int_5_vz_read => grp_to_double_fu_951_p_int_5_vz_read,
        p_int_6_vz_read => grp_to_double_fu_951_p_int_6_vz_read,
        p_int_7_vz_read => grp_to_double_fu_951_p_int_7_vz_read,
        p_int_8_vz_read => grp_to_double_fu_951_p_int_8_vz_read,
        p_x_0 => grp_to_double_fu_951_p_x_0,
        p_x_0_ap_vld => grp_to_double_fu_951_p_x_0_ap_vld,
        p_y_0 => grp_to_double_fu_951_p_y_0,
        p_y_0_ap_vld => grp_to_double_fu_951_p_y_0_ap_vld,
        p_z_0 => grp_to_double_fu_951_p_z_0,
        p_z_0_ap_vld => grp_to_double_fu_951_p_z_0_ap_vld,
        p_vx_0 => grp_to_double_fu_951_p_vx_0,
        p_vx_0_ap_vld => grp_to_double_fu_951_p_vx_0_ap_vld,
        p_vy_0 => grp_to_double_fu_951_p_vy_0,
        p_vy_0_ap_vld => grp_to_double_fu_951_p_vy_0_ap_vld,
        p_vz_0 => grp_to_double_fu_951_p_vz_0,
        p_vz_0_ap_vld => grp_to_double_fu_951_p_vz_0_ap_vld,
        p_x_1 => grp_to_double_fu_951_p_x_1,
        p_x_1_ap_vld => grp_to_double_fu_951_p_x_1_ap_vld,
        p_y_1 => grp_to_double_fu_951_p_y_1,
        p_y_1_ap_vld => grp_to_double_fu_951_p_y_1_ap_vld,
        p_z_1 => grp_to_double_fu_951_p_z_1,
        p_z_1_ap_vld => grp_to_double_fu_951_p_z_1_ap_vld,
        p_vx_1 => grp_to_double_fu_951_p_vx_1,
        p_vx_1_ap_vld => grp_to_double_fu_951_p_vx_1_ap_vld,
        p_vy_1 => grp_to_double_fu_951_p_vy_1,
        p_vy_1_ap_vld => grp_to_double_fu_951_p_vy_1_ap_vld,
        p_vz_1 => grp_to_double_fu_951_p_vz_1,
        p_vz_1_ap_vld => grp_to_double_fu_951_p_vz_1_ap_vld,
        p_x_2 => grp_to_double_fu_951_p_x_2,
        p_x_2_ap_vld => grp_to_double_fu_951_p_x_2_ap_vld,
        p_y_2 => grp_to_double_fu_951_p_y_2,
        p_y_2_ap_vld => grp_to_double_fu_951_p_y_2_ap_vld,
        p_z_2 => grp_to_double_fu_951_p_z_2,
        p_z_2_ap_vld => grp_to_double_fu_951_p_z_2_ap_vld,
        p_vx_2 => grp_to_double_fu_951_p_vx_2,
        p_vx_2_ap_vld => grp_to_double_fu_951_p_vx_2_ap_vld,
        p_vy_2 => grp_to_double_fu_951_p_vy_2,
        p_vy_2_ap_vld => grp_to_double_fu_951_p_vy_2_ap_vld,
        p_vz_2 => grp_to_double_fu_951_p_vz_2,
        p_vz_2_ap_vld => grp_to_double_fu_951_p_vz_2_ap_vld,
        p_x_3 => grp_to_double_fu_951_p_x_3,
        p_x_3_ap_vld => grp_to_double_fu_951_p_x_3_ap_vld,
        p_y_3 => grp_to_double_fu_951_p_y_3,
        p_y_3_ap_vld => grp_to_double_fu_951_p_y_3_ap_vld,
        p_z_3 => grp_to_double_fu_951_p_z_3,
        p_z_3_ap_vld => grp_to_double_fu_951_p_z_3_ap_vld,
        p_vx_3 => grp_to_double_fu_951_p_vx_3,
        p_vx_3_ap_vld => grp_to_double_fu_951_p_vx_3_ap_vld,
        p_vy_3 => grp_to_double_fu_951_p_vy_3,
        p_vy_3_ap_vld => grp_to_double_fu_951_p_vy_3_ap_vld,
        p_vz_3 => grp_to_double_fu_951_p_vz_3,
        p_vz_3_ap_vld => grp_to_double_fu_951_p_vz_3_ap_vld,
        p_x_4 => grp_to_double_fu_951_p_x_4,
        p_x_4_ap_vld => grp_to_double_fu_951_p_x_4_ap_vld,
        p_y_4 => grp_to_double_fu_951_p_y_4,
        p_y_4_ap_vld => grp_to_double_fu_951_p_y_4_ap_vld,
        p_z_4 => grp_to_double_fu_951_p_z_4,
        p_z_4_ap_vld => grp_to_double_fu_951_p_z_4_ap_vld,
        p_vx_4 => grp_to_double_fu_951_p_vx_4,
        p_vx_4_ap_vld => grp_to_double_fu_951_p_vx_4_ap_vld,
        p_vy_4 => grp_to_double_fu_951_p_vy_4,
        p_vy_4_ap_vld => grp_to_double_fu_951_p_vy_4_ap_vld,
        p_vz_4 => grp_to_double_fu_951_p_vz_4,
        p_vz_4_ap_vld => grp_to_double_fu_951_p_vz_4_ap_vld,
        p_x_5 => grp_to_double_fu_951_p_x_5,
        p_x_5_ap_vld => grp_to_double_fu_951_p_x_5_ap_vld,
        p_y_5 => grp_to_double_fu_951_p_y_5,
        p_y_5_ap_vld => grp_to_double_fu_951_p_y_5_ap_vld,
        p_z_5 => grp_to_double_fu_951_p_z_5,
        p_z_5_ap_vld => grp_to_double_fu_951_p_z_5_ap_vld,
        p_vx_5 => grp_to_double_fu_951_p_vx_5,
        p_vx_5_ap_vld => grp_to_double_fu_951_p_vx_5_ap_vld,
        p_vy_5 => grp_to_double_fu_951_p_vy_5,
        p_vy_5_ap_vld => grp_to_double_fu_951_p_vy_5_ap_vld,
        p_vz_5 => grp_to_double_fu_951_p_vz_5,
        p_vz_5_ap_vld => grp_to_double_fu_951_p_vz_5_ap_vld,
        p_x_6 => grp_to_double_fu_951_p_x_6,
        p_x_6_ap_vld => grp_to_double_fu_951_p_x_6_ap_vld,
        p_y_6 => grp_to_double_fu_951_p_y_6,
        p_y_6_ap_vld => grp_to_double_fu_951_p_y_6_ap_vld,
        p_z_6 => grp_to_double_fu_951_p_z_6,
        p_z_6_ap_vld => grp_to_double_fu_951_p_z_6_ap_vld,
        p_vx_6 => grp_to_double_fu_951_p_vx_6,
        p_vx_6_ap_vld => grp_to_double_fu_951_p_vx_6_ap_vld,
        p_vy_6 => grp_to_double_fu_951_p_vy_6,
        p_vy_6_ap_vld => grp_to_double_fu_951_p_vy_6_ap_vld,
        p_vz_6 => grp_to_double_fu_951_p_vz_6,
        p_vz_6_ap_vld => grp_to_double_fu_951_p_vz_6_ap_vld,
        p_x_7 => grp_to_double_fu_951_p_x_7,
        p_x_7_ap_vld => grp_to_double_fu_951_p_x_7_ap_vld,
        p_y_7 => grp_to_double_fu_951_p_y_7,
        p_y_7_ap_vld => grp_to_double_fu_951_p_y_7_ap_vld,
        p_z_7 => grp_to_double_fu_951_p_z_7,
        p_z_7_ap_vld => grp_to_double_fu_951_p_z_7_ap_vld,
        p_vx_7 => grp_to_double_fu_951_p_vx_7,
        p_vx_7_ap_vld => grp_to_double_fu_951_p_vx_7_ap_vld,
        p_vy_7 => grp_to_double_fu_951_p_vy_7,
        p_vy_7_ap_vld => grp_to_double_fu_951_p_vy_7_ap_vld,
        p_vz_7 => grp_to_double_fu_951_p_vz_7,
        p_vz_7_ap_vld => grp_to_double_fu_951_p_vz_7_ap_vld,
        p_x_8 => grp_to_double_fu_951_p_x_8,
        p_x_8_ap_vld => grp_to_double_fu_951_p_x_8_ap_vld,
        p_y_8 => grp_to_double_fu_951_p_y_8,
        p_y_8_ap_vld => grp_to_double_fu_951_p_y_8_ap_vld,
        p_z_8 => grp_to_double_fu_951_p_z_8,
        p_z_8_ap_vld => grp_to_double_fu_951_p_z_8_ap_vld,
        p_vx_8 => grp_to_double_fu_951_p_vx_8,
        p_vx_8_ap_vld => grp_to_double_fu_951_p_vx_8_ap_vld,
        p_vy_8 => grp_to_double_fu_951_p_vy_8,
        p_vy_8_ap_vld => grp_to_double_fu_951_p_vy_8_ap_vld,
        p_vz_8 => grp_to_double_fu_951_p_vz_8,
        p_vz_8_ap_vld => grp_to_double_fu_951_p_vz_8_ap_vld);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_grp_drift_fu_754_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_drift_fu_754_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_kick_fu_866_ap_done = ap_const_logic_1)))) then 
                    ap_reg_grp_drift_fu_754_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_drift_fu_754_ap_ready)) then 
                    ap_reg_grp_drift_fu_754_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_gravity_fu_624_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_gravity_fu_624_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_reg_grp_gravity_fu_624_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_gravity_fu_624_ap_ready)) then 
                    ap_reg_grp_gravity_fu_624_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_kick_fu_866_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_kick_fu_866_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    ap_reg_grp_kick_fu_866_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_kick_fu_866_ap_ready)) then 
                    ap_reg_grp_kick_fu_866_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_to_double_fu_951_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_to_double_fu_951_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_drift_fu_754_ap_done = ap_const_logic_1)) or ((grp_drift_fu_754_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
                    ap_reg_grp_to_double_fu_951_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_to_double_fu_951_ap_ready)) then 
                    ap_reg_grp_to_double_fu_951_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = grp_gravity_fu_624_p_ax_6_ap_vld))) then
                p_ax_6 <= grp_gravity_fu_624_p_ax_6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = grp_gravity_fu_624_p_ax_7_ap_vld))) then
                p_ax_7 <= grp_gravity_fu_624_p_ax_7;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = grp_gravity_fu_624_p_ax_8_ap_vld))) then
                p_ax_8 <= grp_gravity_fu_624_p_ax_8;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = grp_gravity_fu_624_p_ay_6_ap_vld))) then
                p_ay_6 <= grp_gravity_fu_624_p_ay_6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = grp_gravity_fu_624_p_ay_7_ap_vld))) then
                p_ay_7 <= grp_gravity_fu_624_p_ay_7;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = grp_gravity_fu_624_p_ay_8_ap_vld))) then
                p_ay_8 <= grp_gravity_fu_624_p_ay_8;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = grp_gravity_fu_624_p_az_6_ap_vld))) then
                p_az_6 <= grp_gravity_fu_624_p_az_6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = grp_gravity_fu_624_p_az_7_ap_vld))) then
                p_az_7 <= grp_gravity_fu_624_p_az_7;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = grp_gravity_fu_624_p_az_8_ap_vld))) then
                p_az_8 <= grp_gravity_fu_624_p_az_8;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_kick_fu_866_ap_done = ap_const_logic_1))) then
                p_int_vx25_assign_4_reg_2177 <= grp_kick_fu_866_ap_return_1;
                p_int_vx26_assign_4_reg_2184 <= grp_kick_fu_866_ap_return_2;
                p_int_vx27_assign_4_reg_2191 <= grp_kick_fu_866_ap_return_3;
                p_int_vx28_assign_4_reg_2198 <= grp_kick_fu_866_ap_return_4;
                p_int_vx29_assign_4_reg_2205 <= grp_kick_fu_866_ap_return_5;
                p_int_vx30_assign_4_reg_2212 <= grp_kick_fu_866_ap_return_6;
                p_int_vx3138_assign_4_reg_2219 <= grp_kick_fu_866_ap_return_7;
                p_int_vx32_assign_4_reg_2226 <= grp_kick_fu_866_ap_return_8;
                p_int_vx_assign_4_reg_2170 <= grp_kick_fu_866_ap_return_0;
                p_int_vy33_assign_4_reg_2240 <= grp_kick_fu_866_ap_return_10;
                p_int_vy34_assign_4_reg_2247 <= grp_kick_fu_866_ap_return_11;
                p_int_vy35_assign_4_reg_2254 <= grp_kick_fu_866_ap_return_12;
                p_int_vy36_assign_4_reg_2261 <= grp_kick_fu_866_ap_return_13;
                p_int_vy37_assign_4_reg_2268 <= grp_kick_fu_866_ap_return_14;
                p_int_vy38_assign_4_reg_2275 <= grp_kick_fu_866_ap_return_15;
                p_int_vy39_assign_4_reg_2282 <= grp_kick_fu_866_ap_return_16;
                p_int_vy40_assign_4_reg_2289 <= grp_kick_fu_866_ap_return_17;
                p_int_vy_assign_4_reg_2233 <= grp_kick_fu_866_ap_return_9;
                p_int_vz41_assign_4_reg_2303 <= grp_kick_fu_866_ap_return_19;
                p_int_vz42_assign_4_reg_2310 <= grp_kick_fu_866_ap_return_20;
                p_int_vz43_assign_4_reg_2317 <= grp_kick_fu_866_ap_return_21;
                p_int_vz44_assign_4_reg_2324 <= grp_kick_fu_866_ap_return_22;
                p_int_vz45_assign_4_reg_2331 <= grp_kick_fu_866_ap_return_23;
                p_int_vz46_assign_4_reg_2338 <= grp_kick_fu_866_ap_return_24;
                p_int_vz47_assign_4_reg_2345 <= grp_kick_fu_866_ap_return_25;
                p_int_vz48_assign_4_reg_2352 <= grp_kick_fu_866_ap_return_26;
                p_int_vz_assign_4_reg_2296 <= grp_kick_fu_866_ap_return_18;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_drift_fu_754_ap_done = ap_const_logic_1)) or ((grp_drift_fu_754_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then
                reg_1252 <= grp_drift_fu_754_ap_return_0;
                reg_1258 <= grp_drift_fu_754_ap_return_1;
                reg_1264 <= grp_drift_fu_754_ap_return_2;
                reg_1270 <= grp_drift_fu_754_ap_return_3;
                reg_1276 <= grp_drift_fu_754_ap_return_4;
                reg_1282 <= grp_drift_fu_754_ap_return_5;
                reg_1288 <= grp_drift_fu_754_ap_return_6;
                reg_1294 <= grp_drift_fu_754_ap_return_7;
                reg_1300 <= grp_drift_fu_754_ap_return_8;
                reg_1306 <= grp_drift_fu_754_ap_return_9;
                reg_1312 <= grp_drift_fu_754_ap_return_10;
                reg_1318 <= grp_drift_fu_754_ap_return_11;
                reg_1324 <= grp_drift_fu_754_ap_return_12;
                reg_1330 <= grp_drift_fu_754_ap_return_13;
                reg_1336 <= grp_drift_fu_754_ap_return_14;
                reg_1342 <= grp_drift_fu_754_ap_return_15;
                reg_1348 <= grp_drift_fu_754_ap_return_16;
                reg_1354 <= grp_drift_fu_754_ap_return_17;
                reg_1360 <= grp_drift_fu_754_ap_return_18;
                reg_1366 <= grp_drift_fu_754_ap_return_19;
                reg_1372 <= grp_drift_fu_754_ap_return_20;
                reg_1378 <= grp_drift_fu_754_ap_return_21;
                reg_1384 <= grp_drift_fu_754_ap_return_22;
                reg_1390 <= grp_drift_fu_754_ap_return_23;
                reg_1396 <= grp_drift_fu_754_ap_return_24;
                reg_1402 <= grp_drift_fu_754_ap_return_25;
                reg_1408 <= grp_drift_fu_754_ap_return_26;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, grp_drift_fu_754_ap_done, ap_CS_fsm_state8, ap_CS_fsm_state7, grp_kick_fu_866_ap_done, grp_gravity_fu_624_ap_done, grp_to_double_fu_951_ap_done, ap_CS_fsm_state5, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_drift_fu_754_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_to_double_fu_951_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_gravity_fu_624_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_kick_fu_866_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((grp_drift_fu_754_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (grp_to_double_fu_951_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_to_double_fu_951_ap_done, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (grp_to_double_fu_951_ap_done = ap_const_logic_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_to_double_fu_951_ap_done, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (grp_to_double_fu_951_ap_done = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= reg_1252;
    ap_return_1 <= reg_1258;
    ap_return_10 <= reg_1312;
    ap_return_11 <= reg_1318;
    ap_return_12 <= reg_1324;
    ap_return_13 <= reg_1330;
    ap_return_14 <= reg_1336;
    ap_return_15 <= reg_1342;
    ap_return_16 <= reg_1348;
    ap_return_17 <= reg_1354;
    ap_return_18 <= reg_1360;
    ap_return_19 <= reg_1366;
    ap_return_2 <= reg_1264;
    ap_return_20 <= reg_1372;
    ap_return_21 <= reg_1378;
    ap_return_22 <= reg_1384;
    ap_return_23 <= reg_1390;
    ap_return_24 <= reg_1396;
    ap_return_25 <= reg_1402;
    ap_return_26 <= reg_1408;
    ap_return_27 <= p_int_vx_assign_4_reg_2170;
    ap_return_28 <= p_int_vx25_assign_4_reg_2177;
    ap_return_29 <= p_int_vx26_assign_4_reg_2184;
    ap_return_3 <= reg_1270;
    ap_return_30 <= p_int_vx27_assign_4_reg_2191;
    ap_return_31 <= p_int_vx28_assign_4_reg_2198;
    ap_return_32 <= p_int_vx29_assign_4_reg_2205;
    ap_return_33 <= p_int_vx30_assign_4_reg_2212;
    ap_return_34 <= p_int_vx3138_assign_4_reg_2219;
    ap_return_35 <= p_int_vx32_assign_4_reg_2226;
    ap_return_36 <= p_int_vy_assign_4_reg_2233;
    ap_return_37 <= p_int_vy33_assign_4_reg_2240;
    ap_return_38 <= p_int_vy34_assign_4_reg_2247;
    ap_return_39 <= p_int_vy35_assign_4_reg_2254;
    ap_return_4 <= reg_1276;
    ap_return_40 <= p_int_vy36_assign_4_reg_2261;
    ap_return_41 <= p_int_vy37_assign_4_reg_2268;
    ap_return_42 <= p_int_vy38_assign_4_reg_2275;
    ap_return_43 <= p_int_vy39_assign_4_reg_2282;
    ap_return_44 <= p_int_vy40_assign_4_reg_2289;
    ap_return_45 <= p_int_vz_assign_4_reg_2296;
    ap_return_46 <= p_int_vz41_assign_4_reg_2303;
    ap_return_47 <= p_int_vz42_assign_4_reg_2310;
    ap_return_48 <= p_int_vz43_assign_4_reg_2317;
    ap_return_49 <= p_int_vz44_assign_4_reg_2324;
    ap_return_5 <= reg_1282;
    ap_return_50 <= p_int_vz45_assign_4_reg_2331;
    ap_return_51 <= p_int_vz46_assign_4_reg_2338;
    ap_return_52 <= p_int_vz47_assign_4_reg_2345;
    ap_return_53 <= p_int_vz48_assign_4_reg_2352;
    ap_return_6 <= reg_1288;
    ap_return_7 <= reg_1294;
    ap_return_8 <= reg_1300;
    ap_return_9 <= reg_1306;
    grp_drift_fu_754_ap_start <= ap_reg_grp_drift_fu_754_ap_start;

    grp_drift_fu_754_p_int_0_vx_read_assign_proc : process(p_int_0_vx_read, ap_CS_fsm_state2, ap_CS_fsm_state8, p_int_vx_assign_4_reg_2170)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_0_vx_read <= p_int_vx_assign_4_reg_2170;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_0_vx_read <= p_int_0_vx_read;
        else 
            grp_drift_fu_754_p_int_0_vx_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_0_vy_read_assign_proc : process(p_int_0_vy_read, ap_CS_fsm_state2, ap_CS_fsm_state8, p_int_vy_assign_4_reg_2233)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_0_vy_read <= p_int_vy_assign_4_reg_2233;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_0_vy_read <= p_int_0_vy_read;
        else 
            grp_drift_fu_754_p_int_0_vy_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_0_vz_read_assign_proc : process(p_int_0_vz_read, ap_CS_fsm_state2, ap_CS_fsm_state8, p_int_vz_assign_4_reg_2296)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_0_vz_read <= p_int_vz_assign_4_reg_2296;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_0_vz_read <= p_int_0_vz_read;
        else 
            grp_drift_fu_754_p_int_0_vz_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_0_x_read_assign_proc : process(p_int_0_x_read, reg_1252, ap_CS_fsm_state2, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_0_x_read <= reg_1252;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_0_x_read <= p_int_0_x_read;
        else 
            grp_drift_fu_754_p_int_0_x_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_0_y_read_assign_proc : process(p_int_0_y_read, ap_CS_fsm_state2, ap_CS_fsm_state8, reg_1306)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_0_y_read <= reg_1306;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_0_y_read <= p_int_0_y_read;
        else 
            grp_drift_fu_754_p_int_0_y_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_0_z_read_assign_proc : process(p_int_0_z_read, ap_CS_fsm_state2, ap_CS_fsm_state8, reg_1360)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_0_z_read <= reg_1360;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_0_z_read <= p_int_0_z_read;
        else 
            grp_drift_fu_754_p_int_0_z_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_1_vx_read_assign_proc : process(p_int_1_vx_read, ap_CS_fsm_state2, ap_CS_fsm_state8, p_int_vx25_assign_4_reg_2177)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_1_vx_read <= p_int_vx25_assign_4_reg_2177;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_1_vx_read <= p_int_1_vx_read;
        else 
            grp_drift_fu_754_p_int_1_vx_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_1_vy_read_assign_proc : process(p_int_1_vy_read, ap_CS_fsm_state2, ap_CS_fsm_state8, p_int_vy33_assign_4_reg_2240)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_1_vy_read <= p_int_vy33_assign_4_reg_2240;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_1_vy_read <= p_int_1_vy_read;
        else 
            grp_drift_fu_754_p_int_1_vy_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_1_vz_read_assign_proc : process(p_int_1_vz_read, ap_CS_fsm_state2, ap_CS_fsm_state8, p_int_vz41_assign_4_reg_2303)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_1_vz_read <= p_int_vz41_assign_4_reg_2303;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_1_vz_read <= p_int_1_vz_read;
        else 
            grp_drift_fu_754_p_int_1_vz_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_1_x_read_assign_proc : process(p_int_1_x_read, ap_CS_fsm_state2, ap_CS_fsm_state8, reg_1258)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_1_x_read <= reg_1258;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_1_x_read <= p_int_1_x_read;
        else 
            grp_drift_fu_754_p_int_1_x_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_1_y_read_assign_proc : process(p_int_1_y_read, ap_CS_fsm_state2, ap_CS_fsm_state8, reg_1312)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_1_y_read <= reg_1312;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_1_y_read <= p_int_1_y_read;
        else 
            grp_drift_fu_754_p_int_1_y_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_1_z_read_assign_proc : process(p_int_1_z_read, ap_CS_fsm_state2, ap_CS_fsm_state8, reg_1366)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_1_z_read <= reg_1366;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_1_z_read <= p_int_1_z_read;
        else 
            grp_drift_fu_754_p_int_1_z_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_2_vx_read_assign_proc : process(p_int_2_vx_read, ap_CS_fsm_state2, ap_CS_fsm_state8, p_int_vx26_assign_4_reg_2184)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_2_vx_read <= p_int_vx26_assign_4_reg_2184;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_2_vx_read <= p_int_2_vx_read;
        else 
            grp_drift_fu_754_p_int_2_vx_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_2_vy_read_assign_proc : process(p_int_2_vy_read, ap_CS_fsm_state2, ap_CS_fsm_state8, p_int_vy34_assign_4_reg_2247)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_2_vy_read <= p_int_vy34_assign_4_reg_2247;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_2_vy_read <= p_int_2_vy_read;
        else 
            grp_drift_fu_754_p_int_2_vy_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_2_vz_read_assign_proc : process(p_int_2_vz_read, ap_CS_fsm_state2, ap_CS_fsm_state8, p_int_vz42_assign_4_reg_2310)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_2_vz_read <= p_int_vz42_assign_4_reg_2310;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_2_vz_read <= p_int_2_vz_read;
        else 
            grp_drift_fu_754_p_int_2_vz_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_2_x_read_assign_proc : process(p_int_2_x_read, ap_CS_fsm_state2, ap_CS_fsm_state8, reg_1264)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_2_x_read <= reg_1264;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_2_x_read <= p_int_2_x_read;
        else 
            grp_drift_fu_754_p_int_2_x_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_2_y_read_assign_proc : process(p_int_2_y_read, ap_CS_fsm_state2, ap_CS_fsm_state8, reg_1318)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_2_y_read <= reg_1318;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_2_y_read <= p_int_2_y_read;
        else 
            grp_drift_fu_754_p_int_2_y_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_2_z_read_assign_proc : process(p_int_2_z_read, ap_CS_fsm_state2, ap_CS_fsm_state8, reg_1372)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_2_z_read <= reg_1372;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_2_z_read <= p_int_2_z_read;
        else 
            grp_drift_fu_754_p_int_2_z_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_3_vx_read_assign_proc : process(p_int_3_vx_read, ap_CS_fsm_state2, ap_CS_fsm_state8, p_int_vx27_assign_4_reg_2191)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_3_vx_read <= p_int_vx27_assign_4_reg_2191;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_3_vx_read <= p_int_3_vx_read;
        else 
            grp_drift_fu_754_p_int_3_vx_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_3_vy_read_assign_proc : process(p_int_3_vy_read, ap_CS_fsm_state2, ap_CS_fsm_state8, p_int_vy35_assign_4_reg_2254)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_3_vy_read <= p_int_vy35_assign_4_reg_2254;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_3_vy_read <= p_int_3_vy_read;
        else 
            grp_drift_fu_754_p_int_3_vy_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_3_vz_read_assign_proc : process(p_int_3_vz_read, ap_CS_fsm_state2, ap_CS_fsm_state8, p_int_vz43_assign_4_reg_2317)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_3_vz_read <= p_int_vz43_assign_4_reg_2317;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_3_vz_read <= p_int_3_vz_read;
        else 
            grp_drift_fu_754_p_int_3_vz_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_3_x_read_assign_proc : process(p_int_3_x_read, ap_CS_fsm_state2, ap_CS_fsm_state8, reg_1270)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_3_x_read <= reg_1270;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_3_x_read <= p_int_3_x_read;
        else 
            grp_drift_fu_754_p_int_3_x_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_3_y_read_assign_proc : process(p_int_3_y_read, ap_CS_fsm_state2, ap_CS_fsm_state8, reg_1324)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_3_y_read <= reg_1324;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_3_y_read <= p_int_3_y_read;
        else 
            grp_drift_fu_754_p_int_3_y_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_3_z_read_assign_proc : process(p_int_3_z_read, ap_CS_fsm_state2, ap_CS_fsm_state8, reg_1378)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_3_z_read <= reg_1378;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_3_z_read <= p_int_3_z_read;
        else 
            grp_drift_fu_754_p_int_3_z_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_4_vx_read_assign_proc : process(p_int_4_vx_read, ap_CS_fsm_state2, ap_CS_fsm_state8, p_int_vx28_assign_4_reg_2198)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_4_vx_read <= p_int_vx28_assign_4_reg_2198;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_4_vx_read <= p_int_4_vx_read;
        else 
            grp_drift_fu_754_p_int_4_vx_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_4_vy_read_assign_proc : process(p_int_4_vy_read, ap_CS_fsm_state2, ap_CS_fsm_state8, p_int_vy36_assign_4_reg_2261)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_4_vy_read <= p_int_vy36_assign_4_reg_2261;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_4_vy_read <= p_int_4_vy_read;
        else 
            grp_drift_fu_754_p_int_4_vy_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_4_vz_read_assign_proc : process(p_int_4_vz_read, ap_CS_fsm_state2, ap_CS_fsm_state8, p_int_vz44_assign_4_reg_2324)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_4_vz_read <= p_int_vz44_assign_4_reg_2324;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_4_vz_read <= p_int_4_vz_read;
        else 
            grp_drift_fu_754_p_int_4_vz_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_4_x_read_assign_proc : process(p_int_4_x_read, ap_CS_fsm_state2, ap_CS_fsm_state8, reg_1276)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_4_x_read <= reg_1276;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_4_x_read <= p_int_4_x_read;
        else 
            grp_drift_fu_754_p_int_4_x_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_4_y_read_assign_proc : process(p_int_4_y_read, ap_CS_fsm_state2, ap_CS_fsm_state8, reg_1330)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_4_y_read <= reg_1330;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_4_y_read <= p_int_4_y_read;
        else 
            grp_drift_fu_754_p_int_4_y_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_4_z_read_assign_proc : process(p_int_4_z_read, ap_CS_fsm_state2, ap_CS_fsm_state8, reg_1384)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_4_z_read <= reg_1384;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_4_z_read <= p_int_4_z_read;
        else 
            grp_drift_fu_754_p_int_4_z_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_5_vx_read_assign_proc : process(p_int_5_vx_read, ap_CS_fsm_state2, ap_CS_fsm_state8, p_int_vx29_assign_4_reg_2205)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_5_vx_read <= p_int_vx29_assign_4_reg_2205;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_5_vx_read <= p_int_5_vx_read;
        else 
            grp_drift_fu_754_p_int_5_vx_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_5_vy_read_assign_proc : process(p_int_5_vy_read, ap_CS_fsm_state2, ap_CS_fsm_state8, p_int_vy37_assign_4_reg_2268)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_5_vy_read <= p_int_vy37_assign_4_reg_2268;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_5_vy_read <= p_int_5_vy_read;
        else 
            grp_drift_fu_754_p_int_5_vy_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_5_vz_read_assign_proc : process(p_int_5_vz_read, ap_CS_fsm_state2, ap_CS_fsm_state8, p_int_vz45_assign_4_reg_2331)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_5_vz_read <= p_int_vz45_assign_4_reg_2331;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_5_vz_read <= p_int_5_vz_read;
        else 
            grp_drift_fu_754_p_int_5_vz_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_5_x_read_assign_proc : process(p_int_5_x_read, ap_CS_fsm_state2, ap_CS_fsm_state8, reg_1282)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_5_x_read <= reg_1282;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_5_x_read <= p_int_5_x_read;
        else 
            grp_drift_fu_754_p_int_5_x_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_5_y_read_assign_proc : process(p_int_5_y_read, ap_CS_fsm_state2, ap_CS_fsm_state8, reg_1336)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_5_y_read <= reg_1336;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_5_y_read <= p_int_5_y_read;
        else 
            grp_drift_fu_754_p_int_5_y_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_5_z_read_assign_proc : process(p_int_5_z_read, ap_CS_fsm_state2, ap_CS_fsm_state8, reg_1390)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_5_z_read <= reg_1390;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_5_z_read <= p_int_5_z_read;
        else 
            grp_drift_fu_754_p_int_5_z_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_6_vx_read_assign_proc : process(p_int_6_vx_read, ap_CS_fsm_state2, ap_CS_fsm_state8, p_int_vx30_assign_4_reg_2212)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_6_vx_read <= p_int_vx30_assign_4_reg_2212;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_6_vx_read <= p_int_6_vx_read;
        else 
            grp_drift_fu_754_p_int_6_vx_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_6_vy_read_assign_proc : process(p_int_6_vy_read, ap_CS_fsm_state2, ap_CS_fsm_state8, p_int_vy38_assign_4_reg_2275)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_6_vy_read <= p_int_vy38_assign_4_reg_2275;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_6_vy_read <= p_int_6_vy_read;
        else 
            grp_drift_fu_754_p_int_6_vy_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_6_vz_read_assign_proc : process(p_int_6_vz_read, ap_CS_fsm_state2, ap_CS_fsm_state8, p_int_vz46_assign_4_reg_2338)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_6_vz_read <= p_int_vz46_assign_4_reg_2338;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_6_vz_read <= p_int_6_vz_read;
        else 
            grp_drift_fu_754_p_int_6_vz_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_6_x_read_assign_proc : process(p_int_6_x_read, ap_CS_fsm_state2, ap_CS_fsm_state8, reg_1288)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_6_x_read <= reg_1288;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_6_x_read <= p_int_6_x_read;
        else 
            grp_drift_fu_754_p_int_6_x_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_6_y_read_assign_proc : process(p_int_6_y_read, ap_CS_fsm_state2, ap_CS_fsm_state8, reg_1342)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_6_y_read <= reg_1342;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_6_y_read <= p_int_6_y_read;
        else 
            grp_drift_fu_754_p_int_6_y_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_6_z_read_assign_proc : process(p_int_6_z_read, ap_CS_fsm_state2, ap_CS_fsm_state8, reg_1396)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_6_z_read <= reg_1396;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_6_z_read <= p_int_6_z_read;
        else 
            grp_drift_fu_754_p_int_6_z_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_7_vx_read_assign_proc : process(p_int_7_vx_read, ap_CS_fsm_state2, ap_CS_fsm_state8, p_int_vx3138_assign_4_reg_2219)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_7_vx_read <= p_int_vx3138_assign_4_reg_2219;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_7_vx_read <= p_int_7_vx_read;
        else 
            grp_drift_fu_754_p_int_7_vx_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_7_vy_read_assign_proc : process(p_int_7_vy_read, ap_CS_fsm_state2, ap_CS_fsm_state8, p_int_vy39_assign_4_reg_2282)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_7_vy_read <= p_int_vy39_assign_4_reg_2282;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_7_vy_read <= p_int_7_vy_read;
        else 
            grp_drift_fu_754_p_int_7_vy_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_7_vz_read_assign_proc : process(p_int_7_vz_read, ap_CS_fsm_state2, ap_CS_fsm_state8, p_int_vz47_assign_4_reg_2345)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_7_vz_read <= p_int_vz47_assign_4_reg_2345;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_7_vz_read <= p_int_7_vz_read;
        else 
            grp_drift_fu_754_p_int_7_vz_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_7_x_read_assign_proc : process(p_int_7_x_read, ap_CS_fsm_state2, ap_CS_fsm_state8, reg_1294)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_7_x_read <= reg_1294;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_7_x_read <= p_int_7_x_read;
        else 
            grp_drift_fu_754_p_int_7_x_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_7_y_read_assign_proc : process(p_int_7_y_read, ap_CS_fsm_state2, ap_CS_fsm_state8, reg_1348)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_7_y_read <= reg_1348;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_7_y_read <= p_int_7_y_read;
        else 
            grp_drift_fu_754_p_int_7_y_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_7_z_read_assign_proc : process(p_int_7_z_read, ap_CS_fsm_state2, ap_CS_fsm_state8, reg_1402)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_7_z_read <= reg_1402;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_7_z_read <= p_int_7_z_read;
        else 
            grp_drift_fu_754_p_int_7_z_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_8_vx_read_assign_proc : process(p_int_8_vx_read, ap_CS_fsm_state2, ap_CS_fsm_state8, p_int_vx32_assign_4_reg_2226)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_8_vx_read <= p_int_vx32_assign_4_reg_2226;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_8_vx_read <= p_int_8_vx_read;
        else 
            grp_drift_fu_754_p_int_8_vx_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_8_vy_read_assign_proc : process(p_int_8_vy_read, ap_CS_fsm_state2, ap_CS_fsm_state8, p_int_vy40_assign_4_reg_2289)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_8_vy_read <= p_int_vy40_assign_4_reg_2289;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_8_vy_read <= p_int_8_vy_read;
        else 
            grp_drift_fu_754_p_int_8_vy_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_8_vz_read_assign_proc : process(p_int_8_vz_read, ap_CS_fsm_state2, ap_CS_fsm_state8, p_int_vz48_assign_4_reg_2352)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_8_vz_read <= p_int_vz48_assign_4_reg_2352;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_8_vz_read <= p_int_8_vz_read;
        else 
            grp_drift_fu_754_p_int_8_vz_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_8_x_read_assign_proc : process(p_int_8_x_read, ap_CS_fsm_state2, ap_CS_fsm_state8, reg_1300)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_8_x_read <= reg_1300;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_8_x_read <= p_int_8_x_read;
        else 
            grp_drift_fu_754_p_int_8_x_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_8_y_read_assign_proc : process(p_int_8_y_read, ap_CS_fsm_state2, ap_CS_fsm_state8, reg_1354)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_8_y_read <= reg_1354;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_8_y_read <= p_int_8_y_read;
        else 
            grp_drift_fu_754_p_int_8_y_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_drift_fu_754_p_int_8_z_read_assign_proc : process(p_int_8_z_read, ap_CS_fsm_state2, ap_CS_fsm_state8, reg_1408)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_drift_fu_754_p_int_8_z_read <= reg_1408;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_drift_fu_754_p_int_8_z_read <= p_int_8_z_read;
        else 
            grp_drift_fu_754_p_int_8_z_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_gravity_fu_624_ap_start <= ap_reg_grp_gravity_fu_624_ap_start;
    grp_kick_fu_866_ap_start <= ap_reg_grp_kick_fu_866_ap_start;
    grp_to_double_fu_951_ap_start <= ap_reg_grp_to_double_fu_951_ap_start;

    grp_to_double_fu_951_p_int_0_vx_read_assign_proc : process(p_int_0_vx_read, p_int_vx_assign_4_reg_2170, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_to_double_fu_951_p_int_0_vx_read <= p_int_vx_assign_4_reg_2170;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_to_double_fu_951_p_int_0_vx_read <= p_int_0_vx_read;
        else 
            grp_to_double_fu_951_p_int_0_vx_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_to_double_fu_951_p_int_0_vy_read_assign_proc : process(p_int_0_vy_read, p_int_vy_assign_4_reg_2233, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_to_double_fu_951_p_int_0_vy_read <= p_int_vy_assign_4_reg_2233;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_to_double_fu_951_p_int_0_vy_read <= p_int_0_vy_read;
        else 
            grp_to_double_fu_951_p_int_0_vy_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_to_double_fu_951_p_int_0_vz_read_assign_proc : process(p_int_0_vz_read, p_int_vz_assign_4_reg_2296, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_to_double_fu_951_p_int_0_vz_read <= p_int_vz_assign_4_reg_2296;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_to_double_fu_951_p_int_0_vz_read <= p_int_0_vz_read;
        else 
            grp_to_double_fu_951_p_int_0_vz_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_to_double_fu_951_p_int_1_vx_read_assign_proc : process(p_int_1_vx_read, p_int_vx25_assign_4_reg_2177, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_to_double_fu_951_p_int_1_vx_read <= p_int_vx25_assign_4_reg_2177;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_to_double_fu_951_p_int_1_vx_read <= p_int_1_vx_read;
        else 
            grp_to_double_fu_951_p_int_1_vx_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_to_double_fu_951_p_int_1_vy_read_assign_proc : process(p_int_1_vy_read, p_int_vy33_assign_4_reg_2240, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_to_double_fu_951_p_int_1_vy_read <= p_int_vy33_assign_4_reg_2240;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_to_double_fu_951_p_int_1_vy_read <= p_int_1_vy_read;
        else 
            grp_to_double_fu_951_p_int_1_vy_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_to_double_fu_951_p_int_1_vz_read_assign_proc : process(p_int_1_vz_read, p_int_vz41_assign_4_reg_2303, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_to_double_fu_951_p_int_1_vz_read <= p_int_vz41_assign_4_reg_2303;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_to_double_fu_951_p_int_1_vz_read <= p_int_1_vz_read;
        else 
            grp_to_double_fu_951_p_int_1_vz_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_to_double_fu_951_p_int_2_vx_read_assign_proc : process(p_int_2_vx_read, p_int_vx26_assign_4_reg_2184, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_to_double_fu_951_p_int_2_vx_read <= p_int_vx26_assign_4_reg_2184;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_to_double_fu_951_p_int_2_vx_read <= p_int_2_vx_read;
        else 
            grp_to_double_fu_951_p_int_2_vx_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_to_double_fu_951_p_int_2_vy_read_assign_proc : process(p_int_2_vy_read, p_int_vy34_assign_4_reg_2247, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_to_double_fu_951_p_int_2_vy_read <= p_int_vy34_assign_4_reg_2247;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_to_double_fu_951_p_int_2_vy_read <= p_int_2_vy_read;
        else 
            grp_to_double_fu_951_p_int_2_vy_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_to_double_fu_951_p_int_2_vz_read_assign_proc : process(p_int_2_vz_read, p_int_vz42_assign_4_reg_2310, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_to_double_fu_951_p_int_2_vz_read <= p_int_vz42_assign_4_reg_2310;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_to_double_fu_951_p_int_2_vz_read <= p_int_2_vz_read;
        else 
            grp_to_double_fu_951_p_int_2_vz_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_to_double_fu_951_p_int_3_vx_read_assign_proc : process(p_int_3_vx_read, p_int_vx27_assign_4_reg_2191, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_to_double_fu_951_p_int_3_vx_read <= p_int_vx27_assign_4_reg_2191;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_to_double_fu_951_p_int_3_vx_read <= p_int_3_vx_read;
        else 
            grp_to_double_fu_951_p_int_3_vx_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_to_double_fu_951_p_int_3_vy_read_assign_proc : process(p_int_3_vy_read, p_int_vy35_assign_4_reg_2254, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_to_double_fu_951_p_int_3_vy_read <= p_int_vy35_assign_4_reg_2254;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_to_double_fu_951_p_int_3_vy_read <= p_int_3_vy_read;
        else 
            grp_to_double_fu_951_p_int_3_vy_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_to_double_fu_951_p_int_3_vz_read_assign_proc : process(p_int_3_vz_read, p_int_vz43_assign_4_reg_2317, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_to_double_fu_951_p_int_3_vz_read <= p_int_vz43_assign_4_reg_2317;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_to_double_fu_951_p_int_3_vz_read <= p_int_3_vz_read;
        else 
            grp_to_double_fu_951_p_int_3_vz_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_to_double_fu_951_p_int_4_vx_read_assign_proc : process(p_int_4_vx_read, p_int_vx28_assign_4_reg_2198, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_to_double_fu_951_p_int_4_vx_read <= p_int_vx28_assign_4_reg_2198;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_to_double_fu_951_p_int_4_vx_read <= p_int_4_vx_read;
        else 
            grp_to_double_fu_951_p_int_4_vx_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_to_double_fu_951_p_int_4_vy_read_assign_proc : process(p_int_4_vy_read, p_int_vy36_assign_4_reg_2261, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_to_double_fu_951_p_int_4_vy_read <= p_int_vy36_assign_4_reg_2261;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_to_double_fu_951_p_int_4_vy_read <= p_int_4_vy_read;
        else 
            grp_to_double_fu_951_p_int_4_vy_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_to_double_fu_951_p_int_4_vz_read_assign_proc : process(p_int_4_vz_read, p_int_vz44_assign_4_reg_2324, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_to_double_fu_951_p_int_4_vz_read <= p_int_vz44_assign_4_reg_2324;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_to_double_fu_951_p_int_4_vz_read <= p_int_4_vz_read;
        else 
            grp_to_double_fu_951_p_int_4_vz_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_to_double_fu_951_p_int_5_vx_read_assign_proc : process(p_int_5_vx_read, p_int_vx29_assign_4_reg_2205, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_to_double_fu_951_p_int_5_vx_read <= p_int_vx29_assign_4_reg_2205;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_to_double_fu_951_p_int_5_vx_read <= p_int_5_vx_read;
        else 
            grp_to_double_fu_951_p_int_5_vx_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_to_double_fu_951_p_int_5_vy_read_assign_proc : process(p_int_5_vy_read, p_int_vy37_assign_4_reg_2268, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_to_double_fu_951_p_int_5_vy_read <= p_int_vy37_assign_4_reg_2268;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_to_double_fu_951_p_int_5_vy_read <= p_int_5_vy_read;
        else 
            grp_to_double_fu_951_p_int_5_vy_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_to_double_fu_951_p_int_5_vz_read_assign_proc : process(p_int_5_vz_read, p_int_vz45_assign_4_reg_2331, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_to_double_fu_951_p_int_5_vz_read <= p_int_vz45_assign_4_reg_2331;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_to_double_fu_951_p_int_5_vz_read <= p_int_5_vz_read;
        else 
            grp_to_double_fu_951_p_int_5_vz_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_to_double_fu_951_p_int_6_vx_read_assign_proc : process(p_int_6_vx_read, p_int_vx30_assign_4_reg_2212, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_to_double_fu_951_p_int_6_vx_read <= p_int_vx30_assign_4_reg_2212;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_to_double_fu_951_p_int_6_vx_read <= p_int_6_vx_read;
        else 
            grp_to_double_fu_951_p_int_6_vx_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_to_double_fu_951_p_int_6_vy_read_assign_proc : process(p_int_6_vy_read, p_int_vy38_assign_4_reg_2275, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_to_double_fu_951_p_int_6_vy_read <= p_int_vy38_assign_4_reg_2275;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_to_double_fu_951_p_int_6_vy_read <= p_int_6_vy_read;
        else 
            grp_to_double_fu_951_p_int_6_vy_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_to_double_fu_951_p_int_6_vz_read_assign_proc : process(p_int_6_vz_read, p_int_vz46_assign_4_reg_2338, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_to_double_fu_951_p_int_6_vz_read <= p_int_vz46_assign_4_reg_2338;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_to_double_fu_951_p_int_6_vz_read <= p_int_6_vz_read;
        else 
            grp_to_double_fu_951_p_int_6_vz_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_to_double_fu_951_p_int_7_vx_read_assign_proc : process(p_int_7_vx_read, p_int_vx3138_assign_4_reg_2219, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_to_double_fu_951_p_int_7_vx_read <= p_int_vx3138_assign_4_reg_2219;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_to_double_fu_951_p_int_7_vx_read <= p_int_7_vx_read;
        else 
            grp_to_double_fu_951_p_int_7_vx_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_to_double_fu_951_p_int_7_vy_read_assign_proc : process(p_int_7_vy_read, p_int_vy39_assign_4_reg_2282, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_to_double_fu_951_p_int_7_vy_read <= p_int_vy39_assign_4_reg_2282;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_to_double_fu_951_p_int_7_vy_read <= p_int_7_vy_read;
        else 
            grp_to_double_fu_951_p_int_7_vy_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_to_double_fu_951_p_int_7_vz_read_assign_proc : process(p_int_7_vz_read, p_int_vz47_assign_4_reg_2345, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_to_double_fu_951_p_int_7_vz_read <= p_int_vz47_assign_4_reg_2345;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_to_double_fu_951_p_int_7_vz_read <= p_int_7_vz_read;
        else 
            grp_to_double_fu_951_p_int_7_vz_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_to_double_fu_951_p_int_8_vx_read_assign_proc : process(p_int_8_vx_read, p_int_vx32_assign_4_reg_2226, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_to_double_fu_951_p_int_8_vx_read <= p_int_vx32_assign_4_reg_2226;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_to_double_fu_951_p_int_8_vx_read <= p_int_8_vx_read;
        else 
            grp_to_double_fu_951_p_int_8_vx_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_to_double_fu_951_p_int_8_vy_read_assign_proc : process(p_int_8_vy_read, p_int_vy40_assign_4_reg_2289, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_to_double_fu_951_p_int_8_vy_read <= p_int_vy40_assign_4_reg_2289;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_to_double_fu_951_p_int_8_vy_read <= p_int_8_vy_read;
        else 
            grp_to_double_fu_951_p_int_8_vy_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_to_double_fu_951_p_int_8_vz_read_assign_proc : process(p_int_8_vz_read, p_int_vz48_assign_4_reg_2352, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_to_double_fu_951_p_int_8_vz_read <= p_int_vz48_assign_4_reg_2352;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_to_double_fu_951_p_int_8_vz_read <= p_int_8_vz_read;
        else 
            grp_to_double_fu_951_p_int_8_vz_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_ax_0_o_assign_proc : process(p_ax_0_i, grp_gravity_fu_624_p_ax_0, grp_gravity_fu_624_p_ax_0_ap_vld, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = grp_gravity_fu_624_p_ax_0_ap_vld))) then 
            p_ax_0_o <= grp_gravity_fu_624_p_ax_0;
        else 
            p_ax_0_o <= p_ax_0_i;
        end if; 
    end process;


    p_ax_0_o_ap_vld_assign_proc : process(grp_gravity_fu_624_p_ax_0_ap_vld, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            p_ax_0_o_ap_vld <= grp_gravity_fu_624_p_ax_0_ap_vld;
        else 
            p_ax_0_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_ax_1_o_assign_proc : process(p_ax_1_i, grp_gravity_fu_624_p_ax_1, grp_gravity_fu_624_p_ax_1_ap_vld, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = grp_gravity_fu_624_p_ax_1_ap_vld))) then 
            p_ax_1_o <= grp_gravity_fu_624_p_ax_1;
        else 
            p_ax_1_o <= p_ax_1_i;
        end if; 
    end process;


    p_ax_1_o_ap_vld_assign_proc : process(grp_gravity_fu_624_p_ax_1_ap_vld, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            p_ax_1_o_ap_vld <= grp_gravity_fu_624_p_ax_1_ap_vld;
        else 
            p_ax_1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_ax_2_o_assign_proc : process(p_ax_2_i, grp_gravity_fu_624_p_ax_2, grp_gravity_fu_624_p_ax_2_ap_vld, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = grp_gravity_fu_624_p_ax_2_ap_vld))) then 
            p_ax_2_o <= grp_gravity_fu_624_p_ax_2;
        else 
            p_ax_2_o <= p_ax_2_i;
        end if; 
    end process;


    p_ax_2_o_ap_vld_assign_proc : process(grp_gravity_fu_624_p_ax_2_ap_vld, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            p_ax_2_o_ap_vld <= grp_gravity_fu_624_p_ax_2_ap_vld;
        else 
            p_ax_2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_ax_3_o_assign_proc : process(p_ax_3_i, grp_gravity_fu_624_p_ax_3, grp_gravity_fu_624_p_ax_3_ap_vld, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = grp_gravity_fu_624_p_ax_3_ap_vld))) then 
            p_ax_3_o <= grp_gravity_fu_624_p_ax_3;
        else 
            p_ax_3_o <= p_ax_3_i;
        end if; 
    end process;


    p_ax_3_o_ap_vld_assign_proc : process(grp_gravity_fu_624_p_ax_3_ap_vld, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            p_ax_3_o_ap_vld <= grp_gravity_fu_624_p_ax_3_ap_vld;
        else 
            p_ax_3_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_ax_4_o_assign_proc : process(p_ax_4_i, grp_gravity_fu_624_p_ax_4, grp_gravity_fu_624_p_ax_4_ap_vld, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = grp_gravity_fu_624_p_ax_4_ap_vld))) then 
            p_ax_4_o <= grp_gravity_fu_624_p_ax_4;
        else 
            p_ax_4_o <= p_ax_4_i;
        end if; 
    end process;


    p_ax_4_o_ap_vld_assign_proc : process(grp_gravity_fu_624_p_ax_4_ap_vld, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            p_ax_4_o_ap_vld <= grp_gravity_fu_624_p_ax_4_ap_vld;
        else 
            p_ax_4_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_ax_5_o_assign_proc : process(p_ax_5_i, grp_gravity_fu_624_p_ax_5, grp_gravity_fu_624_p_ax_5_ap_vld, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = grp_gravity_fu_624_p_ax_5_ap_vld))) then 
            p_ax_5_o <= grp_gravity_fu_624_p_ax_5;
        else 
            p_ax_5_o <= p_ax_5_i;
        end if; 
    end process;


    p_ax_5_o_ap_vld_assign_proc : process(grp_gravity_fu_624_p_ax_5_ap_vld, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            p_ax_5_o_ap_vld <= grp_gravity_fu_624_p_ax_5_ap_vld;
        else 
            p_ax_5_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_ay_0_o_assign_proc : process(p_ay_0_i, grp_gravity_fu_624_p_ay_0, grp_gravity_fu_624_p_ay_0_ap_vld, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = grp_gravity_fu_624_p_ay_0_ap_vld))) then 
            p_ay_0_o <= grp_gravity_fu_624_p_ay_0;
        else 
            p_ay_0_o <= p_ay_0_i;
        end if; 
    end process;


    p_ay_0_o_ap_vld_assign_proc : process(grp_gravity_fu_624_p_ay_0_ap_vld, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            p_ay_0_o_ap_vld <= grp_gravity_fu_624_p_ay_0_ap_vld;
        else 
            p_ay_0_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_ay_1_o_assign_proc : process(p_ay_1_i, grp_gravity_fu_624_p_ay_1, grp_gravity_fu_624_p_ay_1_ap_vld, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = grp_gravity_fu_624_p_ay_1_ap_vld))) then 
            p_ay_1_o <= grp_gravity_fu_624_p_ay_1;
        else 
            p_ay_1_o <= p_ay_1_i;
        end if; 
    end process;


    p_ay_1_o_ap_vld_assign_proc : process(grp_gravity_fu_624_p_ay_1_ap_vld, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            p_ay_1_o_ap_vld <= grp_gravity_fu_624_p_ay_1_ap_vld;
        else 
            p_ay_1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_ay_2_o_assign_proc : process(p_ay_2_i, grp_gravity_fu_624_p_ay_2, grp_gravity_fu_624_p_ay_2_ap_vld, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = grp_gravity_fu_624_p_ay_2_ap_vld))) then 
            p_ay_2_o <= grp_gravity_fu_624_p_ay_2;
        else 
            p_ay_2_o <= p_ay_2_i;
        end if; 
    end process;


    p_ay_2_o_ap_vld_assign_proc : process(grp_gravity_fu_624_p_ay_2_ap_vld, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            p_ay_2_o_ap_vld <= grp_gravity_fu_624_p_ay_2_ap_vld;
        else 
            p_ay_2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_ay_3_o_assign_proc : process(p_ay_3_i, grp_gravity_fu_624_p_ay_3, grp_gravity_fu_624_p_ay_3_ap_vld, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = grp_gravity_fu_624_p_ay_3_ap_vld))) then 
            p_ay_3_o <= grp_gravity_fu_624_p_ay_3;
        else 
            p_ay_3_o <= p_ay_3_i;
        end if; 
    end process;


    p_ay_3_o_ap_vld_assign_proc : process(grp_gravity_fu_624_p_ay_3_ap_vld, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            p_ay_3_o_ap_vld <= grp_gravity_fu_624_p_ay_3_ap_vld;
        else 
            p_ay_3_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_ay_4_o_assign_proc : process(p_ay_4_i, grp_gravity_fu_624_p_ay_4, grp_gravity_fu_624_p_ay_4_ap_vld, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = grp_gravity_fu_624_p_ay_4_ap_vld))) then 
            p_ay_4_o <= grp_gravity_fu_624_p_ay_4;
        else 
            p_ay_4_o <= p_ay_4_i;
        end if; 
    end process;


    p_ay_4_o_ap_vld_assign_proc : process(grp_gravity_fu_624_p_ay_4_ap_vld, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            p_ay_4_o_ap_vld <= grp_gravity_fu_624_p_ay_4_ap_vld;
        else 
            p_ay_4_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_ay_5_o_assign_proc : process(p_ay_5_i, grp_gravity_fu_624_p_ay_5, grp_gravity_fu_624_p_ay_5_ap_vld, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = grp_gravity_fu_624_p_ay_5_ap_vld))) then 
            p_ay_5_o <= grp_gravity_fu_624_p_ay_5;
        else 
            p_ay_5_o <= p_ay_5_i;
        end if; 
    end process;


    p_ay_5_o_ap_vld_assign_proc : process(grp_gravity_fu_624_p_ay_5_ap_vld, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            p_ay_5_o_ap_vld <= grp_gravity_fu_624_p_ay_5_ap_vld;
        else 
            p_ay_5_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_az_0_o_assign_proc : process(p_az_0_i, grp_gravity_fu_624_p_az_0, grp_gravity_fu_624_p_az_0_ap_vld, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = grp_gravity_fu_624_p_az_0_ap_vld))) then 
            p_az_0_o <= grp_gravity_fu_624_p_az_0;
        else 
            p_az_0_o <= p_az_0_i;
        end if; 
    end process;


    p_az_0_o_ap_vld_assign_proc : process(grp_gravity_fu_624_p_az_0_ap_vld, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            p_az_0_o_ap_vld <= grp_gravity_fu_624_p_az_0_ap_vld;
        else 
            p_az_0_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_az_1_o_assign_proc : process(p_az_1_i, grp_gravity_fu_624_p_az_1, grp_gravity_fu_624_p_az_1_ap_vld, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = grp_gravity_fu_624_p_az_1_ap_vld))) then 
            p_az_1_o <= grp_gravity_fu_624_p_az_1;
        else 
            p_az_1_o <= p_az_1_i;
        end if; 
    end process;


    p_az_1_o_ap_vld_assign_proc : process(grp_gravity_fu_624_p_az_1_ap_vld, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            p_az_1_o_ap_vld <= grp_gravity_fu_624_p_az_1_ap_vld;
        else 
            p_az_1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_az_2_o_assign_proc : process(p_az_2_i, grp_gravity_fu_624_p_az_2, grp_gravity_fu_624_p_az_2_ap_vld, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = grp_gravity_fu_624_p_az_2_ap_vld))) then 
            p_az_2_o <= grp_gravity_fu_624_p_az_2;
        else 
            p_az_2_o <= p_az_2_i;
        end if; 
    end process;


    p_az_2_o_ap_vld_assign_proc : process(grp_gravity_fu_624_p_az_2_ap_vld, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            p_az_2_o_ap_vld <= grp_gravity_fu_624_p_az_2_ap_vld;
        else 
            p_az_2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_az_3_o_assign_proc : process(p_az_3_i, grp_gravity_fu_624_p_az_3, grp_gravity_fu_624_p_az_3_ap_vld, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = grp_gravity_fu_624_p_az_3_ap_vld))) then 
            p_az_3_o <= grp_gravity_fu_624_p_az_3;
        else 
            p_az_3_o <= p_az_3_i;
        end if; 
    end process;


    p_az_3_o_ap_vld_assign_proc : process(grp_gravity_fu_624_p_az_3_ap_vld, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            p_az_3_o_ap_vld <= grp_gravity_fu_624_p_az_3_ap_vld;
        else 
            p_az_3_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_az_4_o_assign_proc : process(p_az_4_i, grp_gravity_fu_624_p_az_4, grp_gravity_fu_624_p_az_4_ap_vld, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = grp_gravity_fu_624_p_az_4_ap_vld))) then 
            p_az_4_o <= grp_gravity_fu_624_p_az_4;
        else 
            p_az_4_o <= p_az_4_i;
        end if; 
    end process;


    p_az_4_o_ap_vld_assign_proc : process(grp_gravity_fu_624_p_az_4_ap_vld, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            p_az_4_o_ap_vld <= grp_gravity_fu_624_p_az_4_ap_vld;
        else 
            p_az_4_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_az_5_o_assign_proc : process(p_az_5_i, grp_gravity_fu_624_p_az_5, grp_gravity_fu_624_p_az_5_ap_vld, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = grp_gravity_fu_624_p_az_5_ap_vld))) then 
            p_az_5_o <= grp_gravity_fu_624_p_az_5;
        else 
            p_az_5_o <= p_az_5_i;
        end if; 
    end process;


    p_az_5_o_ap_vld_assign_proc : process(grp_gravity_fu_624_p_az_5_ap_vld, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            p_az_5_o_ap_vld <= grp_gravity_fu_624_p_az_5_ap_vld;
        else 
            p_az_5_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_vx_0 <= grp_to_double_fu_951_p_vx_0;

    p_vx_0_ap_vld_assign_proc : process(grp_to_double_fu_951_p_vx_0_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_vx_0_ap_vld <= grp_to_double_fu_951_p_vx_0_ap_vld;
        else 
            p_vx_0_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_vx_1 <= grp_to_double_fu_951_p_vx_1;

    p_vx_1_ap_vld_assign_proc : process(grp_to_double_fu_951_p_vx_1_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_vx_1_ap_vld <= grp_to_double_fu_951_p_vx_1_ap_vld;
        else 
            p_vx_1_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_vx_2 <= grp_to_double_fu_951_p_vx_2;

    p_vx_2_ap_vld_assign_proc : process(grp_to_double_fu_951_p_vx_2_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_vx_2_ap_vld <= grp_to_double_fu_951_p_vx_2_ap_vld;
        else 
            p_vx_2_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_vx_3 <= grp_to_double_fu_951_p_vx_3;

    p_vx_3_ap_vld_assign_proc : process(grp_to_double_fu_951_p_vx_3_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_vx_3_ap_vld <= grp_to_double_fu_951_p_vx_3_ap_vld;
        else 
            p_vx_3_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_vx_4 <= grp_to_double_fu_951_p_vx_4;

    p_vx_4_ap_vld_assign_proc : process(grp_to_double_fu_951_p_vx_4_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_vx_4_ap_vld <= grp_to_double_fu_951_p_vx_4_ap_vld;
        else 
            p_vx_4_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_vx_5 <= grp_to_double_fu_951_p_vx_5;

    p_vx_5_ap_vld_assign_proc : process(grp_to_double_fu_951_p_vx_5_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_vx_5_ap_vld <= grp_to_double_fu_951_p_vx_5_ap_vld;
        else 
            p_vx_5_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_vx_6 <= grp_to_double_fu_951_p_vx_6;

    p_vx_6_ap_vld_assign_proc : process(grp_to_double_fu_951_p_vx_6_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_vx_6_ap_vld <= grp_to_double_fu_951_p_vx_6_ap_vld;
        else 
            p_vx_6_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_vx_7 <= grp_to_double_fu_951_p_vx_7;

    p_vx_7_ap_vld_assign_proc : process(grp_to_double_fu_951_p_vx_7_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_vx_7_ap_vld <= grp_to_double_fu_951_p_vx_7_ap_vld;
        else 
            p_vx_7_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_vx_8 <= grp_to_double_fu_951_p_vx_8;

    p_vx_8_ap_vld_assign_proc : process(grp_to_double_fu_951_p_vx_8_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_vx_8_ap_vld <= grp_to_double_fu_951_p_vx_8_ap_vld;
        else 
            p_vx_8_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_vy_0 <= grp_to_double_fu_951_p_vy_0;

    p_vy_0_ap_vld_assign_proc : process(grp_to_double_fu_951_p_vy_0_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_vy_0_ap_vld <= grp_to_double_fu_951_p_vy_0_ap_vld;
        else 
            p_vy_0_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_vy_1 <= grp_to_double_fu_951_p_vy_1;

    p_vy_1_ap_vld_assign_proc : process(grp_to_double_fu_951_p_vy_1_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_vy_1_ap_vld <= grp_to_double_fu_951_p_vy_1_ap_vld;
        else 
            p_vy_1_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_vy_2 <= grp_to_double_fu_951_p_vy_2;

    p_vy_2_ap_vld_assign_proc : process(grp_to_double_fu_951_p_vy_2_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_vy_2_ap_vld <= grp_to_double_fu_951_p_vy_2_ap_vld;
        else 
            p_vy_2_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_vy_3 <= grp_to_double_fu_951_p_vy_3;

    p_vy_3_ap_vld_assign_proc : process(grp_to_double_fu_951_p_vy_3_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_vy_3_ap_vld <= grp_to_double_fu_951_p_vy_3_ap_vld;
        else 
            p_vy_3_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_vy_4 <= grp_to_double_fu_951_p_vy_4;

    p_vy_4_ap_vld_assign_proc : process(grp_to_double_fu_951_p_vy_4_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_vy_4_ap_vld <= grp_to_double_fu_951_p_vy_4_ap_vld;
        else 
            p_vy_4_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_vy_5 <= grp_to_double_fu_951_p_vy_5;

    p_vy_5_ap_vld_assign_proc : process(grp_to_double_fu_951_p_vy_5_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_vy_5_ap_vld <= grp_to_double_fu_951_p_vy_5_ap_vld;
        else 
            p_vy_5_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_vy_6 <= grp_to_double_fu_951_p_vy_6;

    p_vy_6_ap_vld_assign_proc : process(grp_to_double_fu_951_p_vy_6_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_vy_6_ap_vld <= grp_to_double_fu_951_p_vy_6_ap_vld;
        else 
            p_vy_6_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_vy_7 <= grp_to_double_fu_951_p_vy_7;

    p_vy_7_ap_vld_assign_proc : process(grp_to_double_fu_951_p_vy_7_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_vy_7_ap_vld <= grp_to_double_fu_951_p_vy_7_ap_vld;
        else 
            p_vy_7_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_vy_8 <= grp_to_double_fu_951_p_vy_8;

    p_vy_8_ap_vld_assign_proc : process(grp_to_double_fu_951_p_vy_8_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_vy_8_ap_vld <= grp_to_double_fu_951_p_vy_8_ap_vld;
        else 
            p_vy_8_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_vz_0 <= grp_to_double_fu_951_p_vz_0;

    p_vz_0_ap_vld_assign_proc : process(grp_to_double_fu_951_p_vz_0_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_vz_0_ap_vld <= grp_to_double_fu_951_p_vz_0_ap_vld;
        else 
            p_vz_0_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_vz_1 <= grp_to_double_fu_951_p_vz_1;

    p_vz_1_ap_vld_assign_proc : process(grp_to_double_fu_951_p_vz_1_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_vz_1_ap_vld <= grp_to_double_fu_951_p_vz_1_ap_vld;
        else 
            p_vz_1_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_vz_2 <= grp_to_double_fu_951_p_vz_2;

    p_vz_2_ap_vld_assign_proc : process(grp_to_double_fu_951_p_vz_2_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_vz_2_ap_vld <= grp_to_double_fu_951_p_vz_2_ap_vld;
        else 
            p_vz_2_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_vz_3 <= grp_to_double_fu_951_p_vz_3;

    p_vz_3_ap_vld_assign_proc : process(grp_to_double_fu_951_p_vz_3_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_vz_3_ap_vld <= grp_to_double_fu_951_p_vz_3_ap_vld;
        else 
            p_vz_3_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_vz_4 <= grp_to_double_fu_951_p_vz_4;

    p_vz_4_ap_vld_assign_proc : process(grp_to_double_fu_951_p_vz_4_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_vz_4_ap_vld <= grp_to_double_fu_951_p_vz_4_ap_vld;
        else 
            p_vz_4_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_vz_5 <= grp_to_double_fu_951_p_vz_5;

    p_vz_5_ap_vld_assign_proc : process(grp_to_double_fu_951_p_vz_5_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_vz_5_ap_vld <= grp_to_double_fu_951_p_vz_5_ap_vld;
        else 
            p_vz_5_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_vz_6 <= grp_to_double_fu_951_p_vz_6;

    p_vz_6_ap_vld_assign_proc : process(grp_to_double_fu_951_p_vz_6_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_vz_6_ap_vld <= grp_to_double_fu_951_p_vz_6_ap_vld;
        else 
            p_vz_6_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_vz_7 <= grp_to_double_fu_951_p_vz_7;

    p_vz_7_ap_vld_assign_proc : process(grp_to_double_fu_951_p_vz_7_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_vz_7_ap_vld <= grp_to_double_fu_951_p_vz_7_ap_vld;
        else 
            p_vz_7_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_vz_8 <= grp_to_double_fu_951_p_vz_8;

    p_vz_8_ap_vld_assign_proc : process(grp_to_double_fu_951_p_vz_8_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_vz_8_ap_vld <= grp_to_double_fu_951_p_vz_8_ap_vld;
        else 
            p_vz_8_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_x_0_o_assign_proc : process(p_x_0_i, grp_to_double_fu_951_p_x_0, grp_to_double_fu_951_p_x_0_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = grp_to_double_fu_951_p_x_0_ap_vld)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = grp_to_double_fu_951_p_x_0_ap_vld)))) then 
            p_x_0_o <= grp_to_double_fu_951_p_x_0;
        else 
            p_x_0_o <= p_x_0_i;
        end if; 
    end process;


    p_x_0_o_ap_vld_assign_proc : process(grp_to_double_fu_951_p_x_0_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_x_0_o_ap_vld <= grp_to_double_fu_951_p_x_0_ap_vld;
        else 
            p_x_0_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_x_1_o_assign_proc : process(p_x_1_i, grp_to_double_fu_951_p_x_1, grp_to_double_fu_951_p_x_1_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = grp_to_double_fu_951_p_x_1_ap_vld)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = grp_to_double_fu_951_p_x_1_ap_vld)))) then 
            p_x_1_o <= grp_to_double_fu_951_p_x_1;
        else 
            p_x_1_o <= p_x_1_i;
        end if; 
    end process;


    p_x_1_o_ap_vld_assign_proc : process(grp_to_double_fu_951_p_x_1_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_x_1_o_ap_vld <= grp_to_double_fu_951_p_x_1_ap_vld;
        else 
            p_x_1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_x_2_o_assign_proc : process(p_x_2_i, grp_to_double_fu_951_p_x_2, grp_to_double_fu_951_p_x_2_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = grp_to_double_fu_951_p_x_2_ap_vld)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = grp_to_double_fu_951_p_x_2_ap_vld)))) then 
            p_x_2_o <= grp_to_double_fu_951_p_x_2;
        else 
            p_x_2_o <= p_x_2_i;
        end if; 
    end process;


    p_x_2_o_ap_vld_assign_proc : process(grp_to_double_fu_951_p_x_2_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_x_2_o_ap_vld <= grp_to_double_fu_951_p_x_2_ap_vld;
        else 
            p_x_2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_x_3_o_assign_proc : process(p_x_3_i, grp_to_double_fu_951_p_x_3, grp_to_double_fu_951_p_x_3_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = grp_to_double_fu_951_p_x_3_ap_vld)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = grp_to_double_fu_951_p_x_3_ap_vld)))) then 
            p_x_3_o <= grp_to_double_fu_951_p_x_3;
        else 
            p_x_3_o <= p_x_3_i;
        end if; 
    end process;


    p_x_3_o_ap_vld_assign_proc : process(grp_to_double_fu_951_p_x_3_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_x_3_o_ap_vld <= grp_to_double_fu_951_p_x_3_ap_vld;
        else 
            p_x_3_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_x_4_o_assign_proc : process(p_x_4_i, grp_to_double_fu_951_p_x_4, grp_to_double_fu_951_p_x_4_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = grp_to_double_fu_951_p_x_4_ap_vld)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = grp_to_double_fu_951_p_x_4_ap_vld)))) then 
            p_x_4_o <= grp_to_double_fu_951_p_x_4;
        else 
            p_x_4_o <= p_x_4_i;
        end if; 
    end process;


    p_x_4_o_ap_vld_assign_proc : process(grp_to_double_fu_951_p_x_4_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_x_4_o_ap_vld <= grp_to_double_fu_951_p_x_4_ap_vld;
        else 
            p_x_4_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_x_5_o_assign_proc : process(p_x_5_i, grp_to_double_fu_951_p_x_5, grp_to_double_fu_951_p_x_5_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = grp_to_double_fu_951_p_x_5_ap_vld)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = grp_to_double_fu_951_p_x_5_ap_vld)))) then 
            p_x_5_o <= grp_to_double_fu_951_p_x_5;
        else 
            p_x_5_o <= p_x_5_i;
        end if; 
    end process;


    p_x_5_o_ap_vld_assign_proc : process(grp_to_double_fu_951_p_x_5_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_x_5_o_ap_vld <= grp_to_double_fu_951_p_x_5_ap_vld;
        else 
            p_x_5_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_x_6_o_assign_proc : process(p_x_6_i, grp_to_double_fu_951_p_x_6, grp_to_double_fu_951_p_x_6_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = grp_to_double_fu_951_p_x_6_ap_vld)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = grp_to_double_fu_951_p_x_6_ap_vld)))) then 
            p_x_6_o <= grp_to_double_fu_951_p_x_6;
        else 
            p_x_6_o <= p_x_6_i;
        end if; 
    end process;


    p_x_6_o_ap_vld_assign_proc : process(grp_to_double_fu_951_p_x_6_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_x_6_o_ap_vld <= grp_to_double_fu_951_p_x_6_ap_vld;
        else 
            p_x_6_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_x_7_o_assign_proc : process(p_x_7_i, grp_to_double_fu_951_p_x_7, grp_to_double_fu_951_p_x_7_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = grp_to_double_fu_951_p_x_7_ap_vld)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = grp_to_double_fu_951_p_x_7_ap_vld)))) then 
            p_x_7_o <= grp_to_double_fu_951_p_x_7;
        else 
            p_x_7_o <= p_x_7_i;
        end if; 
    end process;


    p_x_7_o_ap_vld_assign_proc : process(grp_to_double_fu_951_p_x_7_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_x_7_o_ap_vld <= grp_to_double_fu_951_p_x_7_ap_vld;
        else 
            p_x_7_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_x_8_o_assign_proc : process(p_x_8_i, grp_to_double_fu_951_p_x_8, grp_to_double_fu_951_p_x_8_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = grp_to_double_fu_951_p_x_8_ap_vld)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = grp_to_double_fu_951_p_x_8_ap_vld)))) then 
            p_x_8_o <= grp_to_double_fu_951_p_x_8;
        else 
            p_x_8_o <= p_x_8_i;
        end if; 
    end process;


    p_x_8_o_ap_vld_assign_proc : process(grp_to_double_fu_951_p_x_8_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_x_8_o_ap_vld <= grp_to_double_fu_951_p_x_8_ap_vld;
        else 
            p_x_8_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_y_0_o_assign_proc : process(p_y_0_i, grp_to_double_fu_951_p_y_0, grp_to_double_fu_951_p_y_0_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = grp_to_double_fu_951_p_y_0_ap_vld)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = grp_to_double_fu_951_p_y_0_ap_vld)))) then 
            p_y_0_o <= grp_to_double_fu_951_p_y_0;
        else 
            p_y_0_o <= p_y_0_i;
        end if; 
    end process;


    p_y_0_o_ap_vld_assign_proc : process(grp_to_double_fu_951_p_y_0_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_y_0_o_ap_vld <= grp_to_double_fu_951_p_y_0_ap_vld;
        else 
            p_y_0_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_y_1_o_assign_proc : process(p_y_1_i, grp_to_double_fu_951_p_y_1, grp_to_double_fu_951_p_y_1_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = grp_to_double_fu_951_p_y_1_ap_vld)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = grp_to_double_fu_951_p_y_1_ap_vld)))) then 
            p_y_1_o <= grp_to_double_fu_951_p_y_1;
        else 
            p_y_1_o <= p_y_1_i;
        end if; 
    end process;


    p_y_1_o_ap_vld_assign_proc : process(grp_to_double_fu_951_p_y_1_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_y_1_o_ap_vld <= grp_to_double_fu_951_p_y_1_ap_vld;
        else 
            p_y_1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_y_2_o_assign_proc : process(p_y_2_i, grp_to_double_fu_951_p_y_2, grp_to_double_fu_951_p_y_2_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = grp_to_double_fu_951_p_y_2_ap_vld)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = grp_to_double_fu_951_p_y_2_ap_vld)))) then 
            p_y_2_o <= grp_to_double_fu_951_p_y_2;
        else 
            p_y_2_o <= p_y_2_i;
        end if; 
    end process;


    p_y_2_o_ap_vld_assign_proc : process(grp_to_double_fu_951_p_y_2_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_y_2_o_ap_vld <= grp_to_double_fu_951_p_y_2_ap_vld;
        else 
            p_y_2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_y_3_o_assign_proc : process(p_y_3_i, grp_to_double_fu_951_p_y_3, grp_to_double_fu_951_p_y_3_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = grp_to_double_fu_951_p_y_3_ap_vld)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = grp_to_double_fu_951_p_y_3_ap_vld)))) then 
            p_y_3_o <= grp_to_double_fu_951_p_y_3;
        else 
            p_y_3_o <= p_y_3_i;
        end if; 
    end process;


    p_y_3_o_ap_vld_assign_proc : process(grp_to_double_fu_951_p_y_3_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_y_3_o_ap_vld <= grp_to_double_fu_951_p_y_3_ap_vld;
        else 
            p_y_3_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_y_4_o_assign_proc : process(p_y_4_i, grp_to_double_fu_951_p_y_4, grp_to_double_fu_951_p_y_4_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = grp_to_double_fu_951_p_y_4_ap_vld)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = grp_to_double_fu_951_p_y_4_ap_vld)))) then 
            p_y_4_o <= grp_to_double_fu_951_p_y_4;
        else 
            p_y_4_o <= p_y_4_i;
        end if; 
    end process;


    p_y_4_o_ap_vld_assign_proc : process(grp_to_double_fu_951_p_y_4_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_y_4_o_ap_vld <= grp_to_double_fu_951_p_y_4_ap_vld;
        else 
            p_y_4_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_y_5_o_assign_proc : process(p_y_5_i, grp_to_double_fu_951_p_y_5, grp_to_double_fu_951_p_y_5_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = grp_to_double_fu_951_p_y_5_ap_vld)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = grp_to_double_fu_951_p_y_5_ap_vld)))) then 
            p_y_5_o <= grp_to_double_fu_951_p_y_5;
        else 
            p_y_5_o <= p_y_5_i;
        end if; 
    end process;


    p_y_5_o_ap_vld_assign_proc : process(grp_to_double_fu_951_p_y_5_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_y_5_o_ap_vld <= grp_to_double_fu_951_p_y_5_ap_vld;
        else 
            p_y_5_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_y_6_o_assign_proc : process(p_y_6_i, grp_to_double_fu_951_p_y_6, grp_to_double_fu_951_p_y_6_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = grp_to_double_fu_951_p_y_6_ap_vld)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = grp_to_double_fu_951_p_y_6_ap_vld)))) then 
            p_y_6_o <= grp_to_double_fu_951_p_y_6;
        else 
            p_y_6_o <= p_y_6_i;
        end if; 
    end process;


    p_y_6_o_ap_vld_assign_proc : process(grp_to_double_fu_951_p_y_6_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_y_6_o_ap_vld <= grp_to_double_fu_951_p_y_6_ap_vld;
        else 
            p_y_6_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_y_7_o_assign_proc : process(p_y_7_i, grp_to_double_fu_951_p_y_7, grp_to_double_fu_951_p_y_7_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = grp_to_double_fu_951_p_y_7_ap_vld)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = grp_to_double_fu_951_p_y_7_ap_vld)))) then 
            p_y_7_o <= grp_to_double_fu_951_p_y_7;
        else 
            p_y_7_o <= p_y_7_i;
        end if; 
    end process;


    p_y_7_o_ap_vld_assign_proc : process(grp_to_double_fu_951_p_y_7_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_y_7_o_ap_vld <= grp_to_double_fu_951_p_y_7_ap_vld;
        else 
            p_y_7_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_y_8_o_assign_proc : process(p_y_8_i, grp_to_double_fu_951_p_y_8, grp_to_double_fu_951_p_y_8_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = grp_to_double_fu_951_p_y_8_ap_vld)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = grp_to_double_fu_951_p_y_8_ap_vld)))) then 
            p_y_8_o <= grp_to_double_fu_951_p_y_8;
        else 
            p_y_8_o <= p_y_8_i;
        end if; 
    end process;


    p_y_8_o_ap_vld_assign_proc : process(grp_to_double_fu_951_p_y_8_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_y_8_o_ap_vld <= grp_to_double_fu_951_p_y_8_ap_vld;
        else 
            p_y_8_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_z_0_o_assign_proc : process(p_z_0_i, grp_to_double_fu_951_p_z_0, grp_to_double_fu_951_p_z_0_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = grp_to_double_fu_951_p_z_0_ap_vld)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = grp_to_double_fu_951_p_z_0_ap_vld)))) then 
            p_z_0_o <= grp_to_double_fu_951_p_z_0;
        else 
            p_z_0_o <= p_z_0_i;
        end if; 
    end process;


    p_z_0_o_ap_vld_assign_proc : process(grp_to_double_fu_951_p_z_0_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_z_0_o_ap_vld <= grp_to_double_fu_951_p_z_0_ap_vld;
        else 
            p_z_0_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_z_1_o_assign_proc : process(p_z_1_i, grp_to_double_fu_951_p_z_1, grp_to_double_fu_951_p_z_1_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = grp_to_double_fu_951_p_z_1_ap_vld)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = grp_to_double_fu_951_p_z_1_ap_vld)))) then 
            p_z_1_o <= grp_to_double_fu_951_p_z_1;
        else 
            p_z_1_o <= p_z_1_i;
        end if; 
    end process;


    p_z_1_o_ap_vld_assign_proc : process(grp_to_double_fu_951_p_z_1_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_z_1_o_ap_vld <= grp_to_double_fu_951_p_z_1_ap_vld;
        else 
            p_z_1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_z_2_o_assign_proc : process(p_z_2_i, grp_to_double_fu_951_p_z_2, grp_to_double_fu_951_p_z_2_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = grp_to_double_fu_951_p_z_2_ap_vld)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = grp_to_double_fu_951_p_z_2_ap_vld)))) then 
            p_z_2_o <= grp_to_double_fu_951_p_z_2;
        else 
            p_z_2_o <= p_z_2_i;
        end if; 
    end process;


    p_z_2_o_ap_vld_assign_proc : process(grp_to_double_fu_951_p_z_2_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_z_2_o_ap_vld <= grp_to_double_fu_951_p_z_2_ap_vld;
        else 
            p_z_2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_z_3_o_assign_proc : process(p_z_3_i, grp_to_double_fu_951_p_z_3, grp_to_double_fu_951_p_z_3_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = grp_to_double_fu_951_p_z_3_ap_vld)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = grp_to_double_fu_951_p_z_3_ap_vld)))) then 
            p_z_3_o <= grp_to_double_fu_951_p_z_3;
        else 
            p_z_3_o <= p_z_3_i;
        end if; 
    end process;


    p_z_3_o_ap_vld_assign_proc : process(grp_to_double_fu_951_p_z_3_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_z_3_o_ap_vld <= grp_to_double_fu_951_p_z_3_ap_vld;
        else 
            p_z_3_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_z_4_o_assign_proc : process(p_z_4_i, grp_to_double_fu_951_p_z_4, grp_to_double_fu_951_p_z_4_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = grp_to_double_fu_951_p_z_4_ap_vld)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = grp_to_double_fu_951_p_z_4_ap_vld)))) then 
            p_z_4_o <= grp_to_double_fu_951_p_z_4;
        else 
            p_z_4_o <= p_z_4_i;
        end if; 
    end process;


    p_z_4_o_ap_vld_assign_proc : process(grp_to_double_fu_951_p_z_4_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_z_4_o_ap_vld <= grp_to_double_fu_951_p_z_4_ap_vld;
        else 
            p_z_4_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_z_5_o_assign_proc : process(p_z_5_i, grp_to_double_fu_951_p_z_5, grp_to_double_fu_951_p_z_5_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = grp_to_double_fu_951_p_z_5_ap_vld)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = grp_to_double_fu_951_p_z_5_ap_vld)))) then 
            p_z_5_o <= grp_to_double_fu_951_p_z_5;
        else 
            p_z_5_o <= p_z_5_i;
        end if; 
    end process;


    p_z_5_o_ap_vld_assign_proc : process(grp_to_double_fu_951_p_z_5_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_z_5_o_ap_vld <= grp_to_double_fu_951_p_z_5_ap_vld;
        else 
            p_z_5_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_z_6_o_assign_proc : process(p_z_6_i, grp_to_double_fu_951_p_z_6, grp_to_double_fu_951_p_z_6_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = grp_to_double_fu_951_p_z_6_ap_vld)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = grp_to_double_fu_951_p_z_6_ap_vld)))) then 
            p_z_6_o <= grp_to_double_fu_951_p_z_6;
        else 
            p_z_6_o <= p_z_6_i;
        end if; 
    end process;


    p_z_6_o_ap_vld_assign_proc : process(grp_to_double_fu_951_p_z_6_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_z_6_o_ap_vld <= grp_to_double_fu_951_p_z_6_ap_vld;
        else 
            p_z_6_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_z_7_o_assign_proc : process(p_z_7_i, grp_to_double_fu_951_p_z_7, grp_to_double_fu_951_p_z_7_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = grp_to_double_fu_951_p_z_7_ap_vld)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = grp_to_double_fu_951_p_z_7_ap_vld)))) then 
            p_z_7_o <= grp_to_double_fu_951_p_z_7;
        else 
            p_z_7_o <= p_z_7_i;
        end if; 
    end process;


    p_z_7_o_ap_vld_assign_proc : process(grp_to_double_fu_951_p_z_7_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_z_7_o_ap_vld <= grp_to_double_fu_951_p_z_7_ap_vld;
        else 
            p_z_7_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_z_8_o_assign_proc : process(p_z_8_i, grp_to_double_fu_951_p_z_8, grp_to_double_fu_951_p_z_8_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = grp_to_double_fu_951_p_z_8_ap_vld)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = grp_to_double_fu_951_p_z_8_ap_vld)))) then 
            p_z_8_o <= grp_to_double_fu_951_p_z_8;
        else 
            p_z_8_o <= p_z_8_i;
        end if; 
    end process;


    p_z_8_o_ap_vld_assign_proc : process(grp_to_double_fu_951_p_z_8_ap_vld, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            p_z_8_o_ap_vld <= grp_to_double_fu_951_p_z_8_ap_vld;
        else 
            p_z_8_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
