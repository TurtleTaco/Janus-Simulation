// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module janus_step (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_int_0_x_read,
        p_int_1_x_read,
        p_int_2_x_read,
        p_int_3_x_read,
        p_int_4_x_read,
        p_int_5_x_read,
        p_int_6_x_read,
        p_int_7_x_read,
        p_int_8_x_read,
        p_int_0_y_read,
        p_int_1_y_read,
        p_int_2_y_read,
        p_int_3_y_read,
        p_int_4_y_read,
        p_int_5_y_read,
        p_int_6_y_read,
        p_int_7_y_read,
        p_int_8_y_read,
        p_int_0_z_read,
        p_int_1_z_read,
        p_int_2_z_read,
        p_int_3_z_read,
        p_int_4_z_read,
        p_int_5_z_read,
        p_int_6_z_read,
        p_int_7_z_read,
        p_int_8_z_read,
        p_int_0_vx_read,
        p_int_1_vx_read,
        p_int_2_vx_read,
        p_int_3_vx_read,
        p_int_4_vx_read,
        p_int_5_vx_read,
        p_int_6_vx_read,
        p_int_7_vx_read,
        p_int_8_vx_read,
        p_int_0_vy_read,
        p_int_1_vy_read,
        p_int_2_vy_read,
        p_int_3_vy_read,
        p_int_4_vy_read,
        p_int_5_vy_read,
        p_int_6_vy_read,
        p_int_7_vy_read,
        p_int_8_vy_read,
        p_int_0_vz_read,
        p_int_1_vz_read,
        p_int_2_vz_read,
        p_int_3_vz_read,
        p_int_4_vz_read,
        p_int_5_vz_read,
        p_int_6_vz_read,
        p_int_7_vz_read,
        p_int_8_vz_read,
        p_0_x_read,
        p_1_x_read,
        p_2_x_read,
        p_3_x_read,
        p_4_x_read,
        p_5_x_read,
        p_6_x_read,
        p_7_x_read,
        p_8_x_read,
        p_0_y_read,
        p_1_y_read,
        p_2_y_read,
        p_3_y_read,
        p_4_y_read,
        p_5_y_read,
        p_6_y_read,
        p_7_y_read,
        p_8_y_read,
        p_0_z_read,
        p_1_z_read,
        p_2_z_read,
        p_3_z_read,
        p_4_z_read,
        p_5_z_read,
        p_6_z_read,
        p_7_z_read,
        p_8_z_read,
        p_0_vx_read,
        p_1_vx_read,
        p_2_vx_read,
        p_3_vx_read,
        p_4_vx_read,
        p_5_vx_read,
        p_6_vx_read,
        p_7_vx_read,
        p_8_vx_read,
        p_0_vy_read,
        p_1_vy_read,
        p_2_vy_read,
        p_3_vy_read,
        p_4_vy_read,
        p_5_vy_read,
        p_6_vy_read,
        p_7_vy_read,
        p_8_vy_read,
        p_0_vz_read,
        p_1_vz_read,
        p_2_vz_read,
        p_3_vz_read,
        p_4_vz_read,
        p_5_vz_read,
        p_6_vz_read,
        p_7_vz_read,
        p_8_vz_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15,
        ap_return_16,
        ap_return_17,
        ap_return_18,
        ap_return_19,
        ap_return_20,
        ap_return_21,
        ap_return_22,
        ap_return_23,
        ap_return_24,
        ap_return_25,
        ap_return_26,
        ap_return_27,
        ap_return_28,
        ap_return_29,
        ap_return_30,
        ap_return_31,
        ap_return_32,
        ap_return_33,
        ap_return_34,
        ap_return_35,
        ap_return_36,
        ap_return_37,
        ap_return_38,
        ap_return_39,
        ap_return_40,
        ap_return_41,
        ap_return_42,
        ap_return_43,
        ap_return_44,
        ap_return_45,
        ap_return_46,
        ap_return_47,
        ap_return_48,
        ap_return_49,
        ap_return_50,
        ap_return_51,
        ap_return_52,
        ap_return_53,
        ap_return_54,
        ap_return_55,
        ap_return_56,
        ap_return_57,
        ap_return_58,
        ap_return_59,
        ap_return_60,
        ap_return_61,
        ap_return_62,
        ap_return_63,
        ap_return_64,
        ap_return_65,
        ap_return_66,
        ap_return_67,
        ap_return_68,
        ap_return_69,
        ap_return_70,
        ap_return_71,
        ap_return_72,
        ap_return_73,
        ap_return_74,
        ap_return_75,
        ap_return_76,
        ap_return_77,
        ap_return_78,
        ap_return_79,
        ap_return_80,
        ap_return_81,
        ap_return_82,
        ap_return_83,
        ap_return_84,
        ap_return_85,
        ap_return_86,
        ap_return_87,
        ap_return_88,
        ap_return_89,
        ap_return_90,
        ap_return_91,
        ap_return_92,
        ap_return_93,
        ap_return_94,
        ap_return_95,
        ap_return_96,
        ap_return_97,
        ap_return_98,
        ap_return_99,
        ap_return_100,
        ap_return_101,
        ap_return_102,
        ap_return_103,
        ap_return_104,
        ap_return_105,
        ap_return_106,
        ap_return_107,
        ap_return_108,
        ap_return_109,
        ap_return_110,
        ap_return_111,
        ap_return_112,
        ap_return_113,
        ap_return_114,
        ap_return_115,
        ap_return_116,
        ap_return_117,
        ap_return_118,
        ap_return_119,
        ap_return_120,
        ap_return_121,
        ap_return_122,
        ap_return_123,
        ap_return_124,
        ap_return_125
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] p_int_0_x_read;
input  [63:0] p_int_1_x_read;
input  [63:0] p_int_2_x_read;
input  [63:0] p_int_3_x_read;
input  [63:0] p_int_4_x_read;
input  [63:0] p_int_5_x_read;
input  [63:0] p_int_6_x_read;
input  [63:0] p_int_7_x_read;
input  [63:0] p_int_8_x_read;
input  [63:0] p_int_0_y_read;
input  [63:0] p_int_1_y_read;
input  [63:0] p_int_2_y_read;
input  [63:0] p_int_3_y_read;
input  [63:0] p_int_4_y_read;
input  [63:0] p_int_5_y_read;
input  [63:0] p_int_6_y_read;
input  [63:0] p_int_7_y_read;
input  [63:0] p_int_8_y_read;
input  [63:0] p_int_0_z_read;
input  [63:0] p_int_1_z_read;
input  [63:0] p_int_2_z_read;
input  [63:0] p_int_3_z_read;
input  [63:0] p_int_4_z_read;
input  [63:0] p_int_5_z_read;
input  [63:0] p_int_6_z_read;
input  [63:0] p_int_7_z_read;
input  [63:0] p_int_8_z_read;
input  [63:0] p_int_0_vx_read;
input  [63:0] p_int_1_vx_read;
input  [63:0] p_int_2_vx_read;
input  [63:0] p_int_3_vx_read;
input  [63:0] p_int_4_vx_read;
input  [63:0] p_int_5_vx_read;
input  [63:0] p_int_6_vx_read;
input  [63:0] p_int_7_vx_read;
input  [63:0] p_int_8_vx_read;
input  [63:0] p_int_0_vy_read;
input  [63:0] p_int_1_vy_read;
input  [63:0] p_int_2_vy_read;
input  [63:0] p_int_3_vy_read;
input  [63:0] p_int_4_vy_read;
input  [63:0] p_int_5_vy_read;
input  [63:0] p_int_6_vy_read;
input  [63:0] p_int_7_vy_read;
input  [63:0] p_int_8_vy_read;
input  [63:0] p_int_0_vz_read;
input  [63:0] p_int_1_vz_read;
input  [63:0] p_int_2_vz_read;
input  [63:0] p_int_3_vz_read;
input  [63:0] p_int_4_vz_read;
input  [63:0] p_int_5_vz_read;
input  [63:0] p_int_6_vz_read;
input  [63:0] p_int_7_vz_read;
input  [63:0] p_int_8_vz_read;
input  [63:0] p_0_x_read;
input  [63:0] p_1_x_read;
input  [63:0] p_2_x_read;
input  [63:0] p_3_x_read;
input  [63:0] p_4_x_read;
input  [63:0] p_5_x_read;
input  [63:0] p_6_x_read;
input  [63:0] p_7_x_read;
input  [63:0] p_8_x_read;
input  [63:0] p_0_y_read;
input  [63:0] p_1_y_read;
input  [63:0] p_2_y_read;
input  [63:0] p_3_y_read;
input  [63:0] p_4_y_read;
input  [63:0] p_5_y_read;
input  [63:0] p_6_y_read;
input  [63:0] p_7_y_read;
input  [63:0] p_8_y_read;
input  [63:0] p_0_z_read;
input  [63:0] p_1_z_read;
input  [63:0] p_2_z_read;
input  [63:0] p_3_z_read;
input  [63:0] p_4_z_read;
input  [63:0] p_5_z_read;
input  [63:0] p_6_z_read;
input  [63:0] p_7_z_read;
input  [63:0] p_8_z_read;
input  [63:0] p_0_vx_read;
input  [63:0] p_1_vx_read;
input  [63:0] p_2_vx_read;
input  [63:0] p_3_vx_read;
input  [63:0] p_4_vx_read;
input  [63:0] p_5_vx_read;
input  [63:0] p_6_vx_read;
input  [63:0] p_7_vx_read;
input  [63:0] p_8_vx_read;
input  [63:0] p_0_vy_read;
input  [63:0] p_1_vy_read;
input  [63:0] p_2_vy_read;
input  [63:0] p_3_vy_read;
input  [63:0] p_4_vy_read;
input  [63:0] p_5_vy_read;
input  [63:0] p_6_vy_read;
input  [63:0] p_7_vy_read;
input  [63:0] p_8_vy_read;
input  [63:0] p_0_vz_read;
input  [63:0] p_1_vz_read;
input  [63:0] p_2_vz_read;
input  [63:0] p_3_vz_read;
input  [63:0] p_4_vz_read;
input  [63:0] p_5_vz_read;
input  [63:0] p_6_vz_read;
input  [63:0] p_7_vz_read;
input  [63:0] p_8_vz_read;
output  [63:0] ap_return_0;
output  [63:0] ap_return_1;
output  [63:0] ap_return_2;
output  [63:0] ap_return_3;
output  [63:0] ap_return_4;
output  [63:0] ap_return_5;
output  [63:0] ap_return_6;
output  [63:0] ap_return_7;
output  [63:0] ap_return_8;
output  [63:0] ap_return_9;
output  [63:0] ap_return_10;
output  [63:0] ap_return_11;
output  [63:0] ap_return_12;
output  [63:0] ap_return_13;
output  [63:0] ap_return_14;
output  [63:0] ap_return_15;
output  [63:0] ap_return_16;
output  [63:0] ap_return_17;
output  [63:0] ap_return_18;
output  [63:0] ap_return_19;
output  [63:0] ap_return_20;
output  [63:0] ap_return_21;
output  [63:0] ap_return_22;
output  [63:0] ap_return_23;
output  [63:0] ap_return_24;
output  [63:0] ap_return_25;
output  [63:0] ap_return_26;
output  [63:0] ap_return_27;
output  [63:0] ap_return_28;
output  [63:0] ap_return_29;
output  [63:0] ap_return_30;
output  [63:0] ap_return_31;
output  [63:0] ap_return_32;
output  [63:0] ap_return_33;
output  [63:0] ap_return_34;
output  [63:0] ap_return_35;
output  [63:0] ap_return_36;
output  [63:0] ap_return_37;
output  [63:0] ap_return_38;
output  [63:0] ap_return_39;
output  [63:0] ap_return_40;
output  [63:0] ap_return_41;
output  [63:0] ap_return_42;
output  [63:0] ap_return_43;
output  [63:0] ap_return_44;
output  [63:0] ap_return_45;
output  [63:0] ap_return_46;
output  [63:0] ap_return_47;
output  [63:0] ap_return_48;
output  [63:0] ap_return_49;
output  [63:0] ap_return_50;
output  [63:0] ap_return_51;
output  [63:0] ap_return_52;
output  [63:0] ap_return_53;
output  [63:0] ap_return_54;
output  [63:0] ap_return_55;
output  [63:0] ap_return_56;
output  [63:0] ap_return_57;
output  [63:0] ap_return_58;
output  [63:0] ap_return_59;
output  [63:0] ap_return_60;
output  [63:0] ap_return_61;
output  [63:0] ap_return_62;
output  [63:0] ap_return_63;
output  [63:0] ap_return_64;
output  [63:0] ap_return_65;
output  [63:0] ap_return_66;
output  [63:0] ap_return_67;
output  [63:0] ap_return_68;
output  [63:0] ap_return_69;
output  [63:0] ap_return_70;
output  [63:0] ap_return_71;
output  [63:0] ap_return_72;
output  [63:0] ap_return_73;
output  [63:0] ap_return_74;
output  [63:0] ap_return_75;
output  [63:0] ap_return_76;
output  [63:0] ap_return_77;
output  [63:0] ap_return_78;
output  [63:0] ap_return_79;
output  [63:0] ap_return_80;
output  [63:0] ap_return_81;
output  [63:0] ap_return_82;
output  [63:0] ap_return_83;
output  [63:0] ap_return_84;
output  [63:0] ap_return_85;
output  [63:0] ap_return_86;
output  [63:0] ap_return_87;
output  [63:0] ap_return_88;
output  [63:0] ap_return_89;
output  [63:0] ap_return_90;
output  [63:0] ap_return_91;
output  [63:0] ap_return_92;
output  [63:0] ap_return_93;
output  [63:0] ap_return_94;
output  [63:0] ap_return_95;
output  [63:0] ap_return_96;
output  [63:0] ap_return_97;
output  [63:0] ap_return_98;
output  [63:0] ap_return_99;
output  [63:0] ap_return_100;
output  [63:0] ap_return_101;
output  [63:0] ap_return_102;
output  [63:0] ap_return_103;
output  [63:0] ap_return_104;
output  [63:0] ap_return_105;
output  [63:0] ap_return_106;
output  [63:0] ap_return_107;
output  [63:0] ap_return_108;
output  [63:0] ap_return_109;
output  [63:0] ap_return_110;
output  [63:0] ap_return_111;
output  [63:0] ap_return_112;
output  [63:0] ap_return_113;
output  [63:0] ap_return_114;
output  [63:0] ap_return_115;
output  [63:0] ap_return_116;
output  [63:0] ap_return_117;
output  [63:0] ap_return_118;
output  [63:0] ap_return_119;
output  [63:0] ap_return_120;
output  [63:0] ap_return_121;
output  [63:0] ap_return_122;
output  [63:0] ap_return_123;
output  [63:0] ap_return_124;
output  [63:0] ap_return_125;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[63:0] ap_return_0;
reg[63:0] ap_return_1;
reg[63:0] ap_return_2;
reg[63:0] ap_return_3;
reg[63:0] ap_return_4;
reg[63:0] ap_return_5;
reg[63:0] ap_return_6;
reg[63:0] ap_return_7;
reg[63:0] ap_return_8;
reg[63:0] ap_return_9;
reg[63:0] ap_return_10;
reg[63:0] ap_return_11;
reg[63:0] ap_return_12;
reg[63:0] ap_return_13;
reg[63:0] ap_return_14;
reg[63:0] ap_return_15;
reg[63:0] ap_return_16;
reg[63:0] ap_return_17;
reg[63:0] ap_return_18;
reg[63:0] ap_return_19;
reg[63:0] ap_return_20;
reg[63:0] ap_return_21;
reg[63:0] ap_return_22;
reg[63:0] ap_return_23;
reg[63:0] ap_return_24;
reg[63:0] ap_return_25;
reg[63:0] ap_return_26;
reg[63:0] ap_return_27;
reg[63:0] ap_return_28;
reg[63:0] ap_return_29;
reg[63:0] ap_return_30;
reg[63:0] ap_return_31;
reg[63:0] ap_return_32;
reg[63:0] ap_return_33;
reg[63:0] ap_return_34;
reg[63:0] ap_return_35;
reg[63:0] ap_return_36;
reg[63:0] ap_return_37;
reg[63:0] ap_return_38;
reg[63:0] ap_return_39;
reg[63:0] ap_return_40;
reg[63:0] ap_return_41;
reg[63:0] ap_return_42;
reg[63:0] ap_return_43;
reg[63:0] ap_return_44;
reg[63:0] ap_return_45;
reg[63:0] ap_return_46;
reg[63:0] ap_return_47;
reg[63:0] ap_return_48;
reg[63:0] ap_return_49;
reg[63:0] ap_return_50;
reg[63:0] ap_return_51;
reg[63:0] ap_return_52;
reg[63:0] ap_return_53;
reg[63:0] ap_return_54;
reg[63:0] ap_return_55;
reg[63:0] ap_return_56;
reg[63:0] ap_return_57;
reg[63:0] ap_return_58;
reg[63:0] ap_return_59;
reg[63:0] ap_return_60;
reg[63:0] ap_return_61;
reg[63:0] ap_return_62;
reg[63:0] ap_return_63;
reg[63:0] ap_return_64;
reg[63:0] ap_return_65;
reg[63:0] ap_return_66;
reg[63:0] ap_return_67;
reg[63:0] ap_return_68;
reg[63:0] ap_return_69;
reg[63:0] ap_return_70;
reg[63:0] ap_return_71;
reg[63:0] ap_return_72;
reg[63:0] ap_return_73;
reg[63:0] ap_return_74;
reg[63:0] ap_return_75;
reg[63:0] ap_return_76;
reg[63:0] ap_return_77;
reg[63:0] ap_return_78;
reg[63:0] ap_return_79;
reg[63:0] ap_return_80;
reg[63:0] ap_return_81;
reg[63:0] ap_return_82;
reg[63:0] ap_return_83;
reg[63:0] ap_return_84;
reg[63:0] ap_return_85;
reg[63:0] ap_return_86;
reg[63:0] ap_return_87;
reg[63:0] ap_return_88;
reg[63:0] ap_return_89;
reg[63:0] ap_return_90;
reg[63:0] ap_return_91;
reg[63:0] ap_return_92;
reg[63:0] ap_return_93;
reg[63:0] ap_return_94;
reg[63:0] ap_return_95;
reg[63:0] ap_return_96;
reg[63:0] ap_return_97;
reg[63:0] ap_return_98;
reg[63:0] ap_return_99;
reg[63:0] ap_return_100;
reg[63:0] ap_return_101;
reg[63:0] ap_return_102;
reg[63:0] ap_return_103;
reg[63:0] ap_return_104;
reg[63:0] ap_return_105;
reg[63:0] ap_return_106;
reg[63:0] ap_return_107;
reg[63:0] ap_return_108;
reg[63:0] ap_return_109;
reg[63:0] ap_return_110;
reg[63:0] ap_return_111;
reg[63:0] ap_return_112;
reg[63:0] ap_return_113;
reg[63:0] ap_return_114;
reg[63:0] ap_return_115;
reg[63:0] ap_return_116;
reg[63:0] ap_return_117;
reg[63:0] ap_return_118;
reg[63:0] ap_return_119;
reg[63:0] ap_return_120;
reg[63:0] ap_return_121;
reg[63:0] ap_return_122;
reg[63:0] ap_return_123;
reg[63:0] ap_return_124;
reg[63:0] ap_return_125;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [63:0] reg_1623;
wire    ap_CS_fsm_state2;
wire    grp_drift_fu_878_ap_done;
wire    ap_CS_fsm_state7;
reg   [63:0] reg_1629;
reg   [63:0] reg_1635;
reg   [63:0] reg_1641;
reg   [63:0] reg_1647;
reg   [63:0] reg_1653;
reg   [63:0] reg_1659;
reg   [63:0] reg_1665;
reg   [63:0] reg_1671;
reg   [63:0] reg_1677;
reg   [63:0] reg_1683;
reg   [63:0] reg_1689;
reg   [63:0] reg_1695;
reg   [63:0] reg_1701;
reg   [63:0] reg_1707;
reg   [63:0] reg_1713;
reg   [63:0] reg_1719;
reg   [63:0] reg_1725;
reg   [63:0] reg_1731;
reg   [63:0] reg_1737;
reg   [63:0] reg_1743;
reg   [63:0] reg_1749;
reg   [63:0] reg_1755;
reg   [63:0] reg_1761;
reg   [63:0] reg_1767;
reg   [63:0] reg_1773;
reg   [63:0] reg_1779;
reg   [63:0] p_int_8_vz_read_3_reg_2739;
reg   [63:0] p_int_7_vz_read_3_reg_2746;
reg   [63:0] p_int_6_vz_read52_reg_2753;
reg   [63:0] p_int_5_vz_read51_reg_2760;
reg   [63:0] p_int_4_vz_read_3_reg_2767;
reg   [63:0] p_int_3_vz_read_3_reg_2774;
reg   [63:0] p_int_2_vz_read_2_reg_2781;
reg   [63:0] p_int_1_vz_read_3_reg_2788;
reg   [63:0] p_int_0_vz_read_3_reg_2795;
reg   [63:0] p_int_8_vy_read_3_reg_2802;
reg   [63:0] p_int_7_vy_read_3_reg_2809;
reg   [63:0] p_int_6_vy_read_3_reg_2816;
reg   [63:0] p_int_5_vy_read42_reg_2823;
reg   [63:0] p_int_4_vy_read41_reg_2830;
reg   [63:0] p_int_3_vy_read_3_reg_2837;
reg   [63:0] p_int_2_vy_read_3_reg_2844;
reg   [63:0] p_int_1_vy_read_2_reg_2851;
reg   [63:0] p_int_0_vy_read_3_reg_2858;
reg   [63:0] p_int_8_vx_read_3_reg_2865;
reg   [63:0] p_int_7_vx_read_3_reg_2872;
reg   [63:0] p_int_6_vx_read_3_reg_2879;
reg   [63:0] p_int_5_vx_read_3_reg_2886;
reg   [63:0] p_int_4_vx_read32_reg_2893;
reg   [63:0] p_int_3_vx_read31_reg_2900;
reg   [63:0] p_int_2_vx_read_3_reg_2907;
reg   [63:0] p_int_1_vx_read_3_reg_2914;
reg   [63:0] p_int_0_vx_read_3_reg_2921;
reg   [63:0] p_int_8_z_read_2_reg_2928;
reg   [63:0] p_int_7_z_read_2_reg_2933;
reg   [63:0] p_int_6_z_read_2_reg_2938;
reg   [63:0] p_int_5_z_read_2_reg_2943;
reg   [63:0] p_int_4_z_read_2_reg_2948;
reg   [63:0] p_int_3_z_read_2_reg_2953;
reg   [63:0] p_int_2_z_read21_reg_2958;
reg   [63:0] p_int_1_z_read_2_reg_2963;
reg   [63:0] p_int_0_z_read_2_reg_2968;
reg   [63:0] p_int_8_y_read_2_reg_2973;
reg   [63:0] p_int_7_y_read_2_reg_2978;
reg   [63:0] p_int_6_y_read_2_reg_2983;
reg   [63:0] p_int_5_y_read_2_reg_2988;
reg   [63:0] p_int_4_y_read_2_reg_2993;
reg   [63:0] p_int_3_y_read_2_reg_2998;
reg   [63:0] p_int_2_y_read_2_reg_3003;
reg   [63:0] p_int_1_y_read11_reg_3008;
reg   [63:0] p_int_0_y_read_2_reg_3013;
reg   [63:0] p_int_8_x_read_2_reg_3018;
reg   [63:0] p_int_7_x_read_2_reg_3023;
reg   [63:0] p_int_6_x_read_2_reg_3028;
reg   [63:0] p_int_5_x_read_2_reg_3033;
reg   [63:0] p_int_4_x_read_2_reg_3038;
reg   [63:0] p_int_3_x_read_2_reg_3043;
reg   [63:0] p_int_2_x_read_2_reg_3048;
reg   [63:0] p_int_1_x_read_2_reg_3053;
reg   [63:0] p_int_0_x_read_2_reg_3058;
reg   [63:0] p_8_vz_read_2_reg_3063;
reg   [63:0] p_7_vz_read_2_reg_3068;
reg   [63:0] p_6_vz_read_2_reg_3073;
reg   [63:0] p_5_vz_read_2_reg_3078;
reg   [63:0] p_4_vz_read_2_reg_3083;
reg   [63:0] p_3_vz_read_2_reg_3088;
reg   [63:0] p_2_vz_read_2_reg_3093;
reg   [63:0] p_1_vz_read101_reg_3098;
reg   [63:0] p_0_vz_read_2_reg_3103;
reg   [63:0] p_8_vy_read_2_reg_3108;
reg   [63:0] p_7_vy_read_2_reg_3113;
reg   [63:0] p_6_vy_read_2_reg_3118;
reg   [63:0] p_5_vy_read_2_reg_3123;
reg   [63:0] p_4_vy_read_2_reg_3128;
reg   [63:0] p_3_vy_read_2_reg_3133;
reg   [63:0] p_2_vy_read_2_reg_3138;
reg   [63:0] p_1_vy_read_2_reg_3143;
reg   [63:0] p_0_vy_read91_reg_3148;
reg   [63:0] p_8_vx_read_2_reg_3153;
reg   [63:0] p_7_vx_read_2_reg_3158;
reg   [63:0] p_6_vx_read_2_reg_3163;
reg   [63:0] p_5_vx_read_2_reg_3168;
reg   [63:0] p_4_vx_read_2_reg_3173;
reg   [63:0] p_3_vx_read_2_reg_3178;
reg   [63:0] p_2_vx_read_2_reg_3183;
reg   [63:0] p_1_vx_read_2_reg_3188;
reg   [63:0] p_0_vx_read_2_reg_3193;
reg   [63:0] p_8_z_read81_reg_3198;
reg   [63:0] p_7_z_read_2_reg_3203;
reg   [63:0] p_6_z_read_2_reg_3208;
reg   [63:0] p_5_z_read_2_reg_3213;
reg   [63:0] p_4_z_read_2_reg_3218;
reg   [63:0] p_3_z_read_2_reg_3223;
reg   [63:0] p_2_z_read_2_reg_3228;
reg   [63:0] p_1_z_read_2_reg_3233;
reg   [63:0] p_0_z_read_2_reg_3238;
reg   [63:0] p_8_y_read_2_reg_3243;
reg   [63:0] p_7_y_read71_reg_3248;
reg   [63:0] p_6_y_read_2_reg_3253;
reg   [63:0] p_5_y_read_2_reg_3258;
reg   [63:0] p_4_y_read_2_reg_3263;
reg   [63:0] p_3_y_read_2_reg_3268;
reg   [63:0] p_2_y_read_2_reg_3273;
reg   [63:0] p_1_y_read_2_reg_3278;
reg   [63:0] p_0_y_read_2_reg_3283;
reg   [63:0] p_8_x_read_2_reg_3288;
reg   [63:0] p_7_x_read_2_reg_3293;
reg   [63:0] p_6_x_read61_reg_3298;
reg   [63:0] p_5_x_read_2_reg_3303;
reg   [63:0] p_4_x_read_2_reg_3308;
reg   [63:0] p_3_x_read_2_reg_3313;
reg   [63:0] p_2_x_read_2_reg_3318;
reg   [63:0] p_1_x_read_2_reg_3323;
reg   [63:0] p_0_x_read_2_reg_3328;
reg   [63:0] p_x_assign_2_reg_3333;
wire    ap_CS_fsm_state3;
wire    grp_to_double_fu_1079_ap_done;
reg   [63:0] p_x49_assign_2_reg_3339;
reg   [63:0] p_x50_assign_2_reg_3345;
reg   [63:0] p_x51_assign_2_reg_3351;
reg   [63:0] p_x52_assign_2_reg_3357;
reg   [63:0] p_x53_assign_2_reg_3363;
reg   [63:0] p_x54_assign_2_reg_3369;
reg   [63:0] p_x55_assign_2_reg_3375;
reg   [63:0] p_x56_assign_2_reg_3381;
reg   [63:0] p_y_assign_2_reg_3387;
reg   [63:0] p_y57_assign_2_reg_3393;
reg   [63:0] p_y58_assign_2_reg_3399;
reg   [63:0] p_y59_assign_2_reg_3405;
reg   [63:0] p_y60_assign_2_reg_3411;
reg   [63:0] p_y61_assign_2_reg_3417;
reg   [63:0] p_y62_assign_2_reg_3423;
reg   [63:0] p_y63_assign_2_reg_3429;
reg   [63:0] p_y64_assign_2_reg_3435;
reg   [63:0] p_z_assign_2_reg_3441;
reg   [63:0] p_z65_assign_2_reg_3447;
reg   [63:0] p_z66_assign_2_reg_3453;
reg   [63:0] p_z67_assign_2_reg_3459;
reg   [63:0] p_z68_assign_2_reg_3465;
reg   [63:0] p_z69_assign_2_reg_3471;
reg   [63:0] p_z70_assign_2_reg_3477;
reg   [63:0] p_z71_assign_2_reg_3483;
reg   [63:0] p_z72_assign_2_reg_3489;
reg   [63:0] p_vx_assign_1_reg_3495;
reg   [63:0] p_vx73_assign_1_reg_3500;
reg   [63:0] p_vx74_assign_1_reg_3505;
reg   [63:0] p_vx75_assign_1_reg_3510;
reg   [63:0] p_vx76_assign_1_reg_3515;
reg   [63:0] p_vx77_assign_1_reg_3520;
reg   [63:0] p_vx78_assign_1_reg_3525;
reg   [63:0] p_vx79_assign_1_reg_3530;
reg   [63:0] p_vx80_assign_1_reg_3535;
reg   [63:0] p_vy_assign_1_reg_3540;
reg   [63:0] p_vy81_assign_1_reg_3545;
reg   [63:0] p_vy82_assign_1_reg_3550;
reg   [63:0] p_vy83_assign_1_reg_3555;
reg   [63:0] p_vy84_assign_1_reg_3560;
reg   [63:0] p_vy85_assign_1_reg_3565;
reg   [63:0] p_vy86_assign_1_reg_3570;
reg   [63:0] p_vy87_assign_1_reg_3575;
reg   [63:0] p_vy88_assign_1_reg_3580;
reg   [63:0] p_vz_assign_1_reg_3585;
reg   [63:0] p_vz89_assign_1_reg_3590;
reg   [63:0] p_vz90_assign_1_reg_3595;
reg   [63:0] p_vz91_assign_1_reg_3600;
reg   [63:0] p_vz92_assign_1_reg_3605;
reg   [63:0] p_vz93_assign_1_reg_3610;
reg   [63:0] p_vz94_assign_1_reg_3615;
reg   [63:0] p_vz95_assign_1_reg_3620;
reg   [63:0] p_vz96_assign_1_reg_3625;
reg   [63:0] p_ax_assign_1_reg_3630;
wire    ap_CS_fsm_state4;
wire    grp_gravity_fu_1048_ap_done;
reg   [63:0] p_ax97_assign_1_reg_3636;
reg   [63:0] p_ax98_assign_1_reg_3642;
reg   [63:0] p_ax99_assign_1_reg_3648;
reg   [63:0] p_ax100_assign_1_reg_3654;
reg   [63:0] p_ax101_assign_1_reg_3660;
reg   [63:0] p_ax102_assign_1_reg_3666;
reg   [63:0] p_ax103_assign_1_reg_3671;
reg   [63:0] p_ax104_assign_1_reg_3676;
reg   [63:0] p_ay_assign_1_reg_3681;
reg   [63:0] p_ay105_assign_1_reg_3687;
reg   [63:0] p_ay106_assign_1_reg_3693;
reg   [63:0] p_ay107_assign_1_reg_3699;
reg   [63:0] p_ay108_assign_1_reg_3705;
reg   [63:0] p_ay109_assign_1_reg_3711;
reg   [63:0] p_ay110_assign_1_reg_3717;
reg   [63:0] p_ay111_assign_1_reg_3722;
reg   [63:0] p_ay112_assign_1_reg_3727;
reg   [63:0] p_az_assign_1_reg_3732;
reg   [63:0] p_az113_assign_1_reg_3738;
reg   [63:0] p_az114_assign_1_reg_3744;
reg   [63:0] p_az115_assign_1_reg_3750;
reg   [63:0] p_az116_assign_1_reg_3756;
reg   [63:0] p_az117_assign_1_reg_3762;
reg   [63:0] p_az118_assign_1_reg_3768;
reg   [63:0] p_az119_assign_1_reg_3773;
reg   [63:0] p_az120_assign_1_reg_3778;
reg   [63:0] p_int_vx_assign_4_reg_3783;
wire    ap_CS_fsm_state6;
wire    grp_kick_fu_990_ap_done;
reg   [63:0] p_int_vx25_assign_4_reg_3790;
reg   [63:0] p_int_vx26_assign_4_reg_3797;
reg   [63:0] p_int_vx27_assign_4_reg_3804;
reg   [63:0] p_int_vx28_assign_4_reg_3811;
reg   [63:0] p_int_vx29_assign_4_reg_3818;
reg   [63:0] p_int_vx30_assign_4_reg_3825;
reg   [63:0] p_int_vx3138_assign_4_reg_3832;
reg   [63:0] p_int_vx32_assign_4_reg_3839;
reg   [63:0] p_int_vy_assign_4_reg_3846;
reg   [63:0] p_int_vy33_assign_4_reg_3853;
reg   [63:0] p_int_vy34_assign_4_reg_3860;
reg   [63:0] p_int_vy35_assign_4_reg_3867;
reg   [63:0] p_int_vy36_assign_4_reg_3874;
reg   [63:0] p_int_vy37_assign_4_reg_3881;
reg   [63:0] p_int_vy38_assign_4_reg_3888;
reg   [63:0] p_int_vy39_assign_4_reg_3895;
reg   [63:0] p_int_vy40_assign_4_reg_3902;
reg   [63:0] p_int_vz_assign_4_reg_3909;
reg   [63:0] p_int_vz41_assign_4_reg_3916;
reg   [63:0] p_int_vz42_assign_4_reg_3923;
reg   [63:0] p_int_vz43_assign_4_reg_3930;
reg   [63:0] p_int_vz44_assign_4_reg_3937;
reg   [63:0] p_int_vz45_assign_4_reg_3944;
reg   [63:0] p_int_vz46_assign_4_reg_3951;
reg   [63:0] p_int_vz47_assign_4_reg_3958;
reg   [63:0] p_int_vz48_assign_4_reg_3965;
wire    grp_drift_fu_878_ap_start;
wire    grp_drift_fu_878_ap_idle;
wire    grp_drift_fu_878_ap_ready;
reg   [63:0] grp_drift_fu_878_p_int_0_x_read;
reg   [63:0] grp_drift_fu_878_p_int_1_x_read;
reg   [63:0] grp_drift_fu_878_p_int_2_x_read;
reg   [63:0] grp_drift_fu_878_p_int_3_x_read;
reg   [63:0] grp_drift_fu_878_p_int_4_x_read;
reg   [63:0] grp_drift_fu_878_p_int_5_x_read;
reg   [63:0] grp_drift_fu_878_p_int_6_x_read;
reg   [63:0] grp_drift_fu_878_p_int_7_x_read;
reg   [63:0] grp_drift_fu_878_p_int_8_x_read;
reg   [63:0] grp_drift_fu_878_p_int_0_y_read;
reg   [63:0] grp_drift_fu_878_p_int_1_y_read;
reg   [63:0] grp_drift_fu_878_p_int_2_y_read;
reg   [63:0] grp_drift_fu_878_p_int_3_y_read;
reg   [63:0] grp_drift_fu_878_p_int_4_y_read;
reg   [63:0] grp_drift_fu_878_p_int_5_y_read;
reg   [63:0] grp_drift_fu_878_p_int_6_y_read;
reg   [63:0] grp_drift_fu_878_p_int_7_y_read;
reg   [63:0] grp_drift_fu_878_p_int_8_y_read;
reg   [63:0] grp_drift_fu_878_p_int_0_z_read;
reg   [63:0] grp_drift_fu_878_p_int_1_z_read;
reg   [63:0] grp_drift_fu_878_p_int_2_z_read;
reg   [63:0] grp_drift_fu_878_p_int_3_z_read;
reg   [63:0] grp_drift_fu_878_p_int_4_z_read;
reg   [63:0] grp_drift_fu_878_p_int_5_z_read;
reg   [63:0] grp_drift_fu_878_p_int_6_z_read;
reg   [63:0] grp_drift_fu_878_p_int_7_z_read;
reg   [63:0] grp_drift_fu_878_p_int_8_z_read;
reg   [63:0] grp_drift_fu_878_p_int_0_vx_read;
reg   [63:0] grp_drift_fu_878_p_int_1_vx_read;
reg   [63:0] grp_drift_fu_878_p_int_2_vx_read;
reg   [63:0] grp_drift_fu_878_p_int_3_vx_read;
reg   [63:0] grp_drift_fu_878_p_int_4_vx_read;
reg   [63:0] grp_drift_fu_878_p_int_5_vx_read;
reg   [63:0] grp_drift_fu_878_p_int_6_vx_read;
reg   [63:0] grp_drift_fu_878_p_int_7_vx_read;
reg   [63:0] grp_drift_fu_878_p_int_8_vx_read;
reg   [63:0] grp_drift_fu_878_p_int_0_vy_read;
reg   [63:0] grp_drift_fu_878_p_int_1_vy_read;
reg   [63:0] grp_drift_fu_878_p_int_2_vy_read;
reg   [63:0] grp_drift_fu_878_p_int_3_vy_read;
reg   [63:0] grp_drift_fu_878_p_int_4_vy_read;
reg   [63:0] grp_drift_fu_878_p_int_5_vy_read;
reg   [63:0] grp_drift_fu_878_p_int_6_vy_read;
reg   [63:0] grp_drift_fu_878_p_int_7_vy_read;
reg   [63:0] grp_drift_fu_878_p_int_8_vy_read;
reg   [63:0] grp_drift_fu_878_p_int_0_vz_read;
reg   [63:0] grp_drift_fu_878_p_int_1_vz_read;
reg   [63:0] grp_drift_fu_878_p_int_2_vz_read;
reg   [63:0] grp_drift_fu_878_p_int_3_vz_read;
reg   [63:0] grp_drift_fu_878_p_int_4_vz_read;
reg   [63:0] grp_drift_fu_878_p_int_5_vz_read;
reg   [63:0] grp_drift_fu_878_p_int_6_vz_read;
reg   [63:0] grp_drift_fu_878_p_int_7_vz_read;
reg   [63:0] grp_drift_fu_878_p_int_8_vz_read;
wire   [63:0] grp_drift_fu_878_ap_return_0;
wire   [63:0] grp_drift_fu_878_ap_return_1;
wire   [63:0] grp_drift_fu_878_ap_return_2;
wire   [63:0] grp_drift_fu_878_ap_return_3;
wire   [63:0] grp_drift_fu_878_ap_return_4;
wire   [63:0] grp_drift_fu_878_ap_return_5;
wire   [63:0] grp_drift_fu_878_ap_return_6;
wire   [63:0] grp_drift_fu_878_ap_return_7;
wire   [63:0] grp_drift_fu_878_ap_return_8;
wire   [63:0] grp_drift_fu_878_ap_return_9;
wire   [63:0] grp_drift_fu_878_ap_return_10;
wire   [63:0] grp_drift_fu_878_ap_return_11;
wire   [63:0] grp_drift_fu_878_ap_return_12;
wire   [63:0] grp_drift_fu_878_ap_return_13;
wire   [63:0] grp_drift_fu_878_ap_return_14;
wire   [63:0] grp_drift_fu_878_ap_return_15;
wire   [63:0] grp_drift_fu_878_ap_return_16;
wire   [63:0] grp_drift_fu_878_ap_return_17;
wire   [63:0] grp_drift_fu_878_ap_return_18;
wire   [63:0] grp_drift_fu_878_ap_return_19;
wire   [63:0] grp_drift_fu_878_ap_return_20;
wire   [63:0] grp_drift_fu_878_ap_return_21;
wire   [63:0] grp_drift_fu_878_ap_return_22;
wire   [63:0] grp_drift_fu_878_ap_return_23;
wire   [63:0] grp_drift_fu_878_ap_return_24;
wire   [63:0] grp_drift_fu_878_ap_return_25;
wire   [63:0] grp_drift_fu_878_ap_return_26;
wire    grp_kick_fu_990_ap_start;
wire    grp_kick_fu_990_ap_idle;
wire    grp_kick_fu_990_ap_ready;
wire   [63:0] grp_kick_fu_990_ap_return_0;
wire   [63:0] grp_kick_fu_990_ap_return_1;
wire   [63:0] grp_kick_fu_990_ap_return_2;
wire   [63:0] grp_kick_fu_990_ap_return_3;
wire   [63:0] grp_kick_fu_990_ap_return_4;
wire   [63:0] grp_kick_fu_990_ap_return_5;
wire   [63:0] grp_kick_fu_990_ap_return_6;
wire   [63:0] grp_kick_fu_990_ap_return_7;
wire   [63:0] grp_kick_fu_990_ap_return_8;
wire   [63:0] grp_kick_fu_990_ap_return_9;
wire   [63:0] grp_kick_fu_990_ap_return_10;
wire   [63:0] grp_kick_fu_990_ap_return_11;
wire   [63:0] grp_kick_fu_990_ap_return_12;
wire   [63:0] grp_kick_fu_990_ap_return_13;
wire   [63:0] grp_kick_fu_990_ap_return_14;
wire   [63:0] grp_kick_fu_990_ap_return_15;
wire   [63:0] grp_kick_fu_990_ap_return_16;
wire   [63:0] grp_kick_fu_990_ap_return_17;
wire   [63:0] grp_kick_fu_990_ap_return_18;
wire   [63:0] grp_kick_fu_990_ap_return_19;
wire   [63:0] grp_kick_fu_990_ap_return_20;
wire   [63:0] grp_kick_fu_990_ap_return_21;
wire   [63:0] grp_kick_fu_990_ap_return_22;
wire   [63:0] grp_kick_fu_990_ap_return_23;
wire   [63:0] grp_kick_fu_990_ap_return_24;
wire   [63:0] grp_kick_fu_990_ap_return_25;
wire   [63:0] grp_kick_fu_990_ap_return_26;
wire    grp_gravity_fu_1048_ap_start;
wire    grp_gravity_fu_1048_ap_idle;
wire    grp_gravity_fu_1048_ap_ready;
wire   [63:0] grp_gravity_fu_1048_ap_return_0;
wire   [63:0] grp_gravity_fu_1048_ap_return_1;
wire   [63:0] grp_gravity_fu_1048_ap_return_2;
wire   [63:0] grp_gravity_fu_1048_ap_return_3;
wire   [63:0] grp_gravity_fu_1048_ap_return_4;
wire   [63:0] grp_gravity_fu_1048_ap_return_5;
wire   [63:0] grp_gravity_fu_1048_ap_return_6;
wire   [63:0] grp_gravity_fu_1048_ap_return_7;
wire   [63:0] grp_gravity_fu_1048_ap_return_8;
wire   [63:0] grp_gravity_fu_1048_ap_return_9;
wire   [63:0] grp_gravity_fu_1048_ap_return_10;
wire   [63:0] grp_gravity_fu_1048_ap_return_11;
wire   [63:0] grp_gravity_fu_1048_ap_return_12;
wire   [63:0] grp_gravity_fu_1048_ap_return_13;
wire   [63:0] grp_gravity_fu_1048_ap_return_14;
wire   [63:0] grp_gravity_fu_1048_ap_return_15;
wire   [63:0] grp_gravity_fu_1048_ap_return_16;
wire   [63:0] grp_gravity_fu_1048_ap_return_17;
wire   [63:0] grp_gravity_fu_1048_ap_return_18;
wire   [63:0] grp_gravity_fu_1048_ap_return_19;
wire   [63:0] grp_gravity_fu_1048_ap_return_20;
wire   [63:0] grp_gravity_fu_1048_ap_return_21;
wire   [63:0] grp_gravity_fu_1048_ap_return_22;
wire   [63:0] grp_gravity_fu_1048_ap_return_23;
wire   [63:0] grp_gravity_fu_1048_ap_return_24;
wire   [63:0] grp_gravity_fu_1048_ap_return_25;
wire   [63:0] grp_gravity_fu_1048_ap_return_26;
wire    grp_to_double_fu_1079_ap_start;
wire    grp_to_double_fu_1079_ap_idle;
wire    grp_to_double_fu_1079_ap_ready;
reg   [63:0] grp_to_double_fu_1079_p_int_0_vx_read;
reg   [63:0] grp_to_double_fu_1079_p_int_1_vx_read;
reg   [63:0] grp_to_double_fu_1079_p_int_2_vx_read;
reg   [63:0] grp_to_double_fu_1079_p_int_3_vx_read;
reg   [63:0] grp_to_double_fu_1079_p_int_4_vx_read;
reg   [63:0] grp_to_double_fu_1079_p_int_5_vx_read;
reg   [63:0] grp_to_double_fu_1079_p_int_6_vx_read;
reg   [63:0] grp_to_double_fu_1079_p_int_7_vx_read;
reg   [63:0] grp_to_double_fu_1079_p_int_8_vx_read;
reg   [63:0] grp_to_double_fu_1079_p_int_0_vy_read;
reg   [63:0] grp_to_double_fu_1079_p_int_1_vy_read;
reg   [63:0] grp_to_double_fu_1079_p_int_2_vy_read;
reg   [63:0] grp_to_double_fu_1079_p_int_3_vy_read;
reg   [63:0] grp_to_double_fu_1079_p_int_4_vy_read;
reg   [63:0] grp_to_double_fu_1079_p_int_5_vy_read;
reg   [63:0] grp_to_double_fu_1079_p_int_6_vy_read;
reg   [63:0] grp_to_double_fu_1079_p_int_7_vy_read;
reg   [63:0] grp_to_double_fu_1079_p_int_8_vy_read;
reg   [63:0] grp_to_double_fu_1079_p_int_0_vz_read;
reg   [63:0] grp_to_double_fu_1079_p_int_1_vz_read;
reg   [63:0] grp_to_double_fu_1079_p_int_2_vz_read;
reg   [63:0] grp_to_double_fu_1079_p_int_3_vz_read;
reg   [63:0] grp_to_double_fu_1079_p_int_4_vz_read;
reg   [63:0] grp_to_double_fu_1079_p_int_5_vz_read;
reg   [63:0] grp_to_double_fu_1079_p_int_6_vz_read;
reg   [63:0] grp_to_double_fu_1079_p_int_7_vz_read;
reg   [63:0] grp_to_double_fu_1079_p_int_8_vz_read;
reg   [63:0] grp_to_double_fu_1079_p_0_x_read;
reg   [63:0] grp_to_double_fu_1079_p_1_x_read;
reg   [63:0] grp_to_double_fu_1079_p_2_x_read;
reg   [63:0] grp_to_double_fu_1079_p_3_x_read;
reg   [63:0] grp_to_double_fu_1079_p_4_x_read;
reg   [63:0] grp_to_double_fu_1079_p_5_x_read;
reg   [63:0] grp_to_double_fu_1079_p_6_x_read;
reg   [63:0] grp_to_double_fu_1079_p_7_x_read;
reg   [63:0] grp_to_double_fu_1079_p_8_x_read;
reg   [63:0] grp_to_double_fu_1079_p_0_y_read;
reg   [63:0] grp_to_double_fu_1079_p_1_y_read;
reg   [63:0] grp_to_double_fu_1079_p_2_y_read;
reg   [63:0] grp_to_double_fu_1079_p_3_y_read;
reg   [63:0] grp_to_double_fu_1079_p_4_y_read;
reg   [63:0] grp_to_double_fu_1079_p_5_y_read;
reg   [63:0] grp_to_double_fu_1079_p_6_y_read;
reg   [63:0] grp_to_double_fu_1079_p_7_y_read;
reg   [63:0] grp_to_double_fu_1079_p_8_y_read;
reg   [63:0] grp_to_double_fu_1079_p_0_z_read;
reg   [63:0] grp_to_double_fu_1079_p_1_z_read;
reg   [63:0] grp_to_double_fu_1079_p_2_z_read;
reg   [63:0] grp_to_double_fu_1079_p_3_z_read;
reg   [63:0] grp_to_double_fu_1079_p_4_z_read;
reg   [63:0] grp_to_double_fu_1079_p_5_z_read;
reg   [63:0] grp_to_double_fu_1079_p_6_z_read;
reg   [63:0] grp_to_double_fu_1079_p_7_z_read;
reg   [63:0] grp_to_double_fu_1079_p_8_z_read;
reg   [63:0] grp_to_double_fu_1079_p_0_vx_read;
reg   [63:0] grp_to_double_fu_1079_p_1_vx_read;
reg   [63:0] grp_to_double_fu_1079_p_2_vx_read;
reg   [63:0] grp_to_double_fu_1079_p_3_vx_read;
reg   [63:0] grp_to_double_fu_1079_p_4_vx_read;
reg   [63:0] grp_to_double_fu_1079_p_5_vx_read;
reg   [63:0] grp_to_double_fu_1079_p_6_vx_read;
reg   [63:0] grp_to_double_fu_1079_p_7_vx_read;
reg   [63:0] grp_to_double_fu_1079_p_8_vx_read;
reg   [63:0] grp_to_double_fu_1079_p_0_vy_read;
reg   [63:0] grp_to_double_fu_1079_p_1_vy_read;
reg   [63:0] grp_to_double_fu_1079_p_2_vy_read;
reg   [63:0] grp_to_double_fu_1079_p_3_vy_read;
reg   [63:0] grp_to_double_fu_1079_p_4_vy_read;
reg   [63:0] grp_to_double_fu_1079_p_5_vy_read;
reg   [63:0] grp_to_double_fu_1079_p_6_vy_read;
reg   [63:0] grp_to_double_fu_1079_p_7_vy_read;
reg   [63:0] grp_to_double_fu_1079_p_8_vy_read;
reg   [63:0] grp_to_double_fu_1079_p_0_vz_read;
reg   [63:0] grp_to_double_fu_1079_p_1_vz_read;
reg   [63:0] grp_to_double_fu_1079_p_2_vz_read;
reg   [63:0] grp_to_double_fu_1079_p_3_vz_read;
reg   [63:0] grp_to_double_fu_1079_p_4_vz_read;
reg   [63:0] grp_to_double_fu_1079_p_5_vz_read;
reg   [63:0] grp_to_double_fu_1079_p_6_vz_read;
reg   [63:0] grp_to_double_fu_1079_p_7_vz_read;
reg   [63:0] grp_to_double_fu_1079_p_8_vz_read;
wire   [63:0] grp_to_double_fu_1079_ap_return_0;
wire   [63:0] grp_to_double_fu_1079_ap_return_1;
wire   [63:0] grp_to_double_fu_1079_ap_return_2;
wire   [63:0] grp_to_double_fu_1079_ap_return_3;
wire   [63:0] grp_to_double_fu_1079_ap_return_4;
wire   [63:0] grp_to_double_fu_1079_ap_return_5;
wire   [63:0] grp_to_double_fu_1079_ap_return_6;
wire   [63:0] grp_to_double_fu_1079_ap_return_7;
wire   [63:0] grp_to_double_fu_1079_ap_return_8;
wire   [63:0] grp_to_double_fu_1079_ap_return_9;
wire   [63:0] grp_to_double_fu_1079_ap_return_10;
wire   [63:0] grp_to_double_fu_1079_ap_return_11;
wire   [63:0] grp_to_double_fu_1079_ap_return_12;
wire   [63:0] grp_to_double_fu_1079_ap_return_13;
wire   [63:0] grp_to_double_fu_1079_ap_return_14;
wire   [63:0] grp_to_double_fu_1079_ap_return_15;
wire   [63:0] grp_to_double_fu_1079_ap_return_16;
wire   [63:0] grp_to_double_fu_1079_ap_return_17;
wire   [63:0] grp_to_double_fu_1079_ap_return_18;
wire   [63:0] grp_to_double_fu_1079_ap_return_19;
wire   [63:0] grp_to_double_fu_1079_ap_return_20;
wire   [63:0] grp_to_double_fu_1079_ap_return_21;
wire   [63:0] grp_to_double_fu_1079_ap_return_22;
wire   [63:0] grp_to_double_fu_1079_ap_return_23;
wire   [63:0] grp_to_double_fu_1079_ap_return_24;
wire   [63:0] grp_to_double_fu_1079_ap_return_25;
wire   [63:0] grp_to_double_fu_1079_ap_return_26;
wire   [63:0] grp_to_double_fu_1079_ap_return_27;
wire   [63:0] grp_to_double_fu_1079_ap_return_28;
wire   [63:0] grp_to_double_fu_1079_ap_return_29;
wire   [63:0] grp_to_double_fu_1079_ap_return_30;
wire   [63:0] grp_to_double_fu_1079_ap_return_31;
wire   [63:0] grp_to_double_fu_1079_ap_return_32;
wire   [63:0] grp_to_double_fu_1079_ap_return_33;
wire   [63:0] grp_to_double_fu_1079_ap_return_34;
wire   [63:0] grp_to_double_fu_1079_ap_return_35;
wire   [63:0] grp_to_double_fu_1079_ap_return_36;
wire   [63:0] grp_to_double_fu_1079_ap_return_37;
wire   [63:0] grp_to_double_fu_1079_ap_return_38;
wire   [63:0] grp_to_double_fu_1079_ap_return_39;
wire   [63:0] grp_to_double_fu_1079_ap_return_40;
wire   [63:0] grp_to_double_fu_1079_ap_return_41;
wire   [63:0] grp_to_double_fu_1079_ap_return_42;
wire   [63:0] grp_to_double_fu_1079_ap_return_43;
wire   [63:0] grp_to_double_fu_1079_ap_return_44;
wire   [63:0] grp_to_double_fu_1079_ap_return_45;
wire   [63:0] grp_to_double_fu_1079_ap_return_46;
wire   [63:0] grp_to_double_fu_1079_ap_return_47;
wire   [63:0] grp_to_double_fu_1079_ap_return_48;
wire   [63:0] grp_to_double_fu_1079_ap_return_49;
wire   [63:0] grp_to_double_fu_1079_ap_return_50;
wire   [63:0] grp_to_double_fu_1079_ap_return_51;
wire   [63:0] grp_to_double_fu_1079_ap_return_52;
wire   [63:0] grp_to_double_fu_1079_ap_return_53;
reg    ap_reg_grp_drift_fu_878_ap_start;
reg    ap_reg_grp_kick_fu_990_ap_start;
wire    ap_CS_fsm_state5;
reg    ap_reg_grp_gravity_fu_1048_ap_start;
reg    ap_reg_grp_to_double_fu_1079_ap_start;
wire    ap_CS_fsm_state8;
reg   [63:0] ap_return_0_preg;
reg   [63:0] ap_return_1_preg;
reg   [63:0] ap_return_2_preg;
reg   [63:0] ap_return_3_preg;
reg   [63:0] ap_return_4_preg;
reg   [63:0] ap_return_5_preg;
reg   [63:0] ap_return_6_preg;
reg   [63:0] ap_return_7_preg;
reg   [63:0] ap_return_8_preg;
reg   [63:0] ap_return_9_preg;
reg   [63:0] ap_return_10_preg;
reg   [63:0] ap_return_11_preg;
reg   [63:0] ap_return_12_preg;
reg   [63:0] ap_return_13_preg;
reg   [63:0] ap_return_14_preg;
reg   [63:0] ap_return_15_preg;
reg   [63:0] ap_return_16_preg;
reg   [63:0] ap_return_17_preg;
reg   [63:0] ap_return_18_preg;
reg   [63:0] ap_return_19_preg;
reg   [63:0] ap_return_20_preg;
reg   [63:0] ap_return_21_preg;
reg   [63:0] ap_return_22_preg;
reg   [63:0] ap_return_23_preg;
reg   [63:0] ap_return_24_preg;
reg   [63:0] ap_return_25_preg;
reg   [63:0] ap_return_26_preg;
reg   [63:0] ap_return_27_preg;
reg   [63:0] ap_return_28_preg;
reg   [63:0] ap_return_29_preg;
reg   [63:0] ap_return_30_preg;
reg   [63:0] ap_return_31_preg;
reg   [63:0] ap_return_32_preg;
reg   [63:0] ap_return_33_preg;
reg   [63:0] ap_return_34_preg;
reg   [63:0] ap_return_35_preg;
reg   [63:0] ap_return_36_preg;
reg   [63:0] ap_return_37_preg;
reg   [63:0] ap_return_38_preg;
reg   [63:0] ap_return_39_preg;
reg   [63:0] ap_return_40_preg;
reg   [63:0] ap_return_41_preg;
reg   [63:0] ap_return_42_preg;
reg   [63:0] ap_return_43_preg;
reg   [63:0] ap_return_44_preg;
reg   [63:0] ap_return_45_preg;
reg   [63:0] ap_return_46_preg;
reg   [63:0] ap_return_47_preg;
reg   [63:0] ap_return_48_preg;
reg   [63:0] ap_return_49_preg;
reg   [63:0] ap_return_50_preg;
reg   [63:0] ap_return_51_preg;
reg   [63:0] ap_return_52_preg;
reg   [63:0] ap_return_53_preg;
reg   [63:0] ap_return_54_preg;
reg   [63:0] ap_return_55_preg;
reg   [63:0] ap_return_56_preg;
reg   [63:0] ap_return_57_preg;
reg   [63:0] ap_return_58_preg;
reg   [63:0] ap_return_59_preg;
reg   [63:0] ap_return_60_preg;
reg   [63:0] ap_return_61_preg;
reg   [63:0] ap_return_62_preg;
reg   [63:0] ap_return_63_preg;
reg   [63:0] ap_return_64_preg;
reg   [63:0] ap_return_65_preg;
reg   [63:0] ap_return_66_preg;
reg   [63:0] ap_return_67_preg;
reg   [63:0] ap_return_68_preg;
reg   [63:0] ap_return_69_preg;
reg   [63:0] ap_return_70_preg;
reg   [63:0] ap_return_71_preg;
reg   [63:0] ap_return_72_preg;
reg   [63:0] ap_return_73_preg;
reg   [63:0] ap_return_74_preg;
reg   [63:0] ap_return_75_preg;
reg   [63:0] ap_return_76_preg;
reg   [63:0] ap_return_77_preg;
reg   [63:0] ap_return_78_preg;
reg   [63:0] ap_return_79_preg;
reg   [63:0] ap_return_80_preg;
reg   [63:0] ap_return_81_preg;
reg   [63:0] ap_return_82_preg;
reg   [63:0] ap_return_83_preg;
reg   [63:0] ap_return_84_preg;
reg   [63:0] ap_return_85_preg;
reg   [63:0] ap_return_86_preg;
reg   [63:0] ap_return_87_preg;
reg   [63:0] ap_return_88_preg;
reg   [63:0] ap_return_89_preg;
reg   [63:0] ap_return_90_preg;
reg   [63:0] ap_return_91_preg;
reg   [63:0] ap_return_92_preg;
reg   [63:0] ap_return_93_preg;
reg   [63:0] ap_return_94_preg;
reg   [63:0] ap_return_95_preg;
reg   [63:0] ap_return_96_preg;
reg   [63:0] ap_return_97_preg;
reg   [63:0] ap_return_98_preg;
reg   [63:0] ap_return_99_preg;
reg   [63:0] ap_return_100_preg;
reg   [63:0] ap_return_101_preg;
reg   [63:0] ap_return_102_preg;
reg   [63:0] ap_return_103_preg;
reg   [63:0] ap_return_104_preg;
reg   [63:0] ap_return_105_preg;
reg   [63:0] ap_return_106_preg;
reg   [63:0] ap_return_107_preg;
reg   [63:0] ap_return_108_preg;
reg   [63:0] ap_return_109_preg;
reg   [63:0] ap_return_110_preg;
reg   [63:0] ap_return_111_preg;
reg   [63:0] ap_return_112_preg;
reg   [63:0] ap_return_113_preg;
reg   [63:0] ap_return_114_preg;
reg   [63:0] ap_return_115_preg;
reg   [63:0] ap_return_116_preg;
reg   [63:0] ap_return_117_preg;
reg   [63:0] ap_return_118_preg;
reg   [63:0] ap_return_119_preg;
reg   [63:0] ap_return_120_preg;
reg   [63:0] ap_return_121_preg;
reg   [63:0] ap_return_122_preg;
reg   [63:0] ap_return_123_preg;
reg   [63:0] ap_return_124_preg;
reg   [63:0] ap_return_125_preg;
reg   [7:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_reg_grp_drift_fu_878_ap_start = 1'b0;
#0 ap_reg_grp_kick_fu_990_ap_start = 1'b0;
#0 ap_reg_grp_gravity_fu_1048_ap_start = 1'b0;
#0 ap_reg_grp_to_double_fu_1079_ap_start = 1'b0;
#0 ap_return_0_preg = 64'd0;
#0 ap_return_1_preg = 64'd0;
#0 ap_return_2_preg = 64'd0;
#0 ap_return_3_preg = 64'd0;
#0 ap_return_4_preg = 64'd0;
#0 ap_return_5_preg = 64'd0;
#0 ap_return_6_preg = 64'd0;
#0 ap_return_7_preg = 64'd0;
#0 ap_return_8_preg = 64'd0;
#0 ap_return_9_preg = 64'd0;
#0 ap_return_10_preg = 64'd0;
#0 ap_return_11_preg = 64'd0;
#0 ap_return_12_preg = 64'd0;
#0 ap_return_13_preg = 64'd0;
#0 ap_return_14_preg = 64'd0;
#0 ap_return_15_preg = 64'd0;
#0 ap_return_16_preg = 64'd0;
#0 ap_return_17_preg = 64'd0;
#0 ap_return_18_preg = 64'd0;
#0 ap_return_19_preg = 64'd0;
#0 ap_return_20_preg = 64'd0;
#0 ap_return_21_preg = 64'd0;
#0 ap_return_22_preg = 64'd0;
#0 ap_return_23_preg = 64'd0;
#0 ap_return_24_preg = 64'd0;
#0 ap_return_25_preg = 64'd0;
#0 ap_return_26_preg = 64'd0;
#0 ap_return_27_preg = 64'd0;
#0 ap_return_28_preg = 64'd0;
#0 ap_return_29_preg = 64'd0;
#0 ap_return_30_preg = 64'd0;
#0 ap_return_31_preg = 64'd0;
#0 ap_return_32_preg = 64'd0;
#0 ap_return_33_preg = 64'd0;
#0 ap_return_34_preg = 64'd0;
#0 ap_return_35_preg = 64'd0;
#0 ap_return_36_preg = 64'd0;
#0 ap_return_37_preg = 64'd0;
#0 ap_return_38_preg = 64'd0;
#0 ap_return_39_preg = 64'd0;
#0 ap_return_40_preg = 64'd0;
#0 ap_return_41_preg = 64'd0;
#0 ap_return_42_preg = 64'd0;
#0 ap_return_43_preg = 64'd0;
#0 ap_return_44_preg = 64'd0;
#0 ap_return_45_preg = 64'd0;
#0 ap_return_46_preg = 64'd0;
#0 ap_return_47_preg = 64'd0;
#0 ap_return_48_preg = 64'd0;
#0 ap_return_49_preg = 64'd0;
#0 ap_return_50_preg = 64'd0;
#0 ap_return_51_preg = 64'd0;
#0 ap_return_52_preg = 64'd0;
#0 ap_return_53_preg = 64'd0;
#0 ap_return_54_preg = 64'd0;
#0 ap_return_55_preg = 64'd0;
#0 ap_return_56_preg = 64'd0;
#0 ap_return_57_preg = 64'd0;
#0 ap_return_58_preg = 64'd0;
#0 ap_return_59_preg = 64'd0;
#0 ap_return_60_preg = 64'd0;
#0 ap_return_61_preg = 64'd0;
#0 ap_return_62_preg = 64'd0;
#0 ap_return_63_preg = 64'd0;
#0 ap_return_64_preg = 64'd0;
#0 ap_return_65_preg = 64'd0;
#0 ap_return_66_preg = 64'd0;
#0 ap_return_67_preg = 64'd0;
#0 ap_return_68_preg = 64'd0;
#0 ap_return_69_preg = 64'd0;
#0 ap_return_70_preg = 64'd0;
#0 ap_return_71_preg = 64'd0;
#0 ap_return_72_preg = 64'd0;
#0 ap_return_73_preg = 64'd0;
#0 ap_return_74_preg = 64'd0;
#0 ap_return_75_preg = 64'd0;
#0 ap_return_76_preg = 64'd0;
#0 ap_return_77_preg = 64'd0;
#0 ap_return_78_preg = 64'd0;
#0 ap_return_79_preg = 64'd0;
#0 ap_return_80_preg = 64'd0;
#0 ap_return_81_preg = 64'd0;
#0 ap_return_82_preg = 64'd0;
#0 ap_return_83_preg = 64'd0;
#0 ap_return_84_preg = 64'd0;
#0 ap_return_85_preg = 64'd0;
#0 ap_return_86_preg = 64'd0;
#0 ap_return_87_preg = 64'd0;
#0 ap_return_88_preg = 64'd0;
#0 ap_return_89_preg = 64'd0;
#0 ap_return_90_preg = 64'd0;
#0 ap_return_91_preg = 64'd0;
#0 ap_return_92_preg = 64'd0;
#0 ap_return_93_preg = 64'd0;
#0 ap_return_94_preg = 64'd0;
#0 ap_return_95_preg = 64'd0;
#0 ap_return_96_preg = 64'd0;
#0 ap_return_97_preg = 64'd0;
#0 ap_return_98_preg = 64'd0;
#0 ap_return_99_preg = 64'd0;
#0 ap_return_100_preg = 64'd0;
#0 ap_return_101_preg = 64'd0;
#0 ap_return_102_preg = 64'd0;
#0 ap_return_103_preg = 64'd0;
#0 ap_return_104_preg = 64'd0;
#0 ap_return_105_preg = 64'd0;
#0 ap_return_106_preg = 64'd0;
#0 ap_return_107_preg = 64'd0;
#0 ap_return_108_preg = 64'd0;
#0 ap_return_109_preg = 64'd0;
#0 ap_return_110_preg = 64'd0;
#0 ap_return_111_preg = 64'd0;
#0 ap_return_112_preg = 64'd0;
#0 ap_return_113_preg = 64'd0;
#0 ap_return_114_preg = 64'd0;
#0 ap_return_115_preg = 64'd0;
#0 ap_return_116_preg = 64'd0;
#0 ap_return_117_preg = 64'd0;
#0 ap_return_118_preg = 64'd0;
#0 ap_return_119_preg = 64'd0;
#0 ap_return_120_preg = 64'd0;
#0 ap_return_121_preg = 64'd0;
#0 ap_return_122_preg = 64'd0;
#0 ap_return_123_preg = 64'd0;
#0 ap_return_124_preg = 64'd0;
#0 ap_return_125_preg = 64'd0;
end

drift grp_drift_fu_878(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_drift_fu_878_ap_start),
    .ap_done(grp_drift_fu_878_ap_done),
    .ap_idle(grp_drift_fu_878_ap_idle),
    .ap_ready(grp_drift_fu_878_ap_ready),
    .p_int_0_x_read(grp_drift_fu_878_p_int_0_x_read),
    .p_int_1_x_read(grp_drift_fu_878_p_int_1_x_read),
    .p_int_2_x_read(grp_drift_fu_878_p_int_2_x_read),
    .p_int_3_x_read(grp_drift_fu_878_p_int_3_x_read),
    .p_int_4_x_read(grp_drift_fu_878_p_int_4_x_read),
    .p_int_5_x_read(grp_drift_fu_878_p_int_5_x_read),
    .p_int_6_x_read(grp_drift_fu_878_p_int_6_x_read),
    .p_int_7_x_read(grp_drift_fu_878_p_int_7_x_read),
    .p_int_8_x_read(grp_drift_fu_878_p_int_8_x_read),
    .p_int_0_y_read(grp_drift_fu_878_p_int_0_y_read),
    .p_int_1_y_read(grp_drift_fu_878_p_int_1_y_read),
    .p_int_2_y_read(grp_drift_fu_878_p_int_2_y_read),
    .p_int_3_y_read(grp_drift_fu_878_p_int_3_y_read),
    .p_int_4_y_read(grp_drift_fu_878_p_int_4_y_read),
    .p_int_5_y_read(grp_drift_fu_878_p_int_5_y_read),
    .p_int_6_y_read(grp_drift_fu_878_p_int_6_y_read),
    .p_int_7_y_read(grp_drift_fu_878_p_int_7_y_read),
    .p_int_8_y_read(grp_drift_fu_878_p_int_8_y_read),
    .p_int_0_z_read(grp_drift_fu_878_p_int_0_z_read),
    .p_int_1_z_read(grp_drift_fu_878_p_int_1_z_read),
    .p_int_2_z_read(grp_drift_fu_878_p_int_2_z_read),
    .p_int_3_z_read(grp_drift_fu_878_p_int_3_z_read),
    .p_int_4_z_read(grp_drift_fu_878_p_int_4_z_read),
    .p_int_5_z_read(grp_drift_fu_878_p_int_5_z_read),
    .p_int_6_z_read(grp_drift_fu_878_p_int_6_z_read),
    .p_int_7_z_read(grp_drift_fu_878_p_int_7_z_read),
    .p_int_8_z_read(grp_drift_fu_878_p_int_8_z_read),
    .p_int_0_vx_read(grp_drift_fu_878_p_int_0_vx_read),
    .p_int_1_vx_read(grp_drift_fu_878_p_int_1_vx_read),
    .p_int_2_vx_read(grp_drift_fu_878_p_int_2_vx_read),
    .p_int_3_vx_read(grp_drift_fu_878_p_int_3_vx_read),
    .p_int_4_vx_read(grp_drift_fu_878_p_int_4_vx_read),
    .p_int_5_vx_read(grp_drift_fu_878_p_int_5_vx_read),
    .p_int_6_vx_read(grp_drift_fu_878_p_int_6_vx_read),
    .p_int_7_vx_read(grp_drift_fu_878_p_int_7_vx_read),
    .p_int_8_vx_read(grp_drift_fu_878_p_int_8_vx_read),
    .p_int_0_vy_read(grp_drift_fu_878_p_int_0_vy_read),
    .p_int_1_vy_read(grp_drift_fu_878_p_int_1_vy_read),
    .p_int_2_vy_read(grp_drift_fu_878_p_int_2_vy_read),
    .p_int_3_vy_read(grp_drift_fu_878_p_int_3_vy_read),
    .p_int_4_vy_read(grp_drift_fu_878_p_int_4_vy_read),
    .p_int_5_vy_read(grp_drift_fu_878_p_int_5_vy_read),
    .p_int_6_vy_read(grp_drift_fu_878_p_int_6_vy_read),
    .p_int_7_vy_read(grp_drift_fu_878_p_int_7_vy_read),
    .p_int_8_vy_read(grp_drift_fu_878_p_int_8_vy_read),
    .p_int_0_vz_read(grp_drift_fu_878_p_int_0_vz_read),
    .p_int_1_vz_read(grp_drift_fu_878_p_int_1_vz_read),
    .p_int_2_vz_read(grp_drift_fu_878_p_int_2_vz_read),
    .p_int_3_vz_read(grp_drift_fu_878_p_int_3_vz_read),
    .p_int_4_vz_read(grp_drift_fu_878_p_int_4_vz_read),
    .p_int_5_vz_read(grp_drift_fu_878_p_int_5_vz_read),
    .p_int_6_vz_read(grp_drift_fu_878_p_int_6_vz_read),
    .p_int_7_vz_read(grp_drift_fu_878_p_int_7_vz_read),
    .p_int_8_vz_read(grp_drift_fu_878_p_int_8_vz_read),
    .ap_return_0(grp_drift_fu_878_ap_return_0),
    .ap_return_1(grp_drift_fu_878_ap_return_1),
    .ap_return_2(grp_drift_fu_878_ap_return_2),
    .ap_return_3(grp_drift_fu_878_ap_return_3),
    .ap_return_4(grp_drift_fu_878_ap_return_4),
    .ap_return_5(grp_drift_fu_878_ap_return_5),
    .ap_return_6(grp_drift_fu_878_ap_return_6),
    .ap_return_7(grp_drift_fu_878_ap_return_7),
    .ap_return_8(grp_drift_fu_878_ap_return_8),
    .ap_return_9(grp_drift_fu_878_ap_return_9),
    .ap_return_10(grp_drift_fu_878_ap_return_10),
    .ap_return_11(grp_drift_fu_878_ap_return_11),
    .ap_return_12(grp_drift_fu_878_ap_return_12),
    .ap_return_13(grp_drift_fu_878_ap_return_13),
    .ap_return_14(grp_drift_fu_878_ap_return_14),
    .ap_return_15(grp_drift_fu_878_ap_return_15),
    .ap_return_16(grp_drift_fu_878_ap_return_16),
    .ap_return_17(grp_drift_fu_878_ap_return_17),
    .ap_return_18(grp_drift_fu_878_ap_return_18),
    .ap_return_19(grp_drift_fu_878_ap_return_19),
    .ap_return_20(grp_drift_fu_878_ap_return_20),
    .ap_return_21(grp_drift_fu_878_ap_return_21),
    .ap_return_22(grp_drift_fu_878_ap_return_22),
    .ap_return_23(grp_drift_fu_878_ap_return_23),
    .ap_return_24(grp_drift_fu_878_ap_return_24),
    .ap_return_25(grp_drift_fu_878_ap_return_25),
    .ap_return_26(grp_drift_fu_878_ap_return_26)
);

kick grp_kick_fu_990(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_kick_fu_990_ap_start),
    .ap_done(grp_kick_fu_990_ap_done),
    .ap_idle(grp_kick_fu_990_ap_idle),
    .ap_ready(grp_kick_fu_990_ap_ready),
    .p_int_0_vx_read(p_int_0_vx_read_3_reg_2921),
    .p_int_1_vx_read(p_int_1_vx_read_3_reg_2914),
    .p_int_2_vx_read(p_int_2_vx_read_3_reg_2907),
    .p_int_3_vx_read(p_int_3_vx_read31_reg_2900),
    .p_int_4_vx_read(p_int_4_vx_read32_reg_2893),
    .p_int_5_vx_read(p_int_5_vx_read_3_reg_2886),
    .p_int_6_vx_read(p_int_6_vx_read_3_reg_2879),
    .p_int_7_vx_read(p_int_7_vx_read_3_reg_2872),
    .p_int_8_vx_read(p_int_8_vx_read_3_reg_2865),
    .p_int_0_vy_read(p_int_0_vy_read_3_reg_2858),
    .p_int_1_vy_read(p_int_1_vy_read_2_reg_2851),
    .p_int_2_vy_read(p_int_2_vy_read_3_reg_2844),
    .p_int_3_vy_read(p_int_3_vy_read_3_reg_2837),
    .p_int_4_vy_read(p_int_4_vy_read41_reg_2830),
    .p_int_5_vy_read(p_int_5_vy_read42_reg_2823),
    .p_int_6_vy_read(p_int_6_vy_read_3_reg_2816),
    .p_int_7_vy_read(p_int_7_vy_read_3_reg_2809),
    .p_int_8_vy_read(p_int_8_vy_read_3_reg_2802),
    .p_int_0_vz_read(p_int_0_vz_read_3_reg_2795),
    .p_int_1_vz_read(p_int_1_vz_read_3_reg_2788),
    .p_int_2_vz_read(p_int_2_vz_read_2_reg_2781),
    .p_int_3_vz_read(p_int_3_vz_read_3_reg_2774),
    .p_int_4_vz_read(p_int_4_vz_read_3_reg_2767),
    .p_int_5_vz_read(p_int_5_vz_read51_reg_2760),
    .p_int_6_vz_read(p_int_6_vz_read52_reg_2753),
    .p_int_7_vz_read(p_int_7_vz_read_3_reg_2746),
    .p_int_8_vz_read(p_int_8_vz_read_3_reg_2739),
    .p_0_ax_read(p_ax_assign_1_reg_3630),
    .p_1_ax_read(p_ax97_assign_1_reg_3636),
    .p_2_ax_read(p_ax98_assign_1_reg_3642),
    .p_3_ax_read(p_ax99_assign_1_reg_3648),
    .p_4_ax_read(p_ax100_assign_1_reg_3654),
    .p_5_ax_read(p_ax101_assign_1_reg_3660),
    .p_6_ax_read(p_ax102_assign_1_reg_3666),
    .p_7_ax_read(p_ax103_assign_1_reg_3671),
    .p_8_ax_read(p_ax104_assign_1_reg_3676),
    .p_0_ay_read(p_ay_assign_1_reg_3681),
    .p_1_ay_read(p_ay105_assign_1_reg_3687),
    .p_2_ay_read(p_ay106_assign_1_reg_3693),
    .p_3_ay_read(p_ay107_assign_1_reg_3699),
    .p_4_ay_read(p_ay108_assign_1_reg_3705),
    .p_5_ay_read(p_ay109_assign_1_reg_3711),
    .p_6_ay_read(p_ay110_assign_1_reg_3717),
    .p_7_ay_read(p_ay111_assign_1_reg_3722),
    .p_8_ay_read(p_ay112_assign_1_reg_3727),
    .p_0_az_read(p_az_assign_1_reg_3732),
    .p_1_az_read(p_az113_assign_1_reg_3738),
    .p_2_az_read(p_az114_assign_1_reg_3744),
    .p_3_az_read(p_az115_assign_1_reg_3750),
    .p_4_az_read(p_az116_assign_1_reg_3756),
    .p_5_az_read(p_az117_assign_1_reg_3762),
    .p_6_az_read(p_az118_assign_1_reg_3768),
    .p_7_az_read(p_az119_assign_1_reg_3773),
    .p_8_az_read(p_az120_assign_1_reg_3778),
    .ap_return_0(grp_kick_fu_990_ap_return_0),
    .ap_return_1(grp_kick_fu_990_ap_return_1),
    .ap_return_2(grp_kick_fu_990_ap_return_2),
    .ap_return_3(grp_kick_fu_990_ap_return_3),
    .ap_return_4(grp_kick_fu_990_ap_return_4),
    .ap_return_5(grp_kick_fu_990_ap_return_5),
    .ap_return_6(grp_kick_fu_990_ap_return_6),
    .ap_return_7(grp_kick_fu_990_ap_return_7),
    .ap_return_8(grp_kick_fu_990_ap_return_8),
    .ap_return_9(grp_kick_fu_990_ap_return_9),
    .ap_return_10(grp_kick_fu_990_ap_return_10),
    .ap_return_11(grp_kick_fu_990_ap_return_11),
    .ap_return_12(grp_kick_fu_990_ap_return_12),
    .ap_return_13(grp_kick_fu_990_ap_return_13),
    .ap_return_14(grp_kick_fu_990_ap_return_14),
    .ap_return_15(grp_kick_fu_990_ap_return_15),
    .ap_return_16(grp_kick_fu_990_ap_return_16),
    .ap_return_17(grp_kick_fu_990_ap_return_17),
    .ap_return_18(grp_kick_fu_990_ap_return_18),
    .ap_return_19(grp_kick_fu_990_ap_return_19),
    .ap_return_20(grp_kick_fu_990_ap_return_20),
    .ap_return_21(grp_kick_fu_990_ap_return_21),
    .ap_return_22(grp_kick_fu_990_ap_return_22),
    .ap_return_23(grp_kick_fu_990_ap_return_23),
    .ap_return_24(grp_kick_fu_990_ap_return_24),
    .ap_return_25(grp_kick_fu_990_ap_return_25),
    .ap_return_26(grp_kick_fu_990_ap_return_26)
);

gravity grp_gravity_fu_1048(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_gravity_fu_1048_ap_start),
    .ap_done(grp_gravity_fu_1048_ap_done),
    .ap_idle(grp_gravity_fu_1048_ap_idle),
    .ap_ready(grp_gravity_fu_1048_ap_ready),
    .p_0_x_read(p_x_assign_2_reg_3333),
    .p_1_x_read(p_x49_assign_2_reg_3339),
    .p_2_x_read(p_x50_assign_2_reg_3345),
    .p_3_x_read(p_x51_assign_2_reg_3351),
    .p_4_x_read(p_x52_assign_2_reg_3357),
    .p_5_x_read(p_x53_assign_2_reg_3363),
    .p_6_x_read(p_x54_assign_2_reg_3369),
    .p_7_x_read(p_x55_assign_2_reg_3375),
    .p_8_x_read(p_x56_assign_2_reg_3381),
    .p_0_y_read(p_y_assign_2_reg_3387),
    .p_1_y_read(p_y57_assign_2_reg_3393),
    .p_2_y_read(p_y58_assign_2_reg_3399),
    .p_3_y_read(p_y59_assign_2_reg_3405),
    .p_4_y_read(p_y60_assign_2_reg_3411),
    .p_5_y_read(p_y61_assign_2_reg_3417),
    .p_6_y_read(p_y62_assign_2_reg_3423),
    .p_7_y_read(p_y63_assign_2_reg_3429),
    .p_8_y_read(p_y64_assign_2_reg_3435),
    .p_0_z_read(p_z_assign_2_reg_3441),
    .p_1_z_read(p_z65_assign_2_reg_3447),
    .p_2_z_read(p_z66_assign_2_reg_3453),
    .p_3_z_read(p_z67_assign_2_reg_3459),
    .p_4_z_read(p_z68_assign_2_reg_3465),
    .p_5_z_read(p_z69_assign_2_reg_3471),
    .p_6_z_read(p_z70_assign_2_reg_3477),
    .p_7_z_read(p_z71_assign_2_reg_3483),
    .p_8_z_read(p_z72_assign_2_reg_3489),
    .ap_return_0(grp_gravity_fu_1048_ap_return_0),
    .ap_return_1(grp_gravity_fu_1048_ap_return_1),
    .ap_return_2(grp_gravity_fu_1048_ap_return_2),
    .ap_return_3(grp_gravity_fu_1048_ap_return_3),
    .ap_return_4(grp_gravity_fu_1048_ap_return_4),
    .ap_return_5(grp_gravity_fu_1048_ap_return_5),
    .ap_return_6(grp_gravity_fu_1048_ap_return_6),
    .ap_return_7(grp_gravity_fu_1048_ap_return_7),
    .ap_return_8(grp_gravity_fu_1048_ap_return_8),
    .ap_return_9(grp_gravity_fu_1048_ap_return_9),
    .ap_return_10(grp_gravity_fu_1048_ap_return_10),
    .ap_return_11(grp_gravity_fu_1048_ap_return_11),
    .ap_return_12(grp_gravity_fu_1048_ap_return_12),
    .ap_return_13(grp_gravity_fu_1048_ap_return_13),
    .ap_return_14(grp_gravity_fu_1048_ap_return_14),
    .ap_return_15(grp_gravity_fu_1048_ap_return_15),
    .ap_return_16(grp_gravity_fu_1048_ap_return_16),
    .ap_return_17(grp_gravity_fu_1048_ap_return_17),
    .ap_return_18(grp_gravity_fu_1048_ap_return_18),
    .ap_return_19(grp_gravity_fu_1048_ap_return_19),
    .ap_return_20(grp_gravity_fu_1048_ap_return_20),
    .ap_return_21(grp_gravity_fu_1048_ap_return_21),
    .ap_return_22(grp_gravity_fu_1048_ap_return_22),
    .ap_return_23(grp_gravity_fu_1048_ap_return_23),
    .ap_return_24(grp_gravity_fu_1048_ap_return_24),
    .ap_return_25(grp_gravity_fu_1048_ap_return_25),
    .ap_return_26(grp_gravity_fu_1048_ap_return_26)
);

to_double grp_to_double_fu_1079(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_to_double_fu_1079_ap_start),
    .ap_done(grp_to_double_fu_1079_ap_done),
    .ap_idle(grp_to_double_fu_1079_ap_idle),
    .ap_ready(grp_to_double_fu_1079_ap_ready),
    .p_int_0_x_read(reg_1623),
    .p_int_1_x_read(reg_1629),
    .p_int_2_x_read(reg_1635),
    .p_int_3_x_read(reg_1641),
    .p_int_4_x_read(reg_1647),
    .p_int_5_x_read(reg_1653),
    .p_int_6_x_read(reg_1659),
    .p_int_7_x_read(reg_1665),
    .p_int_8_x_read(reg_1671),
    .p_int_0_y_read(reg_1677),
    .p_int_1_y_read(reg_1683),
    .p_int_2_y_read(reg_1689),
    .p_int_3_y_read(reg_1695),
    .p_int_4_y_read(reg_1701),
    .p_int_5_y_read(reg_1707),
    .p_int_6_y_read(reg_1713),
    .p_int_7_y_read(reg_1719),
    .p_int_8_y_read(reg_1725),
    .p_int_0_z_read(reg_1731),
    .p_int_1_z_read(reg_1737),
    .p_int_2_z_read(reg_1743),
    .p_int_3_z_read(reg_1749),
    .p_int_4_z_read(reg_1755),
    .p_int_5_z_read(reg_1761),
    .p_int_6_z_read(reg_1767),
    .p_int_7_z_read(reg_1773),
    .p_int_8_z_read(reg_1779),
    .p_int_0_vx_read(grp_to_double_fu_1079_p_int_0_vx_read),
    .p_int_1_vx_read(grp_to_double_fu_1079_p_int_1_vx_read),
    .p_int_2_vx_read(grp_to_double_fu_1079_p_int_2_vx_read),
    .p_int_3_vx_read(grp_to_double_fu_1079_p_int_3_vx_read),
    .p_int_4_vx_read(grp_to_double_fu_1079_p_int_4_vx_read),
    .p_int_5_vx_read(grp_to_double_fu_1079_p_int_5_vx_read),
    .p_int_6_vx_read(grp_to_double_fu_1079_p_int_6_vx_read),
    .p_int_7_vx_read(grp_to_double_fu_1079_p_int_7_vx_read),
    .p_int_8_vx_read(grp_to_double_fu_1079_p_int_8_vx_read),
    .p_int_0_vy_read(grp_to_double_fu_1079_p_int_0_vy_read),
    .p_int_1_vy_read(grp_to_double_fu_1079_p_int_1_vy_read),
    .p_int_2_vy_read(grp_to_double_fu_1079_p_int_2_vy_read),
    .p_int_3_vy_read(grp_to_double_fu_1079_p_int_3_vy_read),
    .p_int_4_vy_read(grp_to_double_fu_1079_p_int_4_vy_read),
    .p_int_5_vy_read(grp_to_double_fu_1079_p_int_5_vy_read),
    .p_int_6_vy_read(grp_to_double_fu_1079_p_int_6_vy_read),
    .p_int_7_vy_read(grp_to_double_fu_1079_p_int_7_vy_read),
    .p_int_8_vy_read(grp_to_double_fu_1079_p_int_8_vy_read),
    .p_int_0_vz_read(grp_to_double_fu_1079_p_int_0_vz_read),
    .p_int_1_vz_read(grp_to_double_fu_1079_p_int_1_vz_read),
    .p_int_2_vz_read(grp_to_double_fu_1079_p_int_2_vz_read),
    .p_int_3_vz_read(grp_to_double_fu_1079_p_int_3_vz_read),
    .p_int_4_vz_read(grp_to_double_fu_1079_p_int_4_vz_read),
    .p_int_5_vz_read(grp_to_double_fu_1079_p_int_5_vz_read),
    .p_int_6_vz_read(grp_to_double_fu_1079_p_int_6_vz_read),
    .p_int_7_vz_read(grp_to_double_fu_1079_p_int_7_vz_read),
    .p_int_8_vz_read(grp_to_double_fu_1079_p_int_8_vz_read),
    .p_0_x_read(grp_to_double_fu_1079_p_0_x_read),
    .p_1_x_read(grp_to_double_fu_1079_p_1_x_read),
    .p_2_x_read(grp_to_double_fu_1079_p_2_x_read),
    .p_3_x_read(grp_to_double_fu_1079_p_3_x_read),
    .p_4_x_read(grp_to_double_fu_1079_p_4_x_read),
    .p_5_x_read(grp_to_double_fu_1079_p_5_x_read),
    .p_6_x_read(grp_to_double_fu_1079_p_6_x_read),
    .p_7_x_read(grp_to_double_fu_1079_p_7_x_read),
    .p_8_x_read(grp_to_double_fu_1079_p_8_x_read),
    .p_0_y_read(grp_to_double_fu_1079_p_0_y_read),
    .p_1_y_read(grp_to_double_fu_1079_p_1_y_read),
    .p_2_y_read(grp_to_double_fu_1079_p_2_y_read),
    .p_3_y_read(grp_to_double_fu_1079_p_3_y_read),
    .p_4_y_read(grp_to_double_fu_1079_p_4_y_read),
    .p_5_y_read(grp_to_double_fu_1079_p_5_y_read),
    .p_6_y_read(grp_to_double_fu_1079_p_6_y_read),
    .p_7_y_read(grp_to_double_fu_1079_p_7_y_read),
    .p_8_y_read(grp_to_double_fu_1079_p_8_y_read),
    .p_0_z_read(grp_to_double_fu_1079_p_0_z_read),
    .p_1_z_read(grp_to_double_fu_1079_p_1_z_read),
    .p_2_z_read(grp_to_double_fu_1079_p_2_z_read),
    .p_3_z_read(grp_to_double_fu_1079_p_3_z_read),
    .p_4_z_read(grp_to_double_fu_1079_p_4_z_read),
    .p_5_z_read(grp_to_double_fu_1079_p_5_z_read),
    .p_6_z_read(grp_to_double_fu_1079_p_6_z_read),
    .p_7_z_read(grp_to_double_fu_1079_p_7_z_read),
    .p_8_z_read(grp_to_double_fu_1079_p_8_z_read),
    .p_0_vx_read(grp_to_double_fu_1079_p_0_vx_read),
    .p_1_vx_read(grp_to_double_fu_1079_p_1_vx_read),
    .p_2_vx_read(grp_to_double_fu_1079_p_2_vx_read),
    .p_3_vx_read(grp_to_double_fu_1079_p_3_vx_read),
    .p_4_vx_read(grp_to_double_fu_1079_p_4_vx_read),
    .p_5_vx_read(grp_to_double_fu_1079_p_5_vx_read),
    .p_6_vx_read(grp_to_double_fu_1079_p_6_vx_read),
    .p_7_vx_read(grp_to_double_fu_1079_p_7_vx_read),
    .p_8_vx_read(grp_to_double_fu_1079_p_8_vx_read),
    .p_0_vy_read(grp_to_double_fu_1079_p_0_vy_read),
    .p_1_vy_read(grp_to_double_fu_1079_p_1_vy_read),
    .p_2_vy_read(grp_to_double_fu_1079_p_2_vy_read),
    .p_3_vy_read(grp_to_double_fu_1079_p_3_vy_read),
    .p_4_vy_read(grp_to_double_fu_1079_p_4_vy_read),
    .p_5_vy_read(grp_to_double_fu_1079_p_5_vy_read),
    .p_6_vy_read(grp_to_double_fu_1079_p_6_vy_read),
    .p_7_vy_read(grp_to_double_fu_1079_p_7_vy_read),
    .p_8_vy_read(grp_to_double_fu_1079_p_8_vy_read),
    .p_0_vz_read(grp_to_double_fu_1079_p_0_vz_read),
    .p_1_vz_read(grp_to_double_fu_1079_p_1_vz_read),
    .p_2_vz_read(grp_to_double_fu_1079_p_2_vz_read),
    .p_3_vz_read(grp_to_double_fu_1079_p_3_vz_read),
    .p_4_vz_read(grp_to_double_fu_1079_p_4_vz_read),
    .p_5_vz_read(grp_to_double_fu_1079_p_5_vz_read),
    .p_6_vz_read(grp_to_double_fu_1079_p_6_vz_read),
    .p_7_vz_read(grp_to_double_fu_1079_p_7_vz_read),
    .p_8_vz_read(grp_to_double_fu_1079_p_8_vz_read),
    .ap_return_0(grp_to_double_fu_1079_ap_return_0),
    .ap_return_1(grp_to_double_fu_1079_ap_return_1),
    .ap_return_2(grp_to_double_fu_1079_ap_return_2),
    .ap_return_3(grp_to_double_fu_1079_ap_return_3),
    .ap_return_4(grp_to_double_fu_1079_ap_return_4),
    .ap_return_5(grp_to_double_fu_1079_ap_return_5),
    .ap_return_6(grp_to_double_fu_1079_ap_return_6),
    .ap_return_7(grp_to_double_fu_1079_ap_return_7),
    .ap_return_8(grp_to_double_fu_1079_ap_return_8),
    .ap_return_9(grp_to_double_fu_1079_ap_return_9),
    .ap_return_10(grp_to_double_fu_1079_ap_return_10),
    .ap_return_11(grp_to_double_fu_1079_ap_return_11),
    .ap_return_12(grp_to_double_fu_1079_ap_return_12),
    .ap_return_13(grp_to_double_fu_1079_ap_return_13),
    .ap_return_14(grp_to_double_fu_1079_ap_return_14),
    .ap_return_15(grp_to_double_fu_1079_ap_return_15),
    .ap_return_16(grp_to_double_fu_1079_ap_return_16),
    .ap_return_17(grp_to_double_fu_1079_ap_return_17),
    .ap_return_18(grp_to_double_fu_1079_ap_return_18),
    .ap_return_19(grp_to_double_fu_1079_ap_return_19),
    .ap_return_20(grp_to_double_fu_1079_ap_return_20),
    .ap_return_21(grp_to_double_fu_1079_ap_return_21),
    .ap_return_22(grp_to_double_fu_1079_ap_return_22),
    .ap_return_23(grp_to_double_fu_1079_ap_return_23),
    .ap_return_24(grp_to_double_fu_1079_ap_return_24),
    .ap_return_25(grp_to_double_fu_1079_ap_return_25),
    .ap_return_26(grp_to_double_fu_1079_ap_return_26),
    .ap_return_27(grp_to_double_fu_1079_ap_return_27),
    .ap_return_28(grp_to_double_fu_1079_ap_return_28),
    .ap_return_29(grp_to_double_fu_1079_ap_return_29),
    .ap_return_30(grp_to_double_fu_1079_ap_return_30),
    .ap_return_31(grp_to_double_fu_1079_ap_return_31),
    .ap_return_32(grp_to_double_fu_1079_ap_return_32),
    .ap_return_33(grp_to_double_fu_1079_ap_return_33),
    .ap_return_34(grp_to_double_fu_1079_ap_return_34),
    .ap_return_35(grp_to_double_fu_1079_ap_return_35),
    .ap_return_36(grp_to_double_fu_1079_ap_return_36),
    .ap_return_37(grp_to_double_fu_1079_ap_return_37),
    .ap_return_38(grp_to_double_fu_1079_ap_return_38),
    .ap_return_39(grp_to_double_fu_1079_ap_return_39),
    .ap_return_40(grp_to_double_fu_1079_ap_return_40),
    .ap_return_41(grp_to_double_fu_1079_ap_return_41),
    .ap_return_42(grp_to_double_fu_1079_ap_return_42),
    .ap_return_43(grp_to_double_fu_1079_ap_return_43),
    .ap_return_44(grp_to_double_fu_1079_ap_return_44),
    .ap_return_45(grp_to_double_fu_1079_ap_return_45),
    .ap_return_46(grp_to_double_fu_1079_ap_return_46),
    .ap_return_47(grp_to_double_fu_1079_ap_return_47),
    .ap_return_48(grp_to_double_fu_1079_ap_return_48),
    .ap_return_49(grp_to_double_fu_1079_ap_return_49),
    .ap_return_50(grp_to_double_fu_1079_ap_return_50),
    .ap_return_51(grp_to_double_fu_1079_ap_return_51),
    .ap_return_52(grp_to_double_fu_1079_ap_return_52),
    .ap_return_53(grp_to_double_fu_1079_ap_return_53)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_drift_fu_878_ap_start <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((1'b1 == ap_CS_fsm_state6) & (grp_kick_fu_990_ap_done == 1'b1)))) begin
            ap_reg_grp_drift_fu_878_ap_start <= 1'b1;
        end else if ((1'b1 == grp_drift_fu_878_ap_ready)) begin
            ap_reg_grp_drift_fu_878_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_gravity_fu_1048_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) & (grp_to_double_fu_1079_ap_done == 1'b1))) begin
            ap_reg_grp_gravity_fu_1048_ap_start <= 1'b1;
        end else if ((1'b1 == grp_gravity_fu_1048_ap_ready)) begin
            ap_reg_grp_gravity_fu_1048_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_kick_fu_990_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_reg_grp_kick_fu_990_ap_start <= 1'b1;
        end else if ((1'b1 == grp_kick_fu_990_ap_ready)) begin
            ap_reg_grp_kick_fu_990_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_to_double_fu_1079_ap_start <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state2) & (grp_drift_fu_878_ap_done == 1'b1)) | ((grp_drift_fu_878_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
            ap_reg_grp_to_double_fu_1079_ap_start <= 1'b1;
        end else if ((1'b1 == grp_to_double_fu_1079_ap_ready)) begin
            ap_reg_grp_to_double_fu_1079_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_0_preg <= reg_1623;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_100_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_100_preg <= grp_to_double_fu_1079_ap_return_46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_101_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_101_preg <= grp_to_double_fu_1079_ap_return_47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_102_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_102_preg <= grp_to_double_fu_1079_ap_return_48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_103_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_103_preg <= grp_to_double_fu_1079_ap_return_49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_104_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_104_preg <= grp_to_double_fu_1079_ap_return_50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_105_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_105_preg <= grp_to_double_fu_1079_ap_return_51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_106_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_106_preg <= grp_to_double_fu_1079_ap_return_52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_107_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_107_preg <= grp_to_double_fu_1079_ap_return_53;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_108_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_108_preg <= p_ax_assign_1_reg_3630;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_109_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_109_preg <= p_ax97_assign_1_reg_3636;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_10_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_10_preg <= reg_1683;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_110_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_110_preg <= p_ax98_assign_1_reg_3642;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_111_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_111_preg <= p_ax99_assign_1_reg_3648;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_112_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_112_preg <= p_ax100_assign_1_reg_3654;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_113_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_113_preg <= p_ax101_assign_1_reg_3660;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_114_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_114_preg <= p_ay_assign_1_reg_3681;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_115_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_115_preg <= p_ay105_assign_1_reg_3687;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_116_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_116_preg <= p_ay106_assign_1_reg_3693;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_117_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_117_preg <= p_ay107_assign_1_reg_3699;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_118_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_118_preg <= p_ay108_assign_1_reg_3705;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_119_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_119_preg <= p_ay109_assign_1_reg_3711;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_11_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_11_preg <= reg_1689;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_120_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_120_preg <= p_az_assign_1_reg_3732;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_121_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_121_preg <= p_az113_assign_1_reg_3738;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_122_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_122_preg <= p_az114_assign_1_reg_3744;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_123_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_123_preg <= p_az115_assign_1_reg_3750;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_124_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_124_preg <= p_az116_assign_1_reg_3756;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_125_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_125_preg <= p_az117_assign_1_reg_3762;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_12_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_12_preg <= reg_1695;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_13_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_13_preg <= reg_1701;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_14_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_14_preg <= reg_1707;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_15_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_15_preg <= reg_1713;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_16_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_16_preg <= reg_1719;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_17_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_17_preg <= reg_1725;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_18_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_18_preg <= reg_1731;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_19_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_19_preg <= reg_1737;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_1_preg <= reg_1629;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_20_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_20_preg <= reg_1743;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_21_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_21_preg <= reg_1749;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_22_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_22_preg <= reg_1755;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_23_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_23_preg <= reg_1761;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_24_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_24_preg <= reg_1767;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_25_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_25_preg <= reg_1773;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_26_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_26_preg <= reg_1779;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_27_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_27_preg <= p_int_vx_assign_4_reg_3783;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_28_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_28_preg <= p_int_vx25_assign_4_reg_3790;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_29_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_29_preg <= p_int_vx26_assign_4_reg_3797;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_2_preg <= reg_1635;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_30_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_30_preg <= p_int_vx27_assign_4_reg_3804;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_31_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_31_preg <= p_int_vx28_assign_4_reg_3811;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_32_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_32_preg <= p_int_vx29_assign_4_reg_3818;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_33_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_33_preg <= p_int_vx30_assign_4_reg_3825;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_34_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_34_preg <= p_int_vx3138_assign_4_reg_3832;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_35_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_35_preg <= p_int_vx32_assign_4_reg_3839;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_36_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_36_preg <= p_int_vy_assign_4_reg_3846;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_37_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_37_preg <= p_int_vy33_assign_4_reg_3853;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_38_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_38_preg <= p_int_vy34_assign_4_reg_3860;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_39_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_39_preg <= p_int_vy35_assign_4_reg_3867;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_3_preg <= reg_1641;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_40_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_40_preg <= p_int_vy36_assign_4_reg_3874;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_41_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_41_preg <= p_int_vy37_assign_4_reg_3881;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_42_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_42_preg <= p_int_vy38_assign_4_reg_3888;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_43_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_43_preg <= p_int_vy39_assign_4_reg_3895;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_44_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_44_preg <= p_int_vy40_assign_4_reg_3902;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_45_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_45_preg <= p_int_vz_assign_4_reg_3909;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_46_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_46_preg <= p_int_vz41_assign_4_reg_3916;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_47_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_47_preg <= p_int_vz42_assign_4_reg_3923;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_48_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_48_preg <= p_int_vz43_assign_4_reg_3930;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_49_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_49_preg <= p_int_vz44_assign_4_reg_3937;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_4_preg <= reg_1647;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_50_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_50_preg <= p_int_vz45_assign_4_reg_3944;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_51_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_51_preg <= p_int_vz46_assign_4_reg_3951;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_52_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_52_preg <= p_int_vz47_assign_4_reg_3958;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_53_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_53_preg <= p_int_vz48_assign_4_reg_3965;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_54_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_54_preg <= grp_to_double_fu_1079_ap_return_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_55_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_55_preg <= grp_to_double_fu_1079_ap_return_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_56_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_56_preg <= grp_to_double_fu_1079_ap_return_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_57_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_57_preg <= grp_to_double_fu_1079_ap_return_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_58_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_58_preg <= grp_to_double_fu_1079_ap_return_4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_59_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_59_preg <= grp_to_double_fu_1079_ap_return_5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_5_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_5_preg <= reg_1653;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_60_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_60_preg <= grp_to_double_fu_1079_ap_return_6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_61_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_61_preg <= grp_to_double_fu_1079_ap_return_7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_62_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_62_preg <= grp_to_double_fu_1079_ap_return_8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_63_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_63_preg <= grp_to_double_fu_1079_ap_return_9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_64_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_64_preg <= grp_to_double_fu_1079_ap_return_10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_65_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_65_preg <= grp_to_double_fu_1079_ap_return_11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_66_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_66_preg <= grp_to_double_fu_1079_ap_return_12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_67_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_67_preg <= grp_to_double_fu_1079_ap_return_13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_68_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_68_preg <= grp_to_double_fu_1079_ap_return_14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_69_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_69_preg <= grp_to_double_fu_1079_ap_return_15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_6_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_6_preg <= reg_1659;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_70_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_70_preg <= grp_to_double_fu_1079_ap_return_16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_71_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_71_preg <= grp_to_double_fu_1079_ap_return_17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_72_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_72_preg <= grp_to_double_fu_1079_ap_return_18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_73_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_73_preg <= grp_to_double_fu_1079_ap_return_19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_74_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_74_preg <= grp_to_double_fu_1079_ap_return_20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_75_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_75_preg <= grp_to_double_fu_1079_ap_return_21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_76_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_76_preg <= grp_to_double_fu_1079_ap_return_22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_77_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_77_preg <= grp_to_double_fu_1079_ap_return_23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_78_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_78_preg <= grp_to_double_fu_1079_ap_return_24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_79_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_79_preg <= grp_to_double_fu_1079_ap_return_25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_7_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_7_preg <= reg_1665;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_80_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_80_preg <= grp_to_double_fu_1079_ap_return_26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_81_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_81_preg <= grp_to_double_fu_1079_ap_return_27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_82_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_82_preg <= grp_to_double_fu_1079_ap_return_28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_83_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_83_preg <= grp_to_double_fu_1079_ap_return_29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_84_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_84_preg <= grp_to_double_fu_1079_ap_return_30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_85_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_85_preg <= grp_to_double_fu_1079_ap_return_31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_86_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_86_preg <= grp_to_double_fu_1079_ap_return_32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_87_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_87_preg <= grp_to_double_fu_1079_ap_return_33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_88_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_88_preg <= grp_to_double_fu_1079_ap_return_34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_89_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_89_preg <= grp_to_double_fu_1079_ap_return_35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_8_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_8_preg <= reg_1671;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_90_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_90_preg <= grp_to_double_fu_1079_ap_return_36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_91_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_91_preg <= grp_to_double_fu_1079_ap_return_37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_92_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_92_preg <= grp_to_double_fu_1079_ap_return_38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_93_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_93_preg <= grp_to_double_fu_1079_ap_return_39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_94_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_94_preg <= grp_to_double_fu_1079_ap_return_40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_95_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_95_preg <= grp_to_double_fu_1079_ap_return_41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_96_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_96_preg <= grp_to_double_fu_1079_ap_return_42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_97_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_97_preg <= grp_to_double_fu_1079_ap_return_43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_98_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_98_preg <= grp_to_double_fu_1079_ap_return_44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_99_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_99_preg <= grp_to_double_fu_1079_ap_return_45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_9_preg <= 64'd0;
    end else begin
        if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_9_preg <= reg_1677;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        ap_return_0 <= reg_1623;
        ap_return_1 <= reg_1629;
        ap_return_10 <= reg_1683;
        ap_return_100 <= grp_to_double_fu_1079_ap_return_46;
        ap_return_101 <= grp_to_double_fu_1079_ap_return_47;
        ap_return_102 <= grp_to_double_fu_1079_ap_return_48;
        ap_return_103 <= grp_to_double_fu_1079_ap_return_49;
        ap_return_104 <= grp_to_double_fu_1079_ap_return_50;
        ap_return_105 <= grp_to_double_fu_1079_ap_return_51;
        ap_return_106 <= grp_to_double_fu_1079_ap_return_52;
        ap_return_107 <= grp_to_double_fu_1079_ap_return_53;
        ap_return_108 <= p_ax_assign_1_reg_3630;
        ap_return_109 <= p_ax97_assign_1_reg_3636;
        ap_return_11 <= reg_1689;
        ap_return_110 <= p_ax98_assign_1_reg_3642;
        ap_return_111 <= p_ax99_assign_1_reg_3648;
        ap_return_112 <= p_ax100_assign_1_reg_3654;
        ap_return_113 <= p_ax101_assign_1_reg_3660;
        ap_return_114 <= p_ay_assign_1_reg_3681;
        ap_return_115 <= p_ay105_assign_1_reg_3687;
        ap_return_116 <= p_ay106_assign_1_reg_3693;
        ap_return_117 <= p_ay107_assign_1_reg_3699;
        ap_return_118 <= p_ay108_assign_1_reg_3705;
        ap_return_119 <= p_ay109_assign_1_reg_3711;
        ap_return_12 <= reg_1695;
        ap_return_120 <= p_az_assign_1_reg_3732;
        ap_return_121 <= p_az113_assign_1_reg_3738;
        ap_return_122 <= p_az114_assign_1_reg_3744;
        ap_return_123 <= p_az115_assign_1_reg_3750;
        ap_return_124 <= p_az116_assign_1_reg_3756;
        ap_return_125 <= p_az117_assign_1_reg_3762;
        ap_return_13 <= reg_1701;
        ap_return_14 <= reg_1707;
        ap_return_15 <= reg_1713;
        ap_return_16 <= reg_1719;
        ap_return_17 <= reg_1725;
        ap_return_18 <= reg_1731;
        ap_return_19 <= reg_1737;
        ap_return_2 <= reg_1635;
        ap_return_20 <= reg_1743;
        ap_return_21 <= reg_1749;
        ap_return_22 <= reg_1755;
        ap_return_23 <= reg_1761;
        ap_return_24 <= reg_1767;
        ap_return_25 <= reg_1773;
        ap_return_26 <= reg_1779;
        ap_return_27 <= p_int_vx_assign_4_reg_3783;
        ap_return_28 <= p_int_vx25_assign_4_reg_3790;
        ap_return_29 <= p_int_vx26_assign_4_reg_3797;
        ap_return_3 <= reg_1641;
        ap_return_30 <= p_int_vx27_assign_4_reg_3804;
        ap_return_31 <= p_int_vx28_assign_4_reg_3811;
        ap_return_32 <= p_int_vx29_assign_4_reg_3818;
        ap_return_33 <= p_int_vx30_assign_4_reg_3825;
        ap_return_34 <= p_int_vx3138_assign_4_reg_3832;
        ap_return_35 <= p_int_vx32_assign_4_reg_3839;
        ap_return_36 <= p_int_vy_assign_4_reg_3846;
        ap_return_37 <= p_int_vy33_assign_4_reg_3853;
        ap_return_38 <= p_int_vy34_assign_4_reg_3860;
        ap_return_39 <= p_int_vy35_assign_4_reg_3867;
        ap_return_4 <= reg_1647;
        ap_return_40 <= p_int_vy36_assign_4_reg_3874;
        ap_return_41 <= p_int_vy37_assign_4_reg_3881;
        ap_return_42 <= p_int_vy38_assign_4_reg_3888;
        ap_return_43 <= p_int_vy39_assign_4_reg_3895;
        ap_return_44 <= p_int_vy40_assign_4_reg_3902;
        ap_return_45 <= p_int_vz_assign_4_reg_3909;
        ap_return_46 <= p_int_vz41_assign_4_reg_3916;
        ap_return_47 <= p_int_vz42_assign_4_reg_3923;
        ap_return_48 <= p_int_vz43_assign_4_reg_3930;
        ap_return_49 <= p_int_vz44_assign_4_reg_3937;
        ap_return_5 <= reg_1653;
        ap_return_50 <= p_int_vz45_assign_4_reg_3944;
        ap_return_51 <= p_int_vz46_assign_4_reg_3951;
        ap_return_52 <= p_int_vz47_assign_4_reg_3958;
        ap_return_53 <= p_int_vz48_assign_4_reg_3965;
        ap_return_54 <= grp_to_double_fu_1079_ap_return_0;
        ap_return_55 <= grp_to_double_fu_1079_ap_return_1;
        ap_return_56 <= grp_to_double_fu_1079_ap_return_2;
        ap_return_57 <= grp_to_double_fu_1079_ap_return_3;
        ap_return_58 <= grp_to_double_fu_1079_ap_return_4;
        ap_return_59 <= grp_to_double_fu_1079_ap_return_5;
        ap_return_6 <= reg_1659;
        ap_return_60 <= grp_to_double_fu_1079_ap_return_6;
        ap_return_61 <= grp_to_double_fu_1079_ap_return_7;
        ap_return_62 <= grp_to_double_fu_1079_ap_return_8;
        ap_return_63 <= grp_to_double_fu_1079_ap_return_9;
        ap_return_64 <= grp_to_double_fu_1079_ap_return_10;
        ap_return_65 <= grp_to_double_fu_1079_ap_return_11;
        ap_return_66 <= grp_to_double_fu_1079_ap_return_12;
        ap_return_67 <= grp_to_double_fu_1079_ap_return_13;
        ap_return_68 <= grp_to_double_fu_1079_ap_return_14;
        ap_return_69 <= grp_to_double_fu_1079_ap_return_15;
        ap_return_7 <= reg_1665;
        ap_return_70 <= grp_to_double_fu_1079_ap_return_16;
        ap_return_71 <= grp_to_double_fu_1079_ap_return_17;
        ap_return_72 <= grp_to_double_fu_1079_ap_return_18;
        ap_return_73 <= grp_to_double_fu_1079_ap_return_19;
        ap_return_74 <= grp_to_double_fu_1079_ap_return_20;
        ap_return_75 <= grp_to_double_fu_1079_ap_return_21;
        ap_return_76 <= grp_to_double_fu_1079_ap_return_22;
        ap_return_77 <= grp_to_double_fu_1079_ap_return_23;
        ap_return_78 <= grp_to_double_fu_1079_ap_return_24;
        ap_return_79 <= grp_to_double_fu_1079_ap_return_25;
        ap_return_8 <= reg_1671;
        ap_return_80 <= grp_to_double_fu_1079_ap_return_26;
        ap_return_81 <= grp_to_double_fu_1079_ap_return_27;
        ap_return_82 <= grp_to_double_fu_1079_ap_return_28;
        ap_return_83 <= grp_to_double_fu_1079_ap_return_29;
        ap_return_84 <= grp_to_double_fu_1079_ap_return_30;
        ap_return_85 <= grp_to_double_fu_1079_ap_return_31;
        ap_return_86 <= grp_to_double_fu_1079_ap_return_32;
        ap_return_87 <= grp_to_double_fu_1079_ap_return_33;
        ap_return_88 <= grp_to_double_fu_1079_ap_return_34;
        ap_return_89 <= grp_to_double_fu_1079_ap_return_35;
        ap_return_9 <= reg_1677;
        ap_return_90 <= grp_to_double_fu_1079_ap_return_36;
        ap_return_91 <= grp_to_double_fu_1079_ap_return_37;
        ap_return_92 <= grp_to_double_fu_1079_ap_return_38;
        ap_return_93 <= grp_to_double_fu_1079_ap_return_39;
        ap_return_94 <= grp_to_double_fu_1079_ap_return_40;
        ap_return_95 <= grp_to_double_fu_1079_ap_return_41;
        ap_return_96 <= grp_to_double_fu_1079_ap_return_42;
        ap_return_97 <= grp_to_double_fu_1079_ap_return_43;
        ap_return_98 <= grp_to_double_fu_1079_ap_return_44;
        ap_return_99 <= grp_to_double_fu_1079_ap_return_45;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_drift_fu_878_ap_done == 1'b1))) begin
        p_0_vx_read_2_reg_3193 <= p_0_vx_read;
        p_0_vy_read91_reg_3148 <= p_0_vy_read;
        p_0_vz_read_2_reg_3103 <= p_0_vz_read;
        p_0_x_read_2_reg_3328 <= p_0_x_read;
        p_0_y_read_2_reg_3283 <= p_0_y_read;
        p_0_z_read_2_reg_3238 <= p_0_z_read;
        p_1_vx_read_2_reg_3188 <= p_1_vx_read;
        p_1_vy_read_2_reg_3143 <= p_1_vy_read;
        p_1_vz_read101_reg_3098 <= p_1_vz_read;
        p_1_x_read_2_reg_3323 <= p_1_x_read;
        p_1_y_read_2_reg_3278 <= p_1_y_read;
        p_1_z_read_2_reg_3233 <= p_1_z_read;
        p_2_vx_read_2_reg_3183 <= p_2_vx_read;
        p_2_vy_read_2_reg_3138 <= p_2_vy_read;
        p_2_vz_read_2_reg_3093 <= p_2_vz_read;
        p_2_x_read_2_reg_3318 <= p_2_x_read;
        p_2_y_read_2_reg_3273 <= p_2_y_read;
        p_2_z_read_2_reg_3228 <= p_2_z_read;
        p_3_vx_read_2_reg_3178 <= p_3_vx_read;
        p_3_vy_read_2_reg_3133 <= p_3_vy_read;
        p_3_vz_read_2_reg_3088 <= p_3_vz_read;
        p_3_x_read_2_reg_3313 <= p_3_x_read;
        p_3_y_read_2_reg_3268 <= p_3_y_read;
        p_3_z_read_2_reg_3223 <= p_3_z_read;
        p_4_vx_read_2_reg_3173 <= p_4_vx_read;
        p_4_vy_read_2_reg_3128 <= p_4_vy_read;
        p_4_vz_read_2_reg_3083 <= p_4_vz_read;
        p_4_x_read_2_reg_3308 <= p_4_x_read;
        p_4_y_read_2_reg_3263 <= p_4_y_read;
        p_4_z_read_2_reg_3218 <= p_4_z_read;
        p_5_vx_read_2_reg_3168 <= p_5_vx_read;
        p_5_vy_read_2_reg_3123 <= p_5_vy_read;
        p_5_vz_read_2_reg_3078 <= p_5_vz_read;
        p_5_x_read_2_reg_3303 <= p_5_x_read;
        p_5_y_read_2_reg_3258 <= p_5_y_read;
        p_5_z_read_2_reg_3213 <= p_5_z_read;
        p_6_vx_read_2_reg_3163 <= p_6_vx_read;
        p_6_vy_read_2_reg_3118 <= p_6_vy_read;
        p_6_vz_read_2_reg_3073 <= p_6_vz_read;
        p_6_x_read61_reg_3298 <= p_6_x_read;
        p_6_y_read_2_reg_3253 <= p_6_y_read;
        p_6_z_read_2_reg_3208 <= p_6_z_read;
        p_7_vx_read_2_reg_3158 <= p_7_vx_read;
        p_7_vy_read_2_reg_3113 <= p_7_vy_read;
        p_7_vz_read_2_reg_3068 <= p_7_vz_read;
        p_7_x_read_2_reg_3293 <= p_7_x_read;
        p_7_y_read71_reg_3248 <= p_7_y_read;
        p_7_z_read_2_reg_3203 <= p_7_z_read;
        p_8_vx_read_2_reg_3153 <= p_8_vx_read;
        p_8_vy_read_2_reg_3108 <= p_8_vy_read;
        p_8_vz_read_2_reg_3063 <= p_8_vz_read;
        p_8_x_read_2_reg_3288 <= p_8_x_read;
        p_8_y_read_2_reg_3243 <= p_8_y_read;
        p_8_z_read81_reg_3198 <= p_8_z_read;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (grp_gravity_fu_1048_ap_done == 1'b1))) begin
        p_ax100_assign_1_reg_3654 <= grp_gravity_fu_1048_ap_return_4;
        p_ax101_assign_1_reg_3660 <= grp_gravity_fu_1048_ap_return_5;
        p_ax102_assign_1_reg_3666 <= grp_gravity_fu_1048_ap_return_6;
        p_ax103_assign_1_reg_3671 <= grp_gravity_fu_1048_ap_return_7;
        p_ax104_assign_1_reg_3676 <= grp_gravity_fu_1048_ap_return_8;
        p_ax97_assign_1_reg_3636 <= grp_gravity_fu_1048_ap_return_1;
        p_ax98_assign_1_reg_3642 <= grp_gravity_fu_1048_ap_return_2;
        p_ax99_assign_1_reg_3648 <= grp_gravity_fu_1048_ap_return_3;
        p_ax_assign_1_reg_3630 <= grp_gravity_fu_1048_ap_return_0;
        p_ay105_assign_1_reg_3687 <= grp_gravity_fu_1048_ap_return_10;
        p_ay106_assign_1_reg_3693 <= grp_gravity_fu_1048_ap_return_11;
        p_ay107_assign_1_reg_3699 <= grp_gravity_fu_1048_ap_return_12;
        p_ay108_assign_1_reg_3705 <= grp_gravity_fu_1048_ap_return_13;
        p_ay109_assign_1_reg_3711 <= grp_gravity_fu_1048_ap_return_14;
        p_ay110_assign_1_reg_3717 <= grp_gravity_fu_1048_ap_return_15;
        p_ay111_assign_1_reg_3722 <= grp_gravity_fu_1048_ap_return_16;
        p_ay112_assign_1_reg_3727 <= grp_gravity_fu_1048_ap_return_17;
        p_ay_assign_1_reg_3681 <= grp_gravity_fu_1048_ap_return_9;
        p_az113_assign_1_reg_3738 <= grp_gravity_fu_1048_ap_return_19;
        p_az114_assign_1_reg_3744 <= grp_gravity_fu_1048_ap_return_20;
        p_az115_assign_1_reg_3750 <= grp_gravity_fu_1048_ap_return_21;
        p_az116_assign_1_reg_3756 <= grp_gravity_fu_1048_ap_return_22;
        p_az117_assign_1_reg_3762 <= grp_gravity_fu_1048_ap_return_23;
        p_az118_assign_1_reg_3768 <= grp_gravity_fu_1048_ap_return_24;
        p_az119_assign_1_reg_3773 <= grp_gravity_fu_1048_ap_return_25;
        p_az120_assign_1_reg_3778 <= grp_gravity_fu_1048_ap_return_26;
        p_az_assign_1_reg_3732 <= grp_gravity_fu_1048_ap_return_18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_int_0_vx_read_3_reg_2921 <= p_int_0_vx_read;
        p_int_0_vy_read_3_reg_2858 <= p_int_0_vy_read;
        p_int_0_vz_read_3_reg_2795 <= p_int_0_vz_read;
        p_int_0_x_read_2_reg_3058 <= p_int_0_x_read;
        p_int_0_y_read_2_reg_3013 <= p_int_0_y_read;
        p_int_0_z_read_2_reg_2968 <= p_int_0_z_read;
        p_int_1_vx_read_3_reg_2914 <= p_int_1_vx_read;
        p_int_1_vy_read_2_reg_2851 <= p_int_1_vy_read;
        p_int_1_vz_read_3_reg_2788 <= p_int_1_vz_read;
        p_int_1_x_read_2_reg_3053 <= p_int_1_x_read;
        p_int_1_y_read11_reg_3008 <= p_int_1_y_read;
        p_int_1_z_read_2_reg_2963 <= p_int_1_z_read;
        p_int_2_vx_read_3_reg_2907 <= p_int_2_vx_read;
        p_int_2_vy_read_3_reg_2844 <= p_int_2_vy_read;
        p_int_2_vz_read_2_reg_2781 <= p_int_2_vz_read;
        p_int_2_x_read_2_reg_3048 <= p_int_2_x_read;
        p_int_2_y_read_2_reg_3003 <= p_int_2_y_read;
        p_int_2_z_read21_reg_2958 <= p_int_2_z_read;
        p_int_3_vx_read31_reg_2900 <= p_int_3_vx_read;
        p_int_3_vy_read_3_reg_2837 <= p_int_3_vy_read;
        p_int_3_vz_read_3_reg_2774 <= p_int_3_vz_read;
        p_int_3_x_read_2_reg_3043 <= p_int_3_x_read;
        p_int_3_y_read_2_reg_2998 <= p_int_3_y_read;
        p_int_3_z_read_2_reg_2953 <= p_int_3_z_read;
        p_int_4_vx_read32_reg_2893 <= p_int_4_vx_read;
        p_int_4_vy_read41_reg_2830 <= p_int_4_vy_read;
        p_int_4_vz_read_3_reg_2767 <= p_int_4_vz_read;
        p_int_4_x_read_2_reg_3038 <= p_int_4_x_read;
        p_int_4_y_read_2_reg_2993 <= p_int_4_y_read;
        p_int_4_z_read_2_reg_2948 <= p_int_4_z_read;
        p_int_5_vx_read_3_reg_2886 <= p_int_5_vx_read;
        p_int_5_vy_read42_reg_2823 <= p_int_5_vy_read;
        p_int_5_vz_read51_reg_2760 <= p_int_5_vz_read;
        p_int_5_x_read_2_reg_3033 <= p_int_5_x_read;
        p_int_5_y_read_2_reg_2988 <= p_int_5_y_read;
        p_int_5_z_read_2_reg_2943 <= p_int_5_z_read;
        p_int_6_vx_read_3_reg_2879 <= p_int_6_vx_read;
        p_int_6_vy_read_3_reg_2816 <= p_int_6_vy_read;
        p_int_6_vz_read52_reg_2753 <= p_int_6_vz_read;
        p_int_6_x_read_2_reg_3028 <= p_int_6_x_read;
        p_int_6_y_read_2_reg_2983 <= p_int_6_y_read;
        p_int_6_z_read_2_reg_2938 <= p_int_6_z_read;
        p_int_7_vx_read_3_reg_2872 <= p_int_7_vx_read;
        p_int_7_vy_read_3_reg_2809 <= p_int_7_vy_read;
        p_int_7_vz_read_3_reg_2746 <= p_int_7_vz_read;
        p_int_7_x_read_2_reg_3023 <= p_int_7_x_read;
        p_int_7_y_read_2_reg_2978 <= p_int_7_y_read;
        p_int_7_z_read_2_reg_2933 <= p_int_7_z_read;
        p_int_8_vx_read_3_reg_2865 <= p_int_8_vx_read;
        p_int_8_vy_read_3_reg_2802 <= p_int_8_vy_read;
        p_int_8_vz_read_3_reg_2739 <= p_int_8_vz_read;
        p_int_8_x_read_2_reg_3018 <= p_int_8_x_read;
        p_int_8_y_read_2_reg_2973 <= p_int_8_y_read;
        p_int_8_z_read_2_reg_2928 <= p_int_8_z_read;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (grp_kick_fu_990_ap_done == 1'b1))) begin
        p_int_vx25_assign_4_reg_3790 <= grp_kick_fu_990_ap_return_1;
        p_int_vx26_assign_4_reg_3797 <= grp_kick_fu_990_ap_return_2;
        p_int_vx27_assign_4_reg_3804 <= grp_kick_fu_990_ap_return_3;
        p_int_vx28_assign_4_reg_3811 <= grp_kick_fu_990_ap_return_4;
        p_int_vx29_assign_4_reg_3818 <= grp_kick_fu_990_ap_return_5;
        p_int_vx30_assign_4_reg_3825 <= grp_kick_fu_990_ap_return_6;
        p_int_vx3138_assign_4_reg_3832 <= grp_kick_fu_990_ap_return_7;
        p_int_vx32_assign_4_reg_3839 <= grp_kick_fu_990_ap_return_8;
        p_int_vx_assign_4_reg_3783 <= grp_kick_fu_990_ap_return_0;
        p_int_vy33_assign_4_reg_3853 <= grp_kick_fu_990_ap_return_10;
        p_int_vy34_assign_4_reg_3860 <= grp_kick_fu_990_ap_return_11;
        p_int_vy35_assign_4_reg_3867 <= grp_kick_fu_990_ap_return_12;
        p_int_vy36_assign_4_reg_3874 <= grp_kick_fu_990_ap_return_13;
        p_int_vy37_assign_4_reg_3881 <= grp_kick_fu_990_ap_return_14;
        p_int_vy38_assign_4_reg_3888 <= grp_kick_fu_990_ap_return_15;
        p_int_vy39_assign_4_reg_3895 <= grp_kick_fu_990_ap_return_16;
        p_int_vy40_assign_4_reg_3902 <= grp_kick_fu_990_ap_return_17;
        p_int_vy_assign_4_reg_3846 <= grp_kick_fu_990_ap_return_9;
        p_int_vz41_assign_4_reg_3916 <= grp_kick_fu_990_ap_return_19;
        p_int_vz42_assign_4_reg_3923 <= grp_kick_fu_990_ap_return_20;
        p_int_vz43_assign_4_reg_3930 <= grp_kick_fu_990_ap_return_21;
        p_int_vz44_assign_4_reg_3937 <= grp_kick_fu_990_ap_return_22;
        p_int_vz45_assign_4_reg_3944 <= grp_kick_fu_990_ap_return_23;
        p_int_vz46_assign_4_reg_3951 <= grp_kick_fu_990_ap_return_24;
        p_int_vz47_assign_4_reg_3958 <= grp_kick_fu_990_ap_return_25;
        p_int_vz48_assign_4_reg_3965 <= grp_kick_fu_990_ap_return_26;
        p_int_vz_assign_4_reg_3909 <= grp_kick_fu_990_ap_return_18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_to_double_fu_1079_ap_done == 1'b1))) begin
        p_vx73_assign_1_reg_3500 <= grp_to_double_fu_1079_ap_return_28;
        p_vx74_assign_1_reg_3505 <= grp_to_double_fu_1079_ap_return_29;
        p_vx75_assign_1_reg_3510 <= grp_to_double_fu_1079_ap_return_30;
        p_vx76_assign_1_reg_3515 <= grp_to_double_fu_1079_ap_return_31;
        p_vx77_assign_1_reg_3520 <= grp_to_double_fu_1079_ap_return_32;
        p_vx78_assign_1_reg_3525 <= grp_to_double_fu_1079_ap_return_33;
        p_vx79_assign_1_reg_3530 <= grp_to_double_fu_1079_ap_return_34;
        p_vx80_assign_1_reg_3535 <= grp_to_double_fu_1079_ap_return_35;
        p_vx_assign_1_reg_3495 <= grp_to_double_fu_1079_ap_return_27;
        p_vy81_assign_1_reg_3545 <= grp_to_double_fu_1079_ap_return_37;
        p_vy82_assign_1_reg_3550 <= grp_to_double_fu_1079_ap_return_38;
        p_vy83_assign_1_reg_3555 <= grp_to_double_fu_1079_ap_return_39;
        p_vy84_assign_1_reg_3560 <= grp_to_double_fu_1079_ap_return_40;
        p_vy85_assign_1_reg_3565 <= grp_to_double_fu_1079_ap_return_41;
        p_vy86_assign_1_reg_3570 <= grp_to_double_fu_1079_ap_return_42;
        p_vy87_assign_1_reg_3575 <= grp_to_double_fu_1079_ap_return_43;
        p_vy88_assign_1_reg_3580 <= grp_to_double_fu_1079_ap_return_44;
        p_vy_assign_1_reg_3540 <= grp_to_double_fu_1079_ap_return_36;
        p_vz89_assign_1_reg_3590 <= grp_to_double_fu_1079_ap_return_46;
        p_vz90_assign_1_reg_3595 <= grp_to_double_fu_1079_ap_return_47;
        p_vz91_assign_1_reg_3600 <= grp_to_double_fu_1079_ap_return_48;
        p_vz92_assign_1_reg_3605 <= grp_to_double_fu_1079_ap_return_49;
        p_vz93_assign_1_reg_3610 <= grp_to_double_fu_1079_ap_return_50;
        p_vz94_assign_1_reg_3615 <= grp_to_double_fu_1079_ap_return_51;
        p_vz95_assign_1_reg_3620 <= grp_to_double_fu_1079_ap_return_52;
        p_vz96_assign_1_reg_3625 <= grp_to_double_fu_1079_ap_return_53;
        p_vz_assign_1_reg_3585 <= grp_to_double_fu_1079_ap_return_45;
        p_x49_assign_2_reg_3339 <= grp_to_double_fu_1079_ap_return_1;
        p_x50_assign_2_reg_3345 <= grp_to_double_fu_1079_ap_return_2;
        p_x51_assign_2_reg_3351 <= grp_to_double_fu_1079_ap_return_3;
        p_x52_assign_2_reg_3357 <= grp_to_double_fu_1079_ap_return_4;
        p_x53_assign_2_reg_3363 <= grp_to_double_fu_1079_ap_return_5;
        p_x54_assign_2_reg_3369 <= grp_to_double_fu_1079_ap_return_6;
        p_x55_assign_2_reg_3375 <= grp_to_double_fu_1079_ap_return_7;
        p_x56_assign_2_reg_3381 <= grp_to_double_fu_1079_ap_return_8;
        p_x_assign_2_reg_3333 <= grp_to_double_fu_1079_ap_return_0;
        p_y57_assign_2_reg_3393 <= grp_to_double_fu_1079_ap_return_10;
        p_y58_assign_2_reg_3399 <= grp_to_double_fu_1079_ap_return_11;
        p_y59_assign_2_reg_3405 <= grp_to_double_fu_1079_ap_return_12;
        p_y60_assign_2_reg_3411 <= grp_to_double_fu_1079_ap_return_13;
        p_y61_assign_2_reg_3417 <= grp_to_double_fu_1079_ap_return_14;
        p_y62_assign_2_reg_3423 <= grp_to_double_fu_1079_ap_return_15;
        p_y63_assign_2_reg_3429 <= grp_to_double_fu_1079_ap_return_16;
        p_y64_assign_2_reg_3435 <= grp_to_double_fu_1079_ap_return_17;
        p_y_assign_2_reg_3387 <= grp_to_double_fu_1079_ap_return_9;
        p_z65_assign_2_reg_3447 <= grp_to_double_fu_1079_ap_return_19;
        p_z66_assign_2_reg_3453 <= grp_to_double_fu_1079_ap_return_20;
        p_z67_assign_2_reg_3459 <= grp_to_double_fu_1079_ap_return_21;
        p_z68_assign_2_reg_3465 <= grp_to_double_fu_1079_ap_return_22;
        p_z69_assign_2_reg_3471 <= grp_to_double_fu_1079_ap_return_23;
        p_z70_assign_2_reg_3477 <= grp_to_double_fu_1079_ap_return_24;
        p_z71_assign_2_reg_3483 <= grp_to_double_fu_1079_ap_return_25;
        p_z72_assign_2_reg_3489 <= grp_to_double_fu_1079_ap_return_26;
        p_z_assign_2_reg_3441 <= grp_to_double_fu_1079_ap_return_18;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (grp_drift_fu_878_ap_done == 1'b1)) | ((grp_drift_fu_878_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
        reg_1623 <= grp_drift_fu_878_ap_return_0;
        reg_1629 <= grp_drift_fu_878_ap_return_1;
        reg_1635 <= grp_drift_fu_878_ap_return_2;
        reg_1641 <= grp_drift_fu_878_ap_return_3;
        reg_1647 <= grp_drift_fu_878_ap_return_4;
        reg_1653 <= grp_drift_fu_878_ap_return_5;
        reg_1659 <= grp_drift_fu_878_ap_return_6;
        reg_1665 <= grp_drift_fu_878_ap_return_7;
        reg_1671 <= grp_drift_fu_878_ap_return_8;
        reg_1677 <= grp_drift_fu_878_ap_return_9;
        reg_1683 <= grp_drift_fu_878_ap_return_10;
        reg_1689 <= grp_drift_fu_878_ap_return_11;
        reg_1695 <= grp_drift_fu_878_ap_return_12;
        reg_1701 <= grp_drift_fu_878_ap_return_13;
        reg_1707 <= grp_drift_fu_878_ap_return_14;
        reg_1713 <= grp_drift_fu_878_ap_return_15;
        reg_1719 <= grp_drift_fu_878_ap_return_16;
        reg_1725 <= grp_drift_fu_878_ap_return_17;
        reg_1731 <= grp_drift_fu_878_ap_return_18;
        reg_1737 <= grp_drift_fu_878_ap_return_19;
        reg_1743 <= grp_drift_fu_878_ap_return_20;
        reg_1749 <= grp_drift_fu_878_ap_return_21;
        reg_1755 <= grp_drift_fu_878_ap_return_22;
        reg_1761 <= grp_drift_fu_878_ap_return_23;
        reg_1767 <= grp_drift_fu_878_ap_return_24;
        reg_1773 <= grp_drift_fu_878_ap_return_25;
        reg_1779 <= grp_drift_fu_878_ap_return_26;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_0_vx_read = p_int_vx_assign_4_reg_3783;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_0_vx_read = p_int_0_vx_read_3_reg_2921;
    end else begin
        grp_drift_fu_878_p_int_0_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_0_vy_read = p_int_vy_assign_4_reg_3846;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_0_vy_read = p_int_0_vy_read_3_reg_2858;
    end else begin
        grp_drift_fu_878_p_int_0_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_0_vz_read = p_int_vz_assign_4_reg_3909;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_0_vz_read = p_int_0_vz_read_3_reg_2795;
    end else begin
        grp_drift_fu_878_p_int_0_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_0_x_read = reg_1623;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_0_x_read = p_int_0_x_read_2_reg_3058;
    end else begin
        grp_drift_fu_878_p_int_0_x_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_0_y_read = reg_1677;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_0_y_read = p_int_0_y_read_2_reg_3013;
    end else begin
        grp_drift_fu_878_p_int_0_y_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_0_z_read = reg_1731;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_0_z_read = p_int_0_z_read_2_reg_2968;
    end else begin
        grp_drift_fu_878_p_int_0_z_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_1_vx_read = p_int_vx25_assign_4_reg_3790;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_1_vx_read = p_int_1_vx_read_3_reg_2914;
    end else begin
        grp_drift_fu_878_p_int_1_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_1_vy_read = p_int_vy33_assign_4_reg_3853;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_1_vy_read = p_int_1_vy_read_2_reg_2851;
    end else begin
        grp_drift_fu_878_p_int_1_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_1_vz_read = p_int_vz41_assign_4_reg_3916;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_1_vz_read = p_int_1_vz_read_3_reg_2788;
    end else begin
        grp_drift_fu_878_p_int_1_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_1_x_read = reg_1629;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_1_x_read = p_int_1_x_read_2_reg_3053;
    end else begin
        grp_drift_fu_878_p_int_1_x_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_1_y_read = reg_1683;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_1_y_read = p_int_1_y_read11_reg_3008;
    end else begin
        grp_drift_fu_878_p_int_1_y_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_1_z_read = reg_1737;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_1_z_read = p_int_1_z_read_2_reg_2963;
    end else begin
        grp_drift_fu_878_p_int_1_z_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_2_vx_read = p_int_vx26_assign_4_reg_3797;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_2_vx_read = p_int_2_vx_read_3_reg_2907;
    end else begin
        grp_drift_fu_878_p_int_2_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_2_vy_read = p_int_vy34_assign_4_reg_3860;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_2_vy_read = p_int_2_vy_read_3_reg_2844;
    end else begin
        grp_drift_fu_878_p_int_2_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_2_vz_read = p_int_vz42_assign_4_reg_3923;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_2_vz_read = p_int_2_vz_read_2_reg_2781;
    end else begin
        grp_drift_fu_878_p_int_2_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_2_x_read = reg_1635;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_2_x_read = p_int_2_x_read_2_reg_3048;
    end else begin
        grp_drift_fu_878_p_int_2_x_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_2_y_read = reg_1689;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_2_y_read = p_int_2_y_read_2_reg_3003;
    end else begin
        grp_drift_fu_878_p_int_2_y_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_2_z_read = reg_1743;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_2_z_read = p_int_2_z_read21_reg_2958;
    end else begin
        grp_drift_fu_878_p_int_2_z_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_3_vx_read = p_int_vx27_assign_4_reg_3804;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_3_vx_read = p_int_3_vx_read31_reg_2900;
    end else begin
        grp_drift_fu_878_p_int_3_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_3_vy_read = p_int_vy35_assign_4_reg_3867;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_3_vy_read = p_int_3_vy_read_3_reg_2837;
    end else begin
        grp_drift_fu_878_p_int_3_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_3_vz_read = p_int_vz43_assign_4_reg_3930;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_3_vz_read = p_int_3_vz_read_3_reg_2774;
    end else begin
        grp_drift_fu_878_p_int_3_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_3_x_read = reg_1641;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_3_x_read = p_int_3_x_read_2_reg_3043;
    end else begin
        grp_drift_fu_878_p_int_3_x_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_3_y_read = reg_1695;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_3_y_read = p_int_3_y_read_2_reg_2998;
    end else begin
        grp_drift_fu_878_p_int_3_y_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_3_z_read = reg_1749;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_3_z_read = p_int_3_z_read_2_reg_2953;
    end else begin
        grp_drift_fu_878_p_int_3_z_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_4_vx_read = p_int_vx28_assign_4_reg_3811;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_4_vx_read = p_int_4_vx_read32_reg_2893;
    end else begin
        grp_drift_fu_878_p_int_4_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_4_vy_read = p_int_vy36_assign_4_reg_3874;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_4_vy_read = p_int_4_vy_read41_reg_2830;
    end else begin
        grp_drift_fu_878_p_int_4_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_4_vz_read = p_int_vz44_assign_4_reg_3937;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_4_vz_read = p_int_4_vz_read_3_reg_2767;
    end else begin
        grp_drift_fu_878_p_int_4_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_4_x_read = reg_1647;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_4_x_read = p_int_4_x_read_2_reg_3038;
    end else begin
        grp_drift_fu_878_p_int_4_x_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_4_y_read = reg_1701;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_4_y_read = p_int_4_y_read_2_reg_2993;
    end else begin
        grp_drift_fu_878_p_int_4_y_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_4_z_read = reg_1755;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_4_z_read = p_int_4_z_read_2_reg_2948;
    end else begin
        grp_drift_fu_878_p_int_4_z_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_5_vx_read = p_int_vx29_assign_4_reg_3818;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_5_vx_read = p_int_5_vx_read_3_reg_2886;
    end else begin
        grp_drift_fu_878_p_int_5_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_5_vy_read = p_int_vy37_assign_4_reg_3881;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_5_vy_read = p_int_5_vy_read42_reg_2823;
    end else begin
        grp_drift_fu_878_p_int_5_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_5_vz_read = p_int_vz45_assign_4_reg_3944;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_5_vz_read = p_int_5_vz_read51_reg_2760;
    end else begin
        grp_drift_fu_878_p_int_5_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_5_x_read = reg_1653;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_5_x_read = p_int_5_x_read_2_reg_3033;
    end else begin
        grp_drift_fu_878_p_int_5_x_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_5_y_read = reg_1707;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_5_y_read = p_int_5_y_read_2_reg_2988;
    end else begin
        grp_drift_fu_878_p_int_5_y_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_5_z_read = reg_1761;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_5_z_read = p_int_5_z_read_2_reg_2943;
    end else begin
        grp_drift_fu_878_p_int_5_z_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_6_vx_read = p_int_vx30_assign_4_reg_3825;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_6_vx_read = p_int_6_vx_read_3_reg_2879;
    end else begin
        grp_drift_fu_878_p_int_6_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_6_vy_read = p_int_vy38_assign_4_reg_3888;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_6_vy_read = p_int_6_vy_read_3_reg_2816;
    end else begin
        grp_drift_fu_878_p_int_6_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_6_vz_read = p_int_vz46_assign_4_reg_3951;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_6_vz_read = p_int_6_vz_read52_reg_2753;
    end else begin
        grp_drift_fu_878_p_int_6_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_6_x_read = reg_1659;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_6_x_read = p_int_6_x_read_2_reg_3028;
    end else begin
        grp_drift_fu_878_p_int_6_x_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_6_y_read = reg_1713;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_6_y_read = p_int_6_y_read_2_reg_2983;
    end else begin
        grp_drift_fu_878_p_int_6_y_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_6_z_read = reg_1767;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_6_z_read = p_int_6_z_read_2_reg_2938;
    end else begin
        grp_drift_fu_878_p_int_6_z_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_7_vx_read = p_int_vx3138_assign_4_reg_3832;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_7_vx_read = p_int_7_vx_read_3_reg_2872;
    end else begin
        grp_drift_fu_878_p_int_7_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_7_vy_read = p_int_vy39_assign_4_reg_3895;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_7_vy_read = p_int_7_vy_read_3_reg_2809;
    end else begin
        grp_drift_fu_878_p_int_7_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_7_vz_read = p_int_vz47_assign_4_reg_3958;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_7_vz_read = p_int_7_vz_read_3_reg_2746;
    end else begin
        grp_drift_fu_878_p_int_7_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_7_x_read = reg_1665;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_7_x_read = p_int_7_x_read_2_reg_3023;
    end else begin
        grp_drift_fu_878_p_int_7_x_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_7_y_read = reg_1719;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_7_y_read = p_int_7_y_read_2_reg_2978;
    end else begin
        grp_drift_fu_878_p_int_7_y_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_7_z_read = reg_1773;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_7_z_read = p_int_7_z_read_2_reg_2933;
    end else begin
        grp_drift_fu_878_p_int_7_z_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_8_vx_read = p_int_vx32_assign_4_reg_3839;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_8_vx_read = p_int_8_vx_read_3_reg_2865;
    end else begin
        grp_drift_fu_878_p_int_8_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_8_vy_read = p_int_vy40_assign_4_reg_3902;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_8_vy_read = p_int_8_vy_read_3_reg_2802;
    end else begin
        grp_drift_fu_878_p_int_8_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_8_vz_read = p_int_vz48_assign_4_reg_3965;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_8_vz_read = p_int_8_vz_read_3_reg_2739;
    end else begin
        grp_drift_fu_878_p_int_8_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_8_x_read = reg_1671;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_8_x_read = p_int_8_x_read_2_reg_3018;
    end else begin
        grp_drift_fu_878_p_int_8_x_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_8_y_read = reg_1725;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_8_y_read = p_int_8_y_read_2_reg_2973;
    end else begin
        grp_drift_fu_878_p_int_8_y_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_drift_fu_878_p_int_8_z_read = reg_1779;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_878_p_int_8_z_read = p_int_8_z_read_2_reg_2928;
    end else begin
        grp_drift_fu_878_p_int_8_z_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_0_vx_read = p_vx_assign_1_reg_3495;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_0_vx_read = p_0_vx_read_2_reg_3193;
    end else begin
        grp_to_double_fu_1079_p_0_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_0_vy_read = p_vy_assign_1_reg_3540;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_0_vy_read = p_0_vy_read91_reg_3148;
    end else begin
        grp_to_double_fu_1079_p_0_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_0_vz_read = p_vz_assign_1_reg_3585;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_0_vz_read = p_0_vz_read_2_reg_3103;
    end else begin
        grp_to_double_fu_1079_p_0_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_0_x_read = p_x_assign_2_reg_3333;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_0_x_read = p_0_x_read_2_reg_3328;
    end else begin
        grp_to_double_fu_1079_p_0_x_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_0_y_read = p_y_assign_2_reg_3387;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_0_y_read = p_0_y_read_2_reg_3283;
    end else begin
        grp_to_double_fu_1079_p_0_y_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_0_z_read = p_z_assign_2_reg_3441;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_0_z_read = p_0_z_read_2_reg_3238;
    end else begin
        grp_to_double_fu_1079_p_0_z_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_1_vx_read = p_vx73_assign_1_reg_3500;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_1_vx_read = p_1_vx_read_2_reg_3188;
    end else begin
        grp_to_double_fu_1079_p_1_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_1_vy_read = p_vy81_assign_1_reg_3545;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_1_vy_read = p_1_vy_read_2_reg_3143;
    end else begin
        grp_to_double_fu_1079_p_1_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_1_vz_read = p_vz89_assign_1_reg_3590;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_1_vz_read = p_1_vz_read101_reg_3098;
    end else begin
        grp_to_double_fu_1079_p_1_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_1_x_read = p_x49_assign_2_reg_3339;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_1_x_read = p_1_x_read_2_reg_3323;
    end else begin
        grp_to_double_fu_1079_p_1_x_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_1_y_read = p_y57_assign_2_reg_3393;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_1_y_read = p_1_y_read_2_reg_3278;
    end else begin
        grp_to_double_fu_1079_p_1_y_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_1_z_read = p_z65_assign_2_reg_3447;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_1_z_read = p_1_z_read_2_reg_3233;
    end else begin
        grp_to_double_fu_1079_p_1_z_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_2_vx_read = p_vx74_assign_1_reg_3505;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_2_vx_read = p_2_vx_read_2_reg_3183;
    end else begin
        grp_to_double_fu_1079_p_2_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_2_vy_read = p_vy82_assign_1_reg_3550;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_2_vy_read = p_2_vy_read_2_reg_3138;
    end else begin
        grp_to_double_fu_1079_p_2_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_2_vz_read = p_vz90_assign_1_reg_3595;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_2_vz_read = p_2_vz_read_2_reg_3093;
    end else begin
        grp_to_double_fu_1079_p_2_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_2_x_read = p_x50_assign_2_reg_3345;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_2_x_read = p_2_x_read_2_reg_3318;
    end else begin
        grp_to_double_fu_1079_p_2_x_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_2_y_read = p_y58_assign_2_reg_3399;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_2_y_read = p_2_y_read_2_reg_3273;
    end else begin
        grp_to_double_fu_1079_p_2_y_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_2_z_read = p_z66_assign_2_reg_3453;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_2_z_read = p_2_z_read_2_reg_3228;
    end else begin
        grp_to_double_fu_1079_p_2_z_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_3_vx_read = p_vx75_assign_1_reg_3510;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_3_vx_read = p_3_vx_read_2_reg_3178;
    end else begin
        grp_to_double_fu_1079_p_3_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_3_vy_read = p_vy83_assign_1_reg_3555;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_3_vy_read = p_3_vy_read_2_reg_3133;
    end else begin
        grp_to_double_fu_1079_p_3_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_3_vz_read = p_vz91_assign_1_reg_3600;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_3_vz_read = p_3_vz_read_2_reg_3088;
    end else begin
        grp_to_double_fu_1079_p_3_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_3_x_read = p_x51_assign_2_reg_3351;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_3_x_read = p_3_x_read_2_reg_3313;
    end else begin
        grp_to_double_fu_1079_p_3_x_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_3_y_read = p_y59_assign_2_reg_3405;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_3_y_read = p_3_y_read_2_reg_3268;
    end else begin
        grp_to_double_fu_1079_p_3_y_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_3_z_read = p_z67_assign_2_reg_3459;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_3_z_read = p_3_z_read_2_reg_3223;
    end else begin
        grp_to_double_fu_1079_p_3_z_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_4_vx_read = p_vx76_assign_1_reg_3515;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_4_vx_read = p_4_vx_read_2_reg_3173;
    end else begin
        grp_to_double_fu_1079_p_4_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_4_vy_read = p_vy84_assign_1_reg_3560;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_4_vy_read = p_4_vy_read_2_reg_3128;
    end else begin
        grp_to_double_fu_1079_p_4_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_4_vz_read = p_vz92_assign_1_reg_3605;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_4_vz_read = p_4_vz_read_2_reg_3083;
    end else begin
        grp_to_double_fu_1079_p_4_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_4_x_read = p_x52_assign_2_reg_3357;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_4_x_read = p_4_x_read_2_reg_3308;
    end else begin
        grp_to_double_fu_1079_p_4_x_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_4_y_read = p_y60_assign_2_reg_3411;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_4_y_read = p_4_y_read_2_reg_3263;
    end else begin
        grp_to_double_fu_1079_p_4_y_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_4_z_read = p_z68_assign_2_reg_3465;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_4_z_read = p_4_z_read_2_reg_3218;
    end else begin
        grp_to_double_fu_1079_p_4_z_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_5_vx_read = p_vx77_assign_1_reg_3520;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_5_vx_read = p_5_vx_read_2_reg_3168;
    end else begin
        grp_to_double_fu_1079_p_5_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_5_vy_read = p_vy85_assign_1_reg_3565;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_5_vy_read = p_5_vy_read_2_reg_3123;
    end else begin
        grp_to_double_fu_1079_p_5_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_5_vz_read = p_vz93_assign_1_reg_3610;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_5_vz_read = p_5_vz_read_2_reg_3078;
    end else begin
        grp_to_double_fu_1079_p_5_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_5_x_read = p_x53_assign_2_reg_3363;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_5_x_read = p_5_x_read_2_reg_3303;
    end else begin
        grp_to_double_fu_1079_p_5_x_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_5_y_read = p_y61_assign_2_reg_3417;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_5_y_read = p_5_y_read_2_reg_3258;
    end else begin
        grp_to_double_fu_1079_p_5_y_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_5_z_read = p_z69_assign_2_reg_3471;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_5_z_read = p_5_z_read_2_reg_3213;
    end else begin
        grp_to_double_fu_1079_p_5_z_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_6_vx_read = p_vx78_assign_1_reg_3525;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_6_vx_read = p_6_vx_read_2_reg_3163;
    end else begin
        grp_to_double_fu_1079_p_6_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_6_vy_read = p_vy86_assign_1_reg_3570;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_6_vy_read = p_6_vy_read_2_reg_3118;
    end else begin
        grp_to_double_fu_1079_p_6_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_6_vz_read = p_vz94_assign_1_reg_3615;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_6_vz_read = p_6_vz_read_2_reg_3073;
    end else begin
        grp_to_double_fu_1079_p_6_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_6_x_read = p_x54_assign_2_reg_3369;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_6_x_read = p_6_x_read61_reg_3298;
    end else begin
        grp_to_double_fu_1079_p_6_x_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_6_y_read = p_y62_assign_2_reg_3423;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_6_y_read = p_6_y_read_2_reg_3253;
    end else begin
        grp_to_double_fu_1079_p_6_y_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_6_z_read = p_z70_assign_2_reg_3477;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_6_z_read = p_6_z_read_2_reg_3208;
    end else begin
        grp_to_double_fu_1079_p_6_z_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_7_vx_read = p_vx79_assign_1_reg_3530;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_7_vx_read = p_7_vx_read_2_reg_3158;
    end else begin
        grp_to_double_fu_1079_p_7_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_7_vy_read = p_vy87_assign_1_reg_3575;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_7_vy_read = p_7_vy_read_2_reg_3113;
    end else begin
        grp_to_double_fu_1079_p_7_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_7_vz_read = p_vz95_assign_1_reg_3620;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_7_vz_read = p_7_vz_read_2_reg_3068;
    end else begin
        grp_to_double_fu_1079_p_7_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_7_x_read = p_x55_assign_2_reg_3375;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_7_x_read = p_7_x_read_2_reg_3293;
    end else begin
        grp_to_double_fu_1079_p_7_x_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_7_y_read = p_y63_assign_2_reg_3429;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_7_y_read = p_7_y_read71_reg_3248;
    end else begin
        grp_to_double_fu_1079_p_7_y_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_7_z_read = p_z71_assign_2_reg_3483;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_7_z_read = p_7_z_read_2_reg_3203;
    end else begin
        grp_to_double_fu_1079_p_7_z_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_8_vx_read = p_vx80_assign_1_reg_3535;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_8_vx_read = p_8_vx_read_2_reg_3153;
    end else begin
        grp_to_double_fu_1079_p_8_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_8_vy_read = p_vy88_assign_1_reg_3580;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_8_vy_read = p_8_vy_read_2_reg_3108;
    end else begin
        grp_to_double_fu_1079_p_8_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_8_vz_read = p_vz96_assign_1_reg_3625;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_8_vz_read = p_8_vz_read_2_reg_3063;
    end else begin
        grp_to_double_fu_1079_p_8_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_8_x_read = p_x56_assign_2_reg_3381;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_8_x_read = p_8_x_read_2_reg_3288;
    end else begin
        grp_to_double_fu_1079_p_8_x_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_8_y_read = p_y64_assign_2_reg_3435;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_8_y_read = p_8_y_read_2_reg_3243;
    end else begin
        grp_to_double_fu_1079_p_8_y_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_8_z_read = p_z72_assign_2_reg_3489;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_8_z_read = p_8_z_read81_reg_3198;
    end else begin
        grp_to_double_fu_1079_p_8_z_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_int_0_vx_read = p_int_vx_assign_4_reg_3783;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_int_0_vx_read = p_int_0_vx_read_3_reg_2921;
    end else begin
        grp_to_double_fu_1079_p_int_0_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_int_0_vy_read = p_int_vy_assign_4_reg_3846;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_int_0_vy_read = p_int_0_vy_read_3_reg_2858;
    end else begin
        grp_to_double_fu_1079_p_int_0_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_int_0_vz_read = p_int_vz_assign_4_reg_3909;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_int_0_vz_read = p_int_0_vz_read_3_reg_2795;
    end else begin
        grp_to_double_fu_1079_p_int_0_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_int_1_vx_read = p_int_vx25_assign_4_reg_3790;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_int_1_vx_read = p_int_1_vx_read_3_reg_2914;
    end else begin
        grp_to_double_fu_1079_p_int_1_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_int_1_vy_read = p_int_vy33_assign_4_reg_3853;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_int_1_vy_read = p_int_1_vy_read_2_reg_2851;
    end else begin
        grp_to_double_fu_1079_p_int_1_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_int_1_vz_read = p_int_vz41_assign_4_reg_3916;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_int_1_vz_read = p_int_1_vz_read_3_reg_2788;
    end else begin
        grp_to_double_fu_1079_p_int_1_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_int_2_vx_read = p_int_vx26_assign_4_reg_3797;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_int_2_vx_read = p_int_2_vx_read_3_reg_2907;
    end else begin
        grp_to_double_fu_1079_p_int_2_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_int_2_vy_read = p_int_vy34_assign_4_reg_3860;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_int_2_vy_read = p_int_2_vy_read_3_reg_2844;
    end else begin
        grp_to_double_fu_1079_p_int_2_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_int_2_vz_read = p_int_vz42_assign_4_reg_3923;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_int_2_vz_read = p_int_2_vz_read_2_reg_2781;
    end else begin
        grp_to_double_fu_1079_p_int_2_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_int_3_vx_read = p_int_vx27_assign_4_reg_3804;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_int_3_vx_read = p_int_3_vx_read31_reg_2900;
    end else begin
        grp_to_double_fu_1079_p_int_3_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_int_3_vy_read = p_int_vy35_assign_4_reg_3867;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_int_3_vy_read = p_int_3_vy_read_3_reg_2837;
    end else begin
        grp_to_double_fu_1079_p_int_3_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_int_3_vz_read = p_int_vz43_assign_4_reg_3930;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_int_3_vz_read = p_int_3_vz_read_3_reg_2774;
    end else begin
        grp_to_double_fu_1079_p_int_3_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_int_4_vx_read = p_int_vx28_assign_4_reg_3811;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_int_4_vx_read = p_int_4_vx_read32_reg_2893;
    end else begin
        grp_to_double_fu_1079_p_int_4_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_int_4_vy_read = p_int_vy36_assign_4_reg_3874;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_int_4_vy_read = p_int_4_vy_read41_reg_2830;
    end else begin
        grp_to_double_fu_1079_p_int_4_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_int_4_vz_read = p_int_vz44_assign_4_reg_3937;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_int_4_vz_read = p_int_4_vz_read_3_reg_2767;
    end else begin
        grp_to_double_fu_1079_p_int_4_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_int_5_vx_read = p_int_vx29_assign_4_reg_3818;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_int_5_vx_read = p_int_5_vx_read_3_reg_2886;
    end else begin
        grp_to_double_fu_1079_p_int_5_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_int_5_vy_read = p_int_vy37_assign_4_reg_3881;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_int_5_vy_read = p_int_5_vy_read42_reg_2823;
    end else begin
        grp_to_double_fu_1079_p_int_5_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_int_5_vz_read = p_int_vz45_assign_4_reg_3944;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_int_5_vz_read = p_int_5_vz_read51_reg_2760;
    end else begin
        grp_to_double_fu_1079_p_int_5_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_int_6_vx_read = p_int_vx30_assign_4_reg_3825;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_int_6_vx_read = p_int_6_vx_read_3_reg_2879;
    end else begin
        grp_to_double_fu_1079_p_int_6_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_int_6_vy_read = p_int_vy38_assign_4_reg_3888;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_int_6_vy_read = p_int_6_vy_read_3_reg_2816;
    end else begin
        grp_to_double_fu_1079_p_int_6_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_int_6_vz_read = p_int_vz46_assign_4_reg_3951;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_int_6_vz_read = p_int_6_vz_read52_reg_2753;
    end else begin
        grp_to_double_fu_1079_p_int_6_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_int_7_vx_read = p_int_vx3138_assign_4_reg_3832;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_int_7_vx_read = p_int_7_vx_read_3_reg_2872;
    end else begin
        grp_to_double_fu_1079_p_int_7_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_int_7_vy_read = p_int_vy39_assign_4_reg_3895;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_int_7_vy_read = p_int_7_vy_read_3_reg_2809;
    end else begin
        grp_to_double_fu_1079_p_int_7_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_int_7_vz_read = p_int_vz47_assign_4_reg_3958;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_int_7_vz_read = p_int_7_vz_read_3_reg_2746;
    end else begin
        grp_to_double_fu_1079_p_int_7_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_int_8_vx_read = p_int_vx32_assign_4_reg_3839;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_int_8_vx_read = p_int_8_vx_read_3_reg_2865;
    end else begin
        grp_to_double_fu_1079_p_int_8_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_int_8_vy_read = p_int_vy40_assign_4_reg_3902;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_int_8_vy_read = p_int_8_vy_read_3_reg_2802;
    end else begin
        grp_to_double_fu_1079_p_int_8_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_to_double_fu_1079_p_int_8_vz_read = p_int_vz48_assign_4_reg_3965;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_1079_p_int_8_vz_read = p_int_8_vz_read_3_reg_2739;
    end else begin
        grp_to_double_fu_1079_p_int_8_vz_read = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (grp_drift_fu_878_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_to_double_fu_1079_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (grp_gravity_fu_1048_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (grp_kick_fu_990_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((grp_drift_fu_878_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((grp_to_double_fu_1079_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign grp_drift_fu_878_ap_start = ap_reg_grp_drift_fu_878_ap_start;

assign grp_gravity_fu_1048_ap_start = ap_reg_grp_gravity_fu_1048_ap_start;

assign grp_kick_fu_990_ap_start = ap_reg_grp_kick_fu_990_ap_start;

assign grp_to_double_fu_1079_ap_start = ap_reg_grp_to_double_fu_1079_ap_start;

endmodule //janus_step
