// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module janus_step (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_int_0_x_read,
        p_int_1_x_read,
        p_int_2_x_read,
        p_int_3_x_read,
        p_int_4_x_read,
        p_int_5_x_read,
        p_int_6_x_read,
        p_int_7_x_read,
        p_int_8_x_read,
        p_int_0_y_read,
        p_int_1_y_read,
        p_int_2_y_read,
        p_int_3_y_read,
        p_int_4_y_read,
        p_int_5_y_read,
        p_int_6_y_read,
        p_int_7_y_read,
        p_int_8_y_read,
        p_int_0_z_read,
        p_int_1_z_read,
        p_int_2_z_read,
        p_int_3_z_read,
        p_int_4_z_read,
        p_int_5_z_read,
        p_int_6_z_read,
        p_int_7_z_read,
        p_int_8_z_read,
        p_int_0_vx_read,
        p_int_1_vx_read,
        p_int_2_vx_read,
        p_int_3_vx_read,
        p_int_4_vx_read,
        p_int_5_vx_read,
        p_int_6_vx_read,
        p_int_7_vx_read,
        p_int_8_vx_read,
        p_int_0_vy_read,
        p_int_1_vy_read,
        p_int_2_vy_read,
        p_int_3_vy_read,
        p_int_4_vy_read,
        p_int_5_vy_read,
        p_int_6_vy_read,
        p_int_7_vy_read,
        p_int_8_vy_read,
        p_int_0_vz_read,
        p_int_1_vz_read,
        p_int_2_vz_read,
        p_int_3_vz_read,
        p_int_4_vz_read,
        p_int_5_vz_read,
        p_int_6_vz_read,
        p_int_7_vz_read,
        p_int_8_vz_read,
        p_x_0_i,
        p_x_0_o,
        p_x_0_o_ap_vld,
        p_y_0_i,
        p_y_0_o,
        p_y_0_o_ap_vld,
        p_z_0_i,
        p_z_0_o,
        p_z_0_o_ap_vld,
        p_vx_0,
        p_vx_0_ap_vld,
        p_vy_0,
        p_vy_0_ap_vld,
        p_vz_0,
        p_vz_0_ap_vld,
        p_x_1_i,
        p_x_1_o,
        p_x_1_o_ap_vld,
        p_y_1_i,
        p_y_1_o,
        p_y_1_o_ap_vld,
        p_z_1_i,
        p_z_1_o,
        p_z_1_o_ap_vld,
        p_vx_1,
        p_vx_1_ap_vld,
        p_vy_1,
        p_vy_1_ap_vld,
        p_vz_1,
        p_vz_1_ap_vld,
        p_x_2_i,
        p_x_2_o,
        p_x_2_o_ap_vld,
        p_y_2_i,
        p_y_2_o,
        p_y_2_o_ap_vld,
        p_z_2_i,
        p_z_2_o,
        p_z_2_o_ap_vld,
        p_vx_2,
        p_vx_2_ap_vld,
        p_vy_2,
        p_vy_2_ap_vld,
        p_vz_2,
        p_vz_2_ap_vld,
        p_x_3_i,
        p_x_3_o,
        p_x_3_o_ap_vld,
        p_y_3_i,
        p_y_3_o,
        p_y_3_o_ap_vld,
        p_z_3_i,
        p_z_3_o,
        p_z_3_o_ap_vld,
        p_vx_3,
        p_vx_3_ap_vld,
        p_vy_3,
        p_vy_3_ap_vld,
        p_vz_3,
        p_vz_3_ap_vld,
        p_x_4_i,
        p_x_4_o,
        p_x_4_o_ap_vld,
        p_y_4_i,
        p_y_4_o,
        p_y_4_o_ap_vld,
        p_z_4_i,
        p_z_4_o,
        p_z_4_o_ap_vld,
        p_vx_4,
        p_vx_4_ap_vld,
        p_vy_4,
        p_vy_4_ap_vld,
        p_vz_4,
        p_vz_4_ap_vld,
        p_x_5_i,
        p_x_5_o,
        p_x_5_o_ap_vld,
        p_y_5_i,
        p_y_5_o,
        p_y_5_o_ap_vld,
        p_z_5_i,
        p_z_5_o,
        p_z_5_o_ap_vld,
        p_vx_5,
        p_vx_5_ap_vld,
        p_vy_5,
        p_vy_5_ap_vld,
        p_vz_5,
        p_vz_5_ap_vld,
        p_x_6_i,
        p_x_6_o,
        p_x_6_o_ap_vld,
        p_y_6_i,
        p_y_6_o,
        p_y_6_o_ap_vld,
        p_z_6_i,
        p_z_6_o,
        p_z_6_o_ap_vld,
        p_vx_6,
        p_vx_6_ap_vld,
        p_vy_6,
        p_vy_6_ap_vld,
        p_vz_6,
        p_vz_6_ap_vld,
        p_x_7_i,
        p_x_7_o,
        p_x_7_o_ap_vld,
        p_y_7_i,
        p_y_7_o,
        p_y_7_o_ap_vld,
        p_z_7_i,
        p_z_7_o,
        p_z_7_o_ap_vld,
        p_vx_7,
        p_vx_7_ap_vld,
        p_vy_7,
        p_vy_7_ap_vld,
        p_vz_7,
        p_vz_7_ap_vld,
        p_x_8_i,
        p_x_8_o,
        p_x_8_o_ap_vld,
        p_y_8_i,
        p_y_8_o,
        p_y_8_o_ap_vld,
        p_z_8_i,
        p_z_8_o,
        p_z_8_o_ap_vld,
        p_vx_8,
        p_vx_8_ap_vld,
        p_vy_8,
        p_vy_8_ap_vld,
        p_vz_8,
        p_vz_8_ap_vld,
        p_m_1,
        p_m_2,
        p_m_3,
        p_m_4,
        p_m_5,
        p_ax_0_i,
        p_ax_0_o,
        p_ax_0_o_ap_vld,
        p_ay_0_i,
        p_ay_0_o,
        p_ay_0_o_ap_vld,
        p_az_0_i,
        p_az_0_o,
        p_az_0_o_ap_vld,
        p_m_0,
        p_ax_1_i,
        p_ax_1_o,
        p_ax_1_o_ap_vld,
        p_ay_1_i,
        p_ay_1_o,
        p_ay_1_o_ap_vld,
        p_az_1_i,
        p_az_1_o,
        p_az_1_o_ap_vld,
        p_ax_2_i,
        p_ax_2_o,
        p_ax_2_o_ap_vld,
        p_ay_2_i,
        p_ay_2_o,
        p_ay_2_o_ap_vld,
        p_az_2_i,
        p_az_2_o,
        p_az_2_o_ap_vld,
        p_ax_3_i,
        p_ax_3_o,
        p_ax_3_o_ap_vld,
        p_ay_3_i,
        p_ay_3_o,
        p_ay_3_o_ap_vld,
        p_az_3_i,
        p_az_3_o,
        p_az_3_o_ap_vld,
        p_ax_4_i,
        p_ax_4_o,
        p_ax_4_o_ap_vld,
        p_ay_4_i,
        p_ay_4_o,
        p_ay_4_o_ap_vld,
        p_az_4_i,
        p_az_4_o,
        p_az_4_o_ap_vld,
        p_ax_5_i,
        p_ax_5_o,
        p_ax_5_o_ap_vld,
        p_ay_5_i,
        p_ay_5_o,
        p_ay_5_o_ap_vld,
        p_az_5_i,
        p_az_5_o,
        p_az_5_o_ap_vld,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15,
        ap_return_16,
        ap_return_17,
        ap_return_18,
        ap_return_19,
        ap_return_20,
        ap_return_21,
        ap_return_22,
        ap_return_23,
        ap_return_24,
        ap_return_25,
        ap_return_26,
        ap_return_27,
        ap_return_28,
        ap_return_29,
        ap_return_30,
        ap_return_31,
        ap_return_32,
        ap_return_33,
        ap_return_34,
        ap_return_35,
        ap_return_36,
        ap_return_37,
        ap_return_38,
        ap_return_39,
        ap_return_40,
        ap_return_41,
        ap_return_42,
        ap_return_43,
        ap_return_44,
        ap_return_45,
        ap_return_46,
        ap_return_47,
        ap_return_48,
        ap_return_49,
        ap_return_50,
        ap_return_51,
        ap_return_52,
        ap_return_53
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_state3 = 9'd4;
parameter    ap_ST_fsm_state4 = 9'd8;
parameter    ap_ST_fsm_state5 = 9'd16;
parameter    ap_ST_fsm_state6 = 9'd32;
parameter    ap_ST_fsm_state7 = 9'd64;
parameter    ap_ST_fsm_state8 = 9'd128;
parameter    ap_ST_fsm_state9 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] p_int_0_x_read;
input  [63:0] p_int_1_x_read;
input  [63:0] p_int_2_x_read;
input  [63:0] p_int_3_x_read;
input  [63:0] p_int_4_x_read;
input  [63:0] p_int_5_x_read;
input  [63:0] p_int_6_x_read;
input  [63:0] p_int_7_x_read;
input  [63:0] p_int_8_x_read;
input  [63:0] p_int_0_y_read;
input  [63:0] p_int_1_y_read;
input  [63:0] p_int_2_y_read;
input  [63:0] p_int_3_y_read;
input  [63:0] p_int_4_y_read;
input  [63:0] p_int_5_y_read;
input  [63:0] p_int_6_y_read;
input  [63:0] p_int_7_y_read;
input  [63:0] p_int_8_y_read;
input  [63:0] p_int_0_z_read;
input  [63:0] p_int_1_z_read;
input  [63:0] p_int_2_z_read;
input  [63:0] p_int_3_z_read;
input  [63:0] p_int_4_z_read;
input  [63:0] p_int_5_z_read;
input  [63:0] p_int_6_z_read;
input  [63:0] p_int_7_z_read;
input  [63:0] p_int_8_z_read;
input  [63:0] p_int_0_vx_read;
input  [63:0] p_int_1_vx_read;
input  [63:0] p_int_2_vx_read;
input  [63:0] p_int_3_vx_read;
input  [63:0] p_int_4_vx_read;
input  [63:0] p_int_5_vx_read;
input  [63:0] p_int_6_vx_read;
input  [63:0] p_int_7_vx_read;
input  [63:0] p_int_8_vx_read;
input  [63:0] p_int_0_vy_read;
input  [63:0] p_int_1_vy_read;
input  [63:0] p_int_2_vy_read;
input  [63:0] p_int_3_vy_read;
input  [63:0] p_int_4_vy_read;
input  [63:0] p_int_5_vy_read;
input  [63:0] p_int_6_vy_read;
input  [63:0] p_int_7_vy_read;
input  [63:0] p_int_8_vy_read;
input  [63:0] p_int_0_vz_read;
input  [63:0] p_int_1_vz_read;
input  [63:0] p_int_2_vz_read;
input  [63:0] p_int_3_vz_read;
input  [63:0] p_int_4_vz_read;
input  [63:0] p_int_5_vz_read;
input  [63:0] p_int_6_vz_read;
input  [63:0] p_int_7_vz_read;
input  [63:0] p_int_8_vz_read;
input  [63:0] p_x_0_i;
output  [63:0] p_x_0_o;
output   p_x_0_o_ap_vld;
input  [63:0] p_y_0_i;
output  [63:0] p_y_0_o;
output   p_y_0_o_ap_vld;
input  [63:0] p_z_0_i;
output  [63:0] p_z_0_o;
output   p_z_0_o_ap_vld;
output  [63:0] p_vx_0;
output   p_vx_0_ap_vld;
output  [63:0] p_vy_0;
output   p_vy_0_ap_vld;
output  [63:0] p_vz_0;
output   p_vz_0_ap_vld;
input  [63:0] p_x_1_i;
output  [63:0] p_x_1_o;
output   p_x_1_o_ap_vld;
input  [63:0] p_y_1_i;
output  [63:0] p_y_1_o;
output   p_y_1_o_ap_vld;
input  [63:0] p_z_1_i;
output  [63:0] p_z_1_o;
output   p_z_1_o_ap_vld;
output  [63:0] p_vx_1;
output   p_vx_1_ap_vld;
output  [63:0] p_vy_1;
output   p_vy_1_ap_vld;
output  [63:0] p_vz_1;
output   p_vz_1_ap_vld;
input  [63:0] p_x_2_i;
output  [63:0] p_x_2_o;
output   p_x_2_o_ap_vld;
input  [63:0] p_y_2_i;
output  [63:0] p_y_2_o;
output   p_y_2_o_ap_vld;
input  [63:0] p_z_2_i;
output  [63:0] p_z_2_o;
output   p_z_2_o_ap_vld;
output  [63:0] p_vx_2;
output   p_vx_2_ap_vld;
output  [63:0] p_vy_2;
output   p_vy_2_ap_vld;
output  [63:0] p_vz_2;
output   p_vz_2_ap_vld;
input  [63:0] p_x_3_i;
output  [63:0] p_x_3_o;
output   p_x_3_o_ap_vld;
input  [63:0] p_y_3_i;
output  [63:0] p_y_3_o;
output   p_y_3_o_ap_vld;
input  [63:0] p_z_3_i;
output  [63:0] p_z_3_o;
output   p_z_3_o_ap_vld;
output  [63:0] p_vx_3;
output   p_vx_3_ap_vld;
output  [63:0] p_vy_3;
output   p_vy_3_ap_vld;
output  [63:0] p_vz_3;
output   p_vz_3_ap_vld;
input  [63:0] p_x_4_i;
output  [63:0] p_x_4_o;
output   p_x_4_o_ap_vld;
input  [63:0] p_y_4_i;
output  [63:0] p_y_4_o;
output   p_y_4_o_ap_vld;
input  [63:0] p_z_4_i;
output  [63:0] p_z_4_o;
output   p_z_4_o_ap_vld;
output  [63:0] p_vx_4;
output   p_vx_4_ap_vld;
output  [63:0] p_vy_4;
output   p_vy_4_ap_vld;
output  [63:0] p_vz_4;
output   p_vz_4_ap_vld;
input  [63:0] p_x_5_i;
output  [63:0] p_x_5_o;
output   p_x_5_o_ap_vld;
input  [63:0] p_y_5_i;
output  [63:0] p_y_5_o;
output   p_y_5_o_ap_vld;
input  [63:0] p_z_5_i;
output  [63:0] p_z_5_o;
output   p_z_5_o_ap_vld;
output  [63:0] p_vx_5;
output   p_vx_5_ap_vld;
output  [63:0] p_vy_5;
output   p_vy_5_ap_vld;
output  [63:0] p_vz_5;
output   p_vz_5_ap_vld;
input  [63:0] p_x_6_i;
output  [63:0] p_x_6_o;
output   p_x_6_o_ap_vld;
input  [63:0] p_y_6_i;
output  [63:0] p_y_6_o;
output   p_y_6_o_ap_vld;
input  [63:0] p_z_6_i;
output  [63:0] p_z_6_o;
output   p_z_6_o_ap_vld;
output  [63:0] p_vx_6;
output   p_vx_6_ap_vld;
output  [63:0] p_vy_6;
output   p_vy_6_ap_vld;
output  [63:0] p_vz_6;
output   p_vz_6_ap_vld;
input  [63:0] p_x_7_i;
output  [63:0] p_x_7_o;
output   p_x_7_o_ap_vld;
input  [63:0] p_y_7_i;
output  [63:0] p_y_7_o;
output   p_y_7_o_ap_vld;
input  [63:0] p_z_7_i;
output  [63:0] p_z_7_o;
output   p_z_7_o_ap_vld;
output  [63:0] p_vx_7;
output   p_vx_7_ap_vld;
output  [63:0] p_vy_7;
output   p_vy_7_ap_vld;
output  [63:0] p_vz_7;
output   p_vz_7_ap_vld;
input  [63:0] p_x_8_i;
output  [63:0] p_x_8_o;
output   p_x_8_o_ap_vld;
input  [63:0] p_y_8_i;
output  [63:0] p_y_8_o;
output   p_y_8_o_ap_vld;
input  [63:0] p_z_8_i;
output  [63:0] p_z_8_o;
output   p_z_8_o_ap_vld;
output  [63:0] p_vx_8;
output   p_vx_8_ap_vld;
output  [63:0] p_vy_8;
output   p_vy_8_ap_vld;
output  [63:0] p_vz_8;
output   p_vz_8_ap_vld;
input  [63:0] p_m_1;
input  [63:0] p_m_2;
input  [63:0] p_m_3;
input  [63:0] p_m_4;
input  [63:0] p_m_5;
input  [63:0] p_ax_0_i;
output  [63:0] p_ax_0_o;
output   p_ax_0_o_ap_vld;
input  [63:0] p_ay_0_i;
output  [63:0] p_ay_0_o;
output   p_ay_0_o_ap_vld;
input  [63:0] p_az_0_i;
output  [63:0] p_az_0_o;
output   p_az_0_o_ap_vld;
input  [63:0] p_m_0;
input  [63:0] p_ax_1_i;
output  [63:0] p_ax_1_o;
output   p_ax_1_o_ap_vld;
input  [63:0] p_ay_1_i;
output  [63:0] p_ay_1_o;
output   p_ay_1_o_ap_vld;
input  [63:0] p_az_1_i;
output  [63:0] p_az_1_o;
output   p_az_1_o_ap_vld;
input  [63:0] p_ax_2_i;
output  [63:0] p_ax_2_o;
output   p_ax_2_o_ap_vld;
input  [63:0] p_ay_2_i;
output  [63:0] p_ay_2_o;
output   p_ay_2_o_ap_vld;
input  [63:0] p_az_2_i;
output  [63:0] p_az_2_o;
output   p_az_2_o_ap_vld;
input  [63:0] p_ax_3_i;
output  [63:0] p_ax_3_o;
output   p_ax_3_o_ap_vld;
input  [63:0] p_ay_3_i;
output  [63:0] p_ay_3_o;
output   p_ay_3_o_ap_vld;
input  [63:0] p_az_3_i;
output  [63:0] p_az_3_o;
output   p_az_3_o_ap_vld;
input  [63:0] p_ax_4_i;
output  [63:0] p_ax_4_o;
output   p_ax_4_o_ap_vld;
input  [63:0] p_ay_4_i;
output  [63:0] p_ay_4_o;
output   p_ay_4_o_ap_vld;
input  [63:0] p_az_4_i;
output  [63:0] p_az_4_o;
output   p_az_4_o_ap_vld;
input  [63:0] p_ax_5_i;
output  [63:0] p_ax_5_o;
output   p_ax_5_o_ap_vld;
input  [63:0] p_ay_5_i;
output  [63:0] p_ay_5_o;
output   p_ay_5_o_ap_vld;
input  [63:0] p_az_5_i;
output  [63:0] p_az_5_o;
output   p_az_5_o_ap_vld;
output  [63:0] ap_return_0;
output  [63:0] ap_return_1;
output  [63:0] ap_return_2;
output  [63:0] ap_return_3;
output  [63:0] ap_return_4;
output  [63:0] ap_return_5;
output  [63:0] ap_return_6;
output  [63:0] ap_return_7;
output  [63:0] ap_return_8;
output  [63:0] ap_return_9;
output  [63:0] ap_return_10;
output  [63:0] ap_return_11;
output  [63:0] ap_return_12;
output  [63:0] ap_return_13;
output  [63:0] ap_return_14;
output  [63:0] ap_return_15;
output  [63:0] ap_return_16;
output  [63:0] ap_return_17;
output  [63:0] ap_return_18;
output  [63:0] ap_return_19;
output  [63:0] ap_return_20;
output  [63:0] ap_return_21;
output  [63:0] ap_return_22;
output  [63:0] ap_return_23;
output  [63:0] ap_return_24;
output  [63:0] ap_return_25;
output  [63:0] ap_return_26;
output  [63:0] ap_return_27;
output  [63:0] ap_return_28;
output  [63:0] ap_return_29;
output  [63:0] ap_return_30;
output  [63:0] ap_return_31;
output  [63:0] ap_return_32;
output  [63:0] ap_return_33;
output  [63:0] ap_return_34;
output  [63:0] ap_return_35;
output  [63:0] ap_return_36;
output  [63:0] ap_return_37;
output  [63:0] ap_return_38;
output  [63:0] ap_return_39;
output  [63:0] ap_return_40;
output  [63:0] ap_return_41;
output  [63:0] ap_return_42;
output  [63:0] ap_return_43;
output  [63:0] ap_return_44;
output  [63:0] ap_return_45;
output  [63:0] ap_return_46;
output  [63:0] ap_return_47;
output  [63:0] ap_return_48;
output  [63:0] ap_return_49;
output  [63:0] ap_return_50;
output  [63:0] ap_return_51;
output  [63:0] ap_return_52;
output  [63:0] ap_return_53;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[63:0] p_x_0_o;
reg p_x_0_o_ap_vld;
reg[63:0] p_y_0_o;
reg p_y_0_o_ap_vld;
reg[63:0] p_z_0_o;
reg p_z_0_o_ap_vld;
reg p_vx_0_ap_vld;
reg p_vy_0_ap_vld;
reg p_vz_0_ap_vld;
reg[63:0] p_x_1_o;
reg p_x_1_o_ap_vld;
reg[63:0] p_y_1_o;
reg p_y_1_o_ap_vld;
reg[63:0] p_z_1_o;
reg p_z_1_o_ap_vld;
reg p_vx_1_ap_vld;
reg p_vy_1_ap_vld;
reg p_vz_1_ap_vld;
reg[63:0] p_x_2_o;
reg p_x_2_o_ap_vld;
reg[63:0] p_y_2_o;
reg p_y_2_o_ap_vld;
reg[63:0] p_z_2_o;
reg p_z_2_o_ap_vld;
reg p_vx_2_ap_vld;
reg p_vy_2_ap_vld;
reg p_vz_2_ap_vld;
reg[63:0] p_x_3_o;
reg p_x_3_o_ap_vld;
reg[63:0] p_y_3_o;
reg p_y_3_o_ap_vld;
reg[63:0] p_z_3_o;
reg p_z_3_o_ap_vld;
reg p_vx_3_ap_vld;
reg p_vy_3_ap_vld;
reg p_vz_3_ap_vld;
reg[63:0] p_x_4_o;
reg p_x_4_o_ap_vld;
reg[63:0] p_y_4_o;
reg p_y_4_o_ap_vld;
reg[63:0] p_z_4_o;
reg p_z_4_o_ap_vld;
reg p_vx_4_ap_vld;
reg p_vy_4_ap_vld;
reg p_vz_4_ap_vld;
reg[63:0] p_x_5_o;
reg p_x_5_o_ap_vld;
reg[63:0] p_y_5_o;
reg p_y_5_o_ap_vld;
reg[63:0] p_z_5_o;
reg p_z_5_o_ap_vld;
reg p_vx_5_ap_vld;
reg p_vy_5_ap_vld;
reg p_vz_5_ap_vld;
reg[63:0] p_x_6_o;
reg p_x_6_o_ap_vld;
reg[63:0] p_y_6_o;
reg p_y_6_o_ap_vld;
reg[63:0] p_z_6_o;
reg p_z_6_o_ap_vld;
reg p_vx_6_ap_vld;
reg p_vy_6_ap_vld;
reg p_vz_6_ap_vld;
reg[63:0] p_x_7_o;
reg p_x_7_o_ap_vld;
reg[63:0] p_y_7_o;
reg p_y_7_o_ap_vld;
reg[63:0] p_z_7_o;
reg p_z_7_o_ap_vld;
reg p_vx_7_ap_vld;
reg p_vy_7_ap_vld;
reg p_vz_7_ap_vld;
reg[63:0] p_x_8_o;
reg p_x_8_o_ap_vld;
reg[63:0] p_y_8_o;
reg p_y_8_o_ap_vld;
reg[63:0] p_z_8_o;
reg p_z_8_o_ap_vld;
reg p_vx_8_ap_vld;
reg p_vy_8_ap_vld;
reg p_vz_8_ap_vld;
reg[63:0] p_ax_0_o;
reg p_ax_0_o_ap_vld;
reg[63:0] p_ay_0_o;
reg p_ay_0_o_ap_vld;
reg[63:0] p_az_0_o;
reg p_az_0_o_ap_vld;
reg[63:0] p_ax_1_o;
reg p_ax_1_o_ap_vld;
reg[63:0] p_ay_1_o;
reg p_ay_1_o_ap_vld;
reg[63:0] p_az_1_o;
reg p_az_1_o_ap_vld;
reg[63:0] p_ax_2_o;
reg p_ax_2_o_ap_vld;
reg[63:0] p_ay_2_o;
reg p_ay_2_o_ap_vld;
reg[63:0] p_az_2_o;
reg p_az_2_o_ap_vld;
reg[63:0] p_ax_3_o;
reg p_ax_3_o_ap_vld;
reg[63:0] p_ay_3_o;
reg p_ay_3_o_ap_vld;
reg[63:0] p_az_3_o;
reg p_az_3_o_ap_vld;
reg[63:0] p_ax_4_o;
reg p_ax_4_o_ap_vld;
reg[63:0] p_ay_4_o;
reg p_ay_4_o_ap_vld;
reg[63:0] p_az_4_o;
reg p_az_4_o_ap_vld;
reg[63:0] p_ax_5_o;
reg p_ax_5_o_ap_vld;
reg[63:0] p_ay_5_o;
reg p_ay_5_o_ap_vld;
reg[63:0] p_az_5_o;
reg p_az_5_o_ap_vld;

(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [63:0] p_ax_6;
reg   [63:0] p_ay_6;
reg   [63:0] p_az_6;
reg   [63:0] p_ax_7;
reg   [63:0] p_ay_7;
reg   [63:0] p_az_7;
reg   [63:0] p_ax_8;
reg   [63:0] p_ay_8;
reg   [63:0] p_az_8;
reg   [63:0] reg_1252;
wire    ap_CS_fsm_state2;
wire    grp_drift_fu_754_ap_done;
wire    ap_CS_fsm_state8;
reg   [63:0] reg_1258;
reg   [63:0] reg_1264;
reg   [63:0] reg_1270;
reg   [63:0] reg_1276;
reg   [63:0] reg_1282;
reg   [63:0] reg_1288;
reg   [63:0] reg_1294;
reg   [63:0] reg_1300;
reg   [63:0] reg_1306;
reg   [63:0] reg_1312;
reg   [63:0] reg_1318;
reg   [63:0] reg_1324;
reg   [63:0] reg_1330;
reg   [63:0] reg_1336;
reg   [63:0] reg_1342;
reg   [63:0] reg_1348;
reg   [63:0] reg_1354;
reg   [63:0] reg_1360;
reg   [63:0] reg_1366;
reg   [63:0] reg_1372;
reg   [63:0] reg_1378;
reg   [63:0] reg_1384;
reg   [63:0] reg_1390;
reg   [63:0] reg_1396;
reg   [63:0] reg_1402;
reg   [63:0] reg_1408;
reg   [63:0] p_int_vx_assign_4_reg_2170;
wire    ap_CS_fsm_state7;
wire    grp_kick_fu_866_ap_done;
reg   [63:0] p_int_vx25_assign_4_reg_2177;
reg   [63:0] p_int_vx26_assign_4_reg_2184;
reg   [63:0] p_int_vx27_assign_4_reg_2191;
reg   [63:0] p_int_vx28_assign_4_reg_2198;
reg   [63:0] p_int_vx29_assign_4_reg_2205;
reg   [63:0] p_int_vx30_assign_4_reg_2212;
reg   [63:0] p_int_vx3138_assign_4_reg_2219;
reg   [63:0] p_int_vx32_assign_4_reg_2226;
reg   [63:0] p_int_vy_assign_4_reg_2233;
reg   [63:0] p_int_vy33_assign_4_reg_2240;
reg   [63:0] p_int_vy34_assign_4_reg_2247;
reg   [63:0] p_int_vy35_assign_4_reg_2254;
reg   [63:0] p_int_vy36_assign_4_reg_2261;
reg   [63:0] p_int_vy37_assign_4_reg_2268;
reg   [63:0] p_int_vy38_assign_4_reg_2275;
reg   [63:0] p_int_vy39_assign_4_reg_2282;
reg   [63:0] p_int_vy40_assign_4_reg_2289;
reg   [63:0] p_int_vz_assign_4_reg_2296;
reg   [63:0] p_int_vz41_assign_4_reg_2303;
reg   [63:0] p_int_vz42_assign_4_reg_2310;
reg   [63:0] p_int_vz43_assign_4_reg_2317;
reg   [63:0] p_int_vz44_assign_4_reg_2324;
reg   [63:0] p_int_vz45_assign_4_reg_2331;
reg   [63:0] p_int_vz46_assign_4_reg_2338;
reg   [63:0] p_int_vz47_assign_4_reg_2345;
reg   [63:0] p_int_vz48_assign_4_reg_2352;
wire    grp_gravity_fu_624_ap_start;
wire    grp_gravity_fu_624_ap_done;
wire    grp_gravity_fu_624_ap_idle;
wire    grp_gravity_fu_624_ap_ready;
wire   [63:0] grp_gravity_fu_624_p_ax_0;
wire    grp_gravity_fu_624_p_ax_0_ap_vld;
wire   [63:0] grp_gravity_fu_624_p_ay_0;
wire    grp_gravity_fu_624_p_ay_0_ap_vld;
wire   [63:0] grp_gravity_fu_624_p_az_0;
wire    grp_gravity_fu_624_p_az_0_ap_vld;
wire   [63:0] grp_gravity_fu_624_p_ax_1;
wire    grp_gravity_fu_624_p_ax_1_ap_vld;
wire   [63:0] grp_gravity_fu_624_p_ay_1;
wire    grp_gravity_fu_624_p_ay_1_ap_vld;
wire   [63:0] grp_gravity_fu_624_p_az_1;
wire    grp_gravity_fu_624_p_az_1_ap_vld;
wire   [63:0] grp_gravity_fu_624_p_ax_2;
wire    grp_gravity_fu_624_p_ax_2_ap_vld;
wire   [63:0] grp_gravity_fu_624_p_ay_2;
wire    grp_gravity_fu_624_p_ay_2_ap_vld;
wire   [63:0] grp_gravity_fu_624_p_az_2;
wire    grp_gravity_fu_624_p_az_2_ap_vld;
wire   [63:0] grp_gravity_fu_624_p_ax_3;
wire    grp_gravity_fu_624_p_ax_3_ap_vld;
wire   [63:0] grp_gravity_fu_624_p_ay_3;
wire    grp_gravity_fu_624_p_ay_3_ap_vld;
wire   [63:0] grp_gravity_fu_624_p_az_3;
wire    grp_gravity_fu_624_p_az_3_ap_vld;
wire   [63:0] grp_gravity_fu_624_p_ax_4;
wire    grp_gravity_fu_624_p_ax_4_ap_vld;
wire   [63:0] grp_gravity_fu_624_p_ay_4;
wire    grp_gravity_fu_624_p_ay_4_ap_vld;
wire   [63:0] grp_gravity_fu_624_p_az_4;
wire    grp_gravity_fu_624_p_az_4_ap_vld;
wire   [63:0] grp_gravity_fu_624_p_ax_5;
wire    grp_gravity_fu_624_p_ax_5_ap_vld;
wire   [63:0] grp_gravity_fu_624_p_ay_5;
wire    grp_gravity_fu_624_p_ay_5_ap_vld;
wire   [63:0] grp_gravity_fu_624_p_az_5;
wire    grp_gravity_fu_624_p_az_5_ap_vld;
wire   [63:0] grp_gravity_fu_624_p_ax_6;
wire    grp_gravity_fu_624_p_ax_6_ap_vld;
wire   [63:0] grp_gravity_fu_624_p_ay_6;
wire    grp_gravity_fu_624_p_ay_6_ap_vld;
wire   [63:0] grp_gravity_fu_624_p_az_6;
wire    grp_gravity_fu_624_p_az_6_ap_vld;
wire   [63:0] grp_gravity_fu_624_p_ax_7;
wire    grp_gravity_fu_624_p_ax_7_ap_vld;
wire   [63:0] grp_gravity_fu_624_p_ay_7;
wire    grp_gravity_fu_624_p_ay_7_ap_vld;
wire   [63:0] grp_gravity_fu_624_p_az_7;
wire    grp_gravity_fu_624_p_az_7_ap_vld;
wire   [63:0] grp_gravity_fu_624_p_ax_8;
wire    grp_gravity_fu_624_p_ax_8_ap_vld;
wire   [63:0] grp_gravity_fu_624_p_ay_8;
wire    grp_gravity_fu_624_p_ay_8_ap_vld;
wire   [63:0] grp_gravity_fu_624_p_az_8;
wire    grp_gravity_fu_624_p_az_8_ap_vld;
wire    grp_drift_fu_754_ap_start;
wire    grp_drift_fu_754_ap_idle;
wire    grp_drift_fu_754_ap_ready;
reg   [63:0] grp_drift_fu_754_p_int_0_x_read;
reg   [63:0] grp_drift_fu_754_p_int_1_x_read;
reg   [63:0] grp_drift_fu_754_p_int_2_x_read;
reg   [63:0] grp_drift_fu_754_p_int_3_x_read;
reg   [63:0] grp_drift_fu_754_p_int_4_x_read;
reg   [63:0] grp_drift_fu_754_p_int_5_x_read;
reg   [63:0] grp_drift_fu_754_p_int_6_x_read;
reg   [63:0] grp_drift_fu_754_p_int_7_x_read;
reg   [63:0] grp_drift_fu_754_p_int_8_x_read;
reg   [63:0] grp_drift_fu_754_p_int_0_y_read;
reg   [63:0] grp_drift_fu_754_p_int_1_y_read;
reg   [63:0] grp_drift_fu_754_p_int_2_y_read;
reg   [63:0] grp_drift_fu_754_p_int_3_y_read;
reg   [63:0] grp_drift_fu_754_p_int_4_y_read;
reg   [63:0] grp_drift_fu_754_p_int_5_y_read;
reg   [63:0] grp_drift_fu_754_p_int_6_y_read;
reg   [63:0] grp_drift_fu_754_p_int_7_y_read;
reg   [63:0] grp_drift_fu_754_p_int_8_y_read;
reg   [63:0] grp_drift_fu_754_p_int_0_z_read;
reg   [63:0] grp_drift_fu_754_p_int_1_z_read;
reg   [63:0] grp_drift_fu_754_p_int_2_z_read;
reg   [63:0] grp_drift_fu_754_p_int_3_z_read;
reg   [63:0] grp_drift_fu_754_p_int_4_z_read;
reg   [63:0] grp_drift_fu_754_p_int_5_z_read;
reg   [63:0] grp_drift_fu_754_p_int_6_z_read;
reg   [63:0] grp_drift_fu_754_p_int_7_z_read;
reg   [63:0] grp_drift_fu_754_p_int_8_z_read;
reg   [63:0] grp_drift_fu_754_p_int_0_vx_read;
reg   [63:0] grp_drift_fu_754_p_int_1_vx_read;
reg   [63:0] grp_drift_fu_754_p_int_2_vx_read;
reg   [63:0] grp_drift_fu_754_p_int_3_vx_read;
reg   [63:0] grp_drift_fu_754_p_int_4_vx_read;
reg   [63:0] grp_drift_fu_754_p_int_5_vx_read;
reg   [63:0] grp_drift_fu_754_p_int_6_vx_read;
reg   [63:0] grp_drift_fu_754_p_int_7_vx_read;
reg   [63:0] grp_drift_fu_754_p_int_8_vx_read;
reg   [63:0] grp_drift_fu_754_p_int_0_vy_read;
reg   [63:0] grp_drift_fu_754_p_int_1_vy_read;
reg   [63:0] grp_drift_fu_754_p_int_2_vy_read;
reg   [63:0] grp_drift_fu_754_p_int_3_vy_read;
reg   [63:0] grp_drift_fu_754_p_int_4_vy_read;
reg   [63:0] grp_drift_fu_754_p_int_5_vy_read;
reg   [63:0] grp_drift_fu_754_p_int_6_vy_read;
reg   [63:0] grp_drift_fu_754_p_int_7_vy_read;
reg   [63:0] grp_drift_fu_754_p_int_8_vy_read;
reg   [63:0] grp_drift_fu_754_p_int_0_vz_read;
reg   [63:0] grp_drift_fu_754_p_int_1_vz_read;
reg   [63:0] grp_drift_fu_754_p_int_2_vz_read;
reg   [63:0] grp_drift_fu_754_p_int_3_vz_read;
reg   [63:0] grp_drift_fu_754_p_int_4_vz_read;
reg   [63:0] grp_drift_fu_754_p_int_5_vz_read;
reg   [63:0] grp_drift_fu_754_p_int_6_vz_read;
reg   [63:0] grp_drift_fu_754_p_int_7_vz_read;
reg   [63:0] grp_drift_fu_754_p_int_8_vz_read;
wire   [63:0] grp_drift_fu_754_ap_return_0;
wire   [63:0] grp_drift_fu_754_ap_return_1;
wire   [63:0] grp_drift_fu_754_ap_return_2;
wire   [63:0] grp_drift_fu_754_ap_return_3;
wire   [63:0] grp_drift_fu_754_ap_return_4;
wire   [63:0] grp_drift_fu_754_ap_return_5;
wire   [63:0] grp_drift_fu_754_ap_return_6;
wire   [63:0] grp_drift_fu_754_ap_return_7;
wire   [63:0] grp_drift_fu_754_ap_return_8;
wire   [63:0] grp_drift_fu_754_ap_return_9;
wire   [63:0] grp_drift_fu_754_ap_return_10;
wire   [63:0] grp_drift_fu_754_ap_return_11;
wire   [63:0] grp_drift_fu_754_ap_return_12;
wire   [63:0] grp_drift_fu_754_ap_return_13;
wire   [63:0] grp_drift_fu_754_ap_return_14;
wire   [63:0] grp_drift_fu_754_ap_return_15;
wire   [63:0] grp_drift_fu_754_ap_return_16;
wire   [63:0] grp_drift_fu_754_ap_return_17;
wire   [63:0] grp_drift_fu_754_ap_return_18;
wire   [63:0] grp_drift_fu_754_ap_return_19;
wire   [63:0] grp_drift_fu_754_ap_return_20;
wire   [63:0] grp_drift_fu_754_ap_return_21;
wire   [63:0] grp_drift_fu_754_ap_return_22;
wire   [63:0] grp_drift_fu_754_ap_return_23;
wire   [63:0] grp_drift_fu_754_ap_return_24;
wire   [63:0] grp_drift_fu_754_ap_return_25;
wire   [63:0] grp_drift_fu_754_ap_return_26;
wire    grp_kick_fu_866_ap_start;
wire    grp_kick_fu_866_ap_idle;
wire    grp_kick_fu_866_ap_ready;
wire   [63:0] grp_kick_fu_866_ap_return_0;
wire   [63:0] grp_kick_fu_866_ap_return_1;
wire   [63:0] grp_kick_fu_866_ap_return_2;
wire   [63:0] grp_kick_fu_866_ap_return_3;
wire   [63:0] grp_kick_fu_866_ap_return_4;
wire   [63:0] grp_kick_fu_866_ap_return_5;
wire   [63:0] grp_kick_fu_866_ap_return_6;
wire   [63:0] grp_kick_fu_866_ap_return_7;
wire   [63:0] grp_kick_fu_866_ap_return_8;
wire   [63:0] grp_kick_fu_866_ap_return_9;
wire   [63:0] grp_kick_fu_866_ap_return_10;
wire   [63:0] grp_kick_fu_866_ap_return_11;
wire   [63:0] grp_kick_fu_866_ap_return_12;
wire   [63:0] grp_kick_fu_866_ap_return_13;
wire   [63:0] grp_kick_fu_866_ap_return_14;
wire   [63:0] grp_kick_fu_866_ap_return_15;
wire   [63:0] grp_kick_fu_866_ap_return_16;
wire   [63:0] grp_kick_fu_866_ap_return_17;
wire   [63:0] grp_kick_fu_866_ap_return_18;
wire   [63:0] grp_kick_fu_866_ap_return_19;
wire   [63:0] grp_kick_fu_866_ap_return_20;
wire   [63:0] grp_kick_fu_866_ap_return_21;
wire   [63:0] grp_kick_fu_866_ap_return_22;
wire   [63:0] grp_kick_fu_866_ap_return_23;
wire   [63:0] grp_kick_fu_866_ap_return_24;
wire   [63:0] grp_kick_fu_866_ap_return_25;
wire   [63:0] grp_kick_fu_866_ap_return_26;
wire    grp_to_double_fu_951_ap_start;
wire    grp_to_double_fu_951_ap_done;
wire    grp_to_double_fu_951_ap_idle;
wire    grp_to_double_fu_951_ap_ready;
reg   [63:0] grp_to_double_fu_951_p_int_0_vx_read;
reg   [63:0] grp_to_double_fu_951_p_int_1_vx_read;
reg   [63:0] grp_to_double_fu_951_p_int_2_vx_read;
reg   [63:0] grp_to_double_fu_951_p_int_3_vx_read;
reg   [63:0] grp_to_double_fu_951_p_int_4_vx_read;
reg   [63:0] grp_to_double_fu_951_p_int_5_vx_read;
reg   [63:0] grp_to_double_fu_951_p_int_6_vx_read;
reg   [63:0] grp_to_double_fu_951_p_int_7_vx_read;
reg   [63:0] grp_to_double_fu_951_p_int_8_vx_read;
reg   [63:0] grp_to_double_fu_951_p_int_0_vy_read;
reg   [63:0] grp_to_double_fu_951_p_int_1_vy_read;
reg   [63:0] grp_to_double_fu_951_p_int_2_vy_read;
reg   [63:0] grp_to_double_fu_951_p_int_3_vy_read;
reg   [63:0] grp_to_double_fu_951_p_int_4_vy_read;
reg   [63:0] grp_to_double_fu_951_p_int_5_vy_read;
reg   [63:0] grp_to_double_fu_951_p_int_6_vy_read;
reg   [63:0] grp_to_double_fu_951_p_int_7_vy_read;
reg   [63:0] grp_to_double_fu_951_p_int_8_vy_read;
reg   [63:0] grp_to_double_fu_951_p_int_0_vz_read;
reg   [63:0] grp_to_double_fu_951_p_int_1_vz_read;
reg   [63:0] grp_to_double_fu_951_p_int_2_vz_read;
reg   [63:0] grp_to_double_fu_951_p_int_3_vz_read;
reg   [63:0] grp_to_double_fu_951_p_int_4_vz_read;
reg   [63:0] grp_to_double_fu_951_p_int_5_vz_read;
reg   [63:0] grp_to_double_fu_951_p_int_6_vz_read;
reg   [63:0] grp_to_double_fu_951_p_int_7_vz_read;
reg   [63:0] grp_to_double_fu_951_p_int_8_vz_read;
wire   [63:0] grp_to_double_fu_951_p_x_0;
wire    grp_to_double_fu_951_p_x_0_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_y_0;
wire    grp_to_double_fu_951_p_y_0_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_z_0;
wire    grp_to_double_fu_951_p_z_0_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_vx_0;
wire    grp_to_double_fu_951_p_vx_0_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_vy_0;
wire    grp_to_double_fu_951_p_vy_0_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_vz_0;
wire    grp_to_double_fu_951_p_vz_0_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_x_1;
wire    grp_to_double_fu_951_p_x_1_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_y_1;
wire    grp_to_double_fu_951_p_y_1_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_z_1;
wire    grp_to_double_fu_951_p_z_1_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_vx_1;
wire    grp_to_double_fu_951_p_vx_1_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_vy_1;
wire    grp_to_double_fu_951_p_vy_1_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_vz_1;
wire    grp_to_double_fu_951_p_vz_1_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_x_2;
wire    grp_to_double_fu_951_p_x_2_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_y_2;
wire    grp_to_double_fu_951_p_y_2_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_z_2;
wire    grp_to_double_fu_951_p_z_2_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_vx_2;
wire    grp_to_double_fu_951_p_vx_2_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_vy_2;
wire    grp_to_double_fu_951_p_vy_2_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_vz_2;
wire    grp_to_double_fu_951_p_vz_2_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_x_3;
wire    grp_to_double_fu_951_p_x_3_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_y_3;
wire    grp_to_double_fu_951_p_y_3_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_z_3;
wire    grp_to_double_fu_951_p_z_3_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_vx_3;
wire    grp_to_double_fu_951_p_vx_3_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_vy_3;
wire    grp_to_double_fu_951_p_vy_3_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_vz_3;
wire    grp_to_double_fu_951_p_vz_3_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_x_4;
wire    grp_to_double_fu_951_p_x_4_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_y_4;
wire    grp_to_double_fu_951_p_y_4_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_z_4;
wire    grp_to_double_fu_951_p_z_4_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_vx_4;
wire    grp_to_double_fu_951_p_vx_4_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_vy_4;
wire    grp_to_double_fu_951_p_vy_4_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_vz_4;
wire    grp_to_double_fu_951_p_vz_4_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_x_5;
wire    grp_to_double_fu_951_p_x_5_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_y_5;
wire    grp_to_double_fu_951_p_y_5_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_z_5;
wire    grp_to_double_fu_951_p_z_5_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_vx_5;
wire    grp_to_double_fu_951_p_vx_5_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_vy_5;
wire    grp_to_double_fu_951_p_vy_5_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_vz_5;
wire    grp_to_double_fu_951_p_vz_5_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_x_6;
wire    grp_to_double_fu_951_p_x_6_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_y_6;
wire    grp_to_double_fu_951_p_y_6_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_z_6;
wire    grp_to_double_fu_951_p_z_6_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_vx_6;
wire    grp_to_double_fu_951_p_vx_6_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_vy_6;
wire    grp_to_double_fu_951_p_vy_6_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_vz_6;
wire    grp_to_double_fu_951_p_vz_6_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_x_7;
wire    grp_to_double_fu_951_p_x_7_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_y_7;
wire    grp_to_double_fu_951_p_y_7_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_z_7;
wire    grp_to_double_fu_951_p_z_7_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_vx_7;
wire    grp_to_double_fu_951_p_vx_7_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_vy_7;
wire    grp_to_double_fu_951_p_vy_7_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_vz_7;
wire    grp_to_double_fu_951_p_vz_7_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_x_8;
wire    grp_to_double_fu_951_p_x_8_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_y_8;
wire    grp_to_double_fu_951_p_y_8_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_z_8;
wire    grp_to_double_fu_951_p_z_8_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_vx_8;
wire    grp_to_double_fu_951_p_vx_8_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_vy_8;
wire    grp_to_double_fu_951_p_vy_8_ap_vld;
wire   [63:0] grp_to_double_fu_951_p_vz_8;
wire    grp_to_double_fu_951_p_vz_8_ap_vld;
reg    ap_reg_grp_gravity_fu_624_ap_start;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
reg    ap_reg_grp_drift_fu_754_ap_start;
reg    ap_reg_grp_kick_fu_866_ap_start;
wire    ap_CS_fsm_state6;
reg    ap_reg_grp_to_double_fu_951_ap_start;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state9;
reg   [8:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'd1;
#0 p_ax_6 = 64'd0;
#0 p_ay_6 = 64'd0;
#0 p_az_6 = 64'd0;
#0 p_ax_7 = 64'd0;
#0 p_ay_7 = 64'd0;
#0 p_az_7 = 64'd0;
#0 p_ax_8 = 64'd0;
#0 p_ay_8 = 64'd0;
#0 p_az_8 = 64'd0;
#0 ap_reg_grp_gravity_fu_624_ap_start = 1'b0;
#0 ap_reg_grp_drift_fu_754_ap_start = 1'b0;
#0 ap_reg_grp_kick_fu_866_ap_start = 1'b0;
#0 ap_reg_grp_to_double_fu_951_ap_start = 1'b0;
end

gravity grp_gravity_fu_624(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_gravity_fu_624_ap_start),
    .ap_done(grp_gravity_fu_624_ap_done),
    .ap_idle(grp_gravity_fu_624_ap_idle),
    .ap_ready(grp_gravity_fu_624_ap_ready),
    .p_x_0(p_x_0_i),
    .p_x_1(p_x_1_i),
    .p_y_0(p_y_0_i),
    .p_y_1(p_y_1_i),
    .p_z_0(p_z_0_i),
    .p_z_1(p_z_1_i),
    .p_m_1(p_m_1),
    .p_x_2(p_x_2_i),
    .p_y_2(p_y_2_i),
    .p_z_2(p_z_2_i),
    .p_m_2(p_m_2),
    .p_x_3(p_x_3_i),
    .p_y_3(p_y_3_i),
    .p_z_3(p_z_3_i),
    .p_m_3(p_m_3),
    .p_x_4(p_x_4_i),
    .p_y_4(p_y_4_i),
    .p_z_4(p_z_4_i),
    .p_m_4(p_m_4),
    .p_x_5(p_x_5_i),
    .p_y_5(p_y_5_i),
    .p_z_5(p_z_5_i),
    .p_m_5(p_m_5),
    .p_x_6(p_x_6_i),
    .p_y_6(p_y_6_i),
    .p_z_6(p_z_6_i),
    .p_x_7(p_x_7_i),
    .p_y_7(p_y_7_i),
    .p_z_7(p_z_7_i),
    .p_x_8(p_x_8_i),
    .p_y_8(p_y_8_i),
    .p_z_8(p_z_8_i),
    .p_ax_0(grp_gravity_fu_624_p_ax_0),
    .p_ax_0_ap_vld(grp_gravity_fu_624_p_ax_0_ap_vld),
    .p_ay_0(grp_gravity_fu_624_p_ay_0),
    .p_ay_0_ap_vld(grp_gravity_fu_624_p_ay_0_ap_vld),
    .p_az_0(grp_gravity_fu_624_p_az_0),
    .p_az_0_ap_vld(grp_gravity_fu_624_p_az_0_ap_vld),
    .p_m_0(p_m_0),
    .p_ax_1(grp_gravity_fu_624_p_ax_1),
    .p_ax_1_ap_vld(grp_gravity_fu_624_p_ax_1_ap_vld),
    .p_ay_1(grp_gravity_fu_624_p_ay_1),
    .p_ay_1_ap_vld(grp_gravity_fu_624_p_ay_1_ap_vld),
    .p_az_1(grp_gravity_fu_624_p_az_1),
    .p_az_1_ap_vld(grp_gravity_fu_624_p_az_1_ap_vld),
    .p_ax_2(grp_gravity_fu_624_p_ax_2),
    .p_ax_2_ap_vld(grp_gravity_fu_624_p_ax_2_ap_vld),
    .p_ay_2(grp_gravity_fu_624_p_ay_2),
    .p_ay_2_ap_vld(grp_gravity_fu_624_p_ay_2_ap_vld),
    .p_az_2(grp_gravity_fu_624_p_az_2),
    .p_az_2_ap_vld(grp_gravity_fu_624_p_az_2_ap_vld),
    .p_ax_3(grp_gravity_fu_624_p_ax_3),
    .p_ax_3_ap_vld(grp_gravity_fu_624_p_ax_3_ap_vld),
    .p_ay_3(grp_gravity_fu_624_p_ay_3),
    .p_ay_3_ap_vld(grp_gravity_fu_624_p_ay_3_ap_vld),
    .p_az_3(grp_gravity_fu_624_p_az_3),
    .p_az_3_ap_vld(grp_gravity_fu_624_p_az_3_ap_vld),
    .p_ax_4(grp_gravity_fu_624_p_ax_4),
    .p_ax_4_ap_vld(grp_gravity_fu_624_p_ax_4_ap_vld),
    .p_ay_4(grp_gravity_fu_624_p_ay_4),
    .p_ay_4_ap_vld(grp_gravity_fu_624_p_ay_4_ap_vld),
    .p_az_4(grp_gravity_fu_624_p_az_4),
    .p_az_4_ap_vld(grp_gravity_fu_624_p_az_4_ap_vld),
    .p_ax_5(grp_gravity_fu_624_p_ax_5),
    .p_ax_5_ap_vld(grp_gravity_fu_624_p_ax_5_ap_vld),
    .p_ay_5(grp_gravity_fu_624_p_ay_5),
    .p_ay_5_ap_vld(grp_gravity_fu_624_p_ay_5_ap_vld),
    .p_az_5(grp_gravity_fu_624_p_az_5),
    .p_az_5_ap_vld(grp_gravity_fu_624_p_az_5_ap_vld),
    .p_ax_6(grp_gravity_fu_624_p_ax_6),
    .p_ax_6_ap_vld(grp_gravity_fu_624_p_ax_6_ap_vld),
    .p_ay_6(grp_gravity_fu_624_p_ay_6),
    .p_ay_6_ap_vld(grp_gravity_fu_624_p_ay_6_ap_vld),
    .p_az_6(grp_gravity_fu_624_p_az_6),
    .p_az_6_ap_vld(grp_gravity_fu_624_p_az_6_ap_vld),
    .p_ax_7(grp_gravity_fu_624_p_ax_7),
    .p_ax_7_ap_vld(grp_gravity_fu_624_p_ax_7_ap_vld),
    .p_ay_7(grp_gravity_fu_624_p_ay_7),
    .p_ay_7_ap_vld(grp_gravity_fu_624_p_ay_7_ap_vld),
    .p_az_7(grp_gravity_fu_624_p_az_7),
    .p_az_7_ap_vld(grp_gravity_fu_624_p_az_7_ap_vld),
    .p_ax_8(grp_gravity_fu_624_p_ax_8),
    .p_ax_8_ap_vld(grp_gravity_fu_624_p_ax_8_ap_vld),
    .p_ay_8(grp_gravity_fu_624_p_ay_8),
    .p_ay_8_ap_vld(grp_gravity_fu_624_p_ay_8_ap_vld),
    .p_az_8(grp_gravity_fu_624_p_az_8),
    .p_az_8_ap_vld(grp_gravity_fu_624_p_az_8_ap_vld)
);

drift grp_drift_fu_754(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_drift_fu_754_ap_start),
    .ap_done(grp_drift_fu_754_ap_done),
    .ap_idle(grp_drift_fu_754_ap_idle),
    .ap_ready(grp_drift_fu_754_ap_ready),
    .p_int_0_x_read(grp_drift_fu_754_p_int_0_x_read),
    .p_int_1_x_read(grp_drift_fu_754_p_int_1_x_read),
    .p_int_2_x_read(grp_drift_fu_754_p_int_2_x_read),
    .p_int_3_x_read(grp_drift_fu_754_p_int_3_x_read),
    .p_int_4_x_read(grp_drift_fu_754_p_int_4_x_read),
    .p_int_5_x_read(grp_drift_fu_754_p_int_5_x_read),
    .p_int_6_x_read(grp_drift_fu_754_p_int_6_x_read),
    .p_int_7_x_read(grp_drift_fu_754_p_int_7_x_read),
    .p_int_8_x_read(grp_drift_fu_754_p_int_8_x_read),
    .p_int_0_y_read(grp_drift_fu_754_p_int_0_y_read),
    .p_int_1_y_read(grp_drift_fu_754_p_int_1_y_read),
    .p_int_2_y_read(grp_drift_fu_754_p_int_2_y_read),
    .p_int_3_y_read(grp_drift_fu_754_p_int_3_y_read),
    .p_int_4_y_read(grp_drift_fu_754_p_int_4_y_read),
    .p_int_5_y_read(grp_drift_fu_754_p_int_5_y_read),
    .p_int_6_y_read(grp_drift_fu_754_p_int_6_y_read),
    .p_int_7_y_read(grp_drift_fu_754_p_int_7_y_read),
    .p_int_8_y_read(grp_drift_fu_754_p_int_8_y_read),
    .p_int_0_z_read(grp_drift_fu_754_p_int_0_z_read),
    .p_int_1_z_read(grp_drift_fu_754_p_int_1_z_read),
    .p_int_2_z_read(grp_drift_fu_754_p_int_2_z_read),
    .p_int_3_z_read(grp_drift_fu_754_p_int_3_z_read),
    .p_int_4_z_read(grp_drift_fu_754_p_int_4_z_read),
    .p_int_5_z_read(grp_drift_fu_754_p_int_5_z_read),
    .p_int_6_z_read(grp_drift_fu_754_p_int_6_z_read),
    .p_int_7_z_read(grp_drift_fu_754_p_int_7_z_read),
    .p_int_8_z_read(grp_drift_fu_754_p_int_8_z_read),
    .p_int_0_vx_read(grp_drift_fu_754_p_int_0_vx_read),
    .p_int_1_vx_read(grp_drift_fu_754_p_int_1_vx_read),
    .p_int_2_vx_read(grp_drift_fu_754_p_int_2_vx_read),
    .p_int_3_vx_read(grp_drift_fu_754_p_int_3_vx_read),
    .p_int_4_vx_read(grp_drift_fu_754_p_int_4_vx_read),
    .p_int_5_vx_read(grp_drift_fu_754_p_int_5_vx_read),
    .p_int_6_vx_read(grp_drift_fu_754_p_int_6_vx_read),
    .p_int_7_vx_read(grp_drift_fu_754_p_int_7_vx_read),
    .p_int_8_vx_read(grp_drift_fu_754_p_int_8_vx_read),
    .p_int_0_vy_read(grp_drift_fu_754_p_int_0_vy_read),
    .p_int_1_vy_read(grp_drift_fu_754_p_int_1_vy_read),
    .p_int_2_vy_read(grp_drift_fu_754_p_int_2_vy_read),
    .p_int_3_vy_read(grp_drift_fu_754_p_int_3_vy_read),
    .p_int_4_vy_read(grp_drift_fu_754_p_int_4_vy_read),
    .p_int_5_vy_read(grp_drift_fu_754_p_int_5_vy_read),
    .p_int_6_vy_read(grp_drift_fu_754_p_int_6_vy_read),
    .p_int_7_vy_read(grp_drift_fu_754_p_int_7_vy_read),
    .p_int_8_vy_read(grp_drift_fu_754_p_int_8_vy_read),
    .p_int_0_vz_read(grp_drift_fu_754_p_int_0_vz_read),
    .p_int_1_vz_read(grp_drift_fu_754_p_int_1_vz_read),
    .p_int_2_vz_read(grp_drift_fu_754_p_int_2_vz_read),
    .p_int_3_vz_read(grp_drift_fu_754_p_int_3_vz_read),
    .p_int_4_vz_read(grp_drift_fu_754_p_int_4_vz_read),
    .p_int_5_vz_read(grp_drift_fu_754_p_int_5_vz_read),
    .p_int_6_vz_read(grp_drift_fu_754_p_int_6_vz_read),
    .p_int_7_vz_read(grp_drift_fu_754_p_int_7_vz_read),
    .p_int_8_vz_read(grp_drift_fu_754_p_int_8_vz_read),
    .ap_return_0(grp_drift_fu_754_ap_return_0),
    .ap_return_1(grp_drift_fu_754_ap_return_1),
    .ap_return_2(grp_drift_fu_754_ap_return_2),
    .ap_return_3(grp_drift_fu_754_ap_return_3),
    .ap_return_4(grp_drift_fu_754_ap_return_4),
    .ap_return_5(grp_drift_fu_754_ap_return_5),
    .ap_return_6(grp_drift_fu_754_ap_return_6),
    .ap_return_7(grp_drift_fu_754_ap_return_7),
    .ap_return_8(grp_drift_fu_754_ap_return_8),
    .ap_return_9(grp_drift_fu_754_ap_return_9),
    .ap_return_10(grp_drift_fu_754_ap_return_10),
    .ap_return_11(grp_drift_fu_754_ap_return_11),
    .ap_return_12(grp_drift_fu_754_ap_return_12),
    .ap_return_13(grp_drift_fu_754_ap_return_13),
    .ap_return_14(grp_drift_fu_754_ap_return_14),
    .ap_return_15(grp_drift_fu_754_ap_return_15),
    .ap_return_16(grp_drift_fu_754_ap_return_16),
    .ap_return_17(grp_drift_fu_754_ap_return_17),
    .ap_return_18(grp_drift_fu_754_ap_return_18),
    .ap_return_19(grp_drift_fu_754_ap_return_19),
    .ap_return_20(grp_drift_fu_754_ap_return_20),
    .ap_return_21(grp_drift_fu_754_ap_return_21),
    .ap_return_22(grp_drift_fu_754_ap_return_22),
    .ap_return_23(grp_drift_fu_754_ap_return_23),
    .ap_return_24(grp_drift_fu_754_ap_return_24),
    .ap_return_25(grp_drift_fu_754_ap_return_25),
    .ap_return_26(grp_drift_fu_754_ap_return_26)
);

kick grp_kick_fu_866(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_kick_fu_866_ap_start),
    .ap_done(grp_kick_fu_866_ap_done),
    .ap_idle(grp_kick_fu_866_ap_idle),
    .ap_ready(grp_kick_fu_866_ap_ready),
    .p_int_0_vx_read(p_int_0_vx_read),
    .p_int_1_vx_read(p_int_1_vx_read),
    .p_int_2_vx_read(p_int_2_vx_read),
    .p_int_3_vx_read(p_int_3_vx_read),
    .p_int_4_vx_read(p_int_4_vx_read),
    .p_int_5_vx_read(p_int_5_vx_read),
    .p_int_6_vx_read(p_int_6_vx_read),
    .p_int_7_vx_read(p_int_7_vx_read),
    .p_int_8_vx_read(p_int_8_vx_read),
    .p_int_0_vy_read(p_int_0_vy_read),
    .p_int_1_vy_read(p_int_1_vy_read),
    .p_int_2_vy_read(p_int_2_vy_read),
    .p_int_3_vy_read(p_int_3_vy_read),
    .p_int_4_vy_read(p_int_4_vy_read),
    .p_int_5_vy_read(p_int_5_vy_read),
    .p_int_6_vy_read(p_int_6_vy_read),
    .p_int_7_vy_read(p_int_7_vy_read),
    .p_int_8_vy_read(p_int_8_vy_read),
    .p_int_0_vz_read(p_int_0_vz_read),
    .p_int_1_vz_read(p_int_1_vz_read),
    .p_int_2_vz_read(p_int_2_vz_read),
    .p_int_3_vz_read(p_int_3_vz_read),
    .p_int_4_vz_read(p_int_4_vz_read),
    .p_int_5_vz_read(p_int_5_vz_read),
    .p_int_6_vz_read(p_int_6_vz_read),
    .p_int_7_vz_read(p_int_7_vz_read),
    .p_int_8_vz_read(p_int_8_vz_read),
    .p_ax_6(p_ax_6),
    .p_ax_0(p_ax_0_i),
    .p_ax_3(p_ax_3_i),
    .p_ay_6(p_ay_6),
    .p_ay_0(p_ay_0_i),
    .p_ay_3(p_ay_3_i),
    .p_az_6(p_az_6),
    .p_az_0(p_az_0_i),
    .p_az_3(p_az_3_i),
    .p_ax_7(p_ax_7),
    .p_ax_1(p_ax_1_i),
    .p_ax_4(p_ax_4_i),
    .p_ay_7(p_ay_7),
    .p_ay_1(p_ay_1_i),
    .p_ay_4(p_ay_4_i),
    .p_az_7(p_az_7),
    .p_az_1(p_az_1_i),
    .p_az_4(p_az_4_i),
    .p_ax_8(p_ax_8),
    .p_ax_2(p_ax_2_i),
    .p_ax_5(p_ax_5_i),
    .p_ay_8(p_ay_8),
    .p_ay_2(p_ay_2_i),
    .p_ay_5(p_ay_5_i),
    .p_az_8(p_az_8),
    .p_az_2(p_az_2_i),
    .p_az_5(p_az_5_i),
    .ap_return_0(grp_kick_fu_866_ap_return_0),
    .ap_return_1(grp_kick_fu_866_ap_return_1),
    .ap_return_2(grp_kick_fu_866_ap_return_2),
    .ap_return_3(grp_kick_fu_866_ap_return_3),
    .ap_return_4(grp_kick_fu_866_ap_return_4),
    .ap_return_5(grp_kick_fu_866_ap_return_5),
    .ap_return_6(grp_kick_fu_866_ap_return_6),
    .ap_return_7(grp_kick_fu_866_ap_return_7),
    .ap_return_8(grp_kick_fu_866_ap_return_8),
    .ap_return_9(grp_kick_fu_866_ap_return_9),
    .ap_return_10(grp_kick_fu_866_ap_return_10),
    .ap_return_11(grp_kick_fu_866_ap_return_11),
    .ap_return_12(grp_kick_fu_866_ap_return_12),
    .ap_return_13(grp_kick_fu_866_ap_return_13),
    .ap_return_14(grp_kick_fu_866_ap_return_14),
    .ap_return_15(grp_kick_fu_866_ap_return_15),
    .ap_return_16(grp_kick_fu_866_ap_return_16),
    .ap_return_17(grp_kick_fu_866_ap_return_17),
    .ap_return_18(grp_kick_fu_866_ap_return_18),
    .ap_return_19(grp_kick_fu_866_ap_return_19),
    .ap_return_20(grp_kick_fu_866_ap_return_20),
    .ap_return_21(grp_kick_fu_866_ap_return_21),
    .ap_return_22(grp_kick_fu_866_ap_return_22),
    .ap_return_23(grp_kick_fu_866_ap_return_23),
    .ap_return_24(grp_kick_fu_866_ap_return_24),
    .ap_return_25(grp_kick_fu_866_ap_return_25),
    .ap_return_26(grp_kick_fu_866_ap_return_26)
);

to_double grp_to_double_fu_951(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_to_double_fu_951_ap_start),
    .ap_done(grp_to_double_fu_951_ap_done),
    .ap_idle(grp_to_double_fu_951_ap_idle),
    .ap_ready(grp_to_double_fu_951_ap_ready),
    .p_int_0_x_read(reg_1252),
    .p_int_1_x_read(reg_1258),
    .p_int_2_x_read(reg_1264),
    .p_int_3_x_read(reg_1270),
    .p_int_4_x_read(reg_1276),
    .p_int_5_x_read(reg_1282),
    .p_int_6_x_read(reg_1288),
    .p_int_7_x_read(reg_1294),
    .p_int_8_x_read(reg_1300),
    .p_int_0_y_read(reg_1306),
    .p_int_1_y_read(reg_1312),
    .p_int_2_y_read(reg_1318),
    .p_int_3_y_read(reg_1324),
    .p_int_4_y_read(reg_1330),
    .p_int_5_y_read(reg_1336),
    .p_int_6_y_read(reg_1342),
    .p_int_7_y_read(reg_1348),
    .p_int_8_y_read(reg_1354),
    .p_int_0_z_read(reg_1360),
    .p_int_1_z_read(reg_1366),
    .p_int_2_z_read(reg_1372),
    .p_int_3_z_read(reg_1378),
    .p_int_4_z_read(reg_1384),
    .p_int_5_z_read(reg_1390),
    .p_int_6_z_read(reg_1396),
    .p_int_7_z_read(reg_1402),
    .p_int_8_z_read(reg_1408),
    .p_int_0_vx_read(grp_to_double_fu_951_p_int_0_vx_read),
    .p_int_1_vx_read(grp_to_double_fu_951_p_int_1_vx_read),
    .p_int_2_vx_read(grp_to_double_fu_951_p_int_2_vx_read),
    .p_int_3_vx_read(grp_to_double_fu_951_p_int_3_vx_read),
    .p_int_4_vx_read(grp_to_double_fu_951_p_int_4_vx_read),
    .p_int_5_vx_read(grp_to_double_fu_951_p_int_5_vx_read),
    .p_int_6_vx_read(grp_to_double_fu_951_p_int_6_vx_read),
    .p_int_7_vx_read(grp_to_double_fu_951_p_int_7_vx_read),
    .p_int_8_vx_read(grp_to_double_fu_951_p_int_8_vx_read),
    .p_int_0_vy_read(grp_to_double_fu_951_p_int_0_vy_read),
    .p_int_1_vy_read(grp_to_double_fu_951_p_int_1_vy_read),
    .p_int_2_vy_read(grp_to_double_fu_951_p_int_2_vy_read),
    .p_int_3_vy_read(grp_to_double_fu_951_p_int_3_vy_read),
    .p_int_4_vy_read(grp_to_double_fu_951_p_int_4_vy_read),
    .p_int_5_vy_read(grp_to_double_fu_951_p_int_5_vy_read),
    .p_int_6_vy_read(grp_to_double_fu_951_p_int_6_vy_read),
    .p_int_7_vy_read(grp_to_double_fu_951_p_int_7_vy_read),
    .p_int_8_vy_read(grp_to_double_fu_951_p_int_8_vy_read),
    .p_int_0_vz_read(grp_to_double_fu_951_p_int_0_vz_read),
    .p_int_1_vz_read(grp_to_double_fu_951_p_int_1_vz_read),
    .p_int_2_vz_read(grp_to_double_fu_951_p_int_2_vz_read),
    .p_int_3_vz_read(grp_to_double_fu_951_p_int_3_vz_read),
    .p_int_4_vz_read(grp_to_double_fu_951_p_int_4_vz_read),
    .p_int_5_vz_read(grp_to_double_fu_951_p_int_5_vz_read),
    .p_int_6_vz_read(grp_to_double_fu_951_p_int_6_vz_read),
    .p_int_7_vz_read(grp_to_double_fu_951_p_int_7_vz_read),
    .p_int_8_vz_read(grp_to_double_fu_951_p_int_8_vz_read),
    .p_x_0(grp_to_double_fu_951_p_x_0),
    .p_x_0_ap_vld(grp_to_double_fu_951_p_x_0_ap_vld),
    .p_y_0(grp_to_double_fu_951_p_y_0),
    .p_y_0_ap_vld(grp_to_double_fu_951_p_y_0_ap_vld),
    .p_z_0(grp_to_double_fu_951_p_z_0),
    .p_z_0_ap_vld(grp_to_double_fu_951_p_z_0_ap_vld),
    .p_vx_0(grp_to_double_fu_951_p_vx_0),
    .p_vx_0_ap_vld(grp_to_double_fu_951_p_vx_0_ap_vld),
    .p_vy_0(grp_to_double_fu_951_p_vy_0),
    .p_vy_0_ap_vld(grp_to_double_fu_951_p_vy_0_ap_vld),
    .p_vz_0(grp_to_double_fu_951_p_vz_0),
    .p_vz_0_ap_vld(grp_to_double_fu_951_p_vz_0_ap_vld),
    .p_x_1(grp_to_double_fu_951_p_x_1),
    .p_x_1_ap_vld(grp_to_double_fu_951_p_x_1_ap_vld),
    .p_y_1(grp_to_double_fu_951_p_y_1),
    .p_y_1_ap_vld(grp_to_double_fu_951_p_y_1_ap_vld),
    .p_z_1(grp_to_double_fu_951_p_z_1),
    .p_z_1_ap_vld(grp_to_double_fu_951_p_z_1_ap_vld),
    .p_vx_1(grp_to_double_fu_951_p_vx_1),
    .p_vx_1_ap_vld(grp_to_double_fu_951_p_vx_1_ap_vld),
    .p_vy_1(grp_to_double_fu_951_p_vy_1),
    .p_vy_1_ap_vld(grp_to_double_fu_951_p_vy_1_ap_vld),
    .p_vz_1(grp_to_double_fu_951_p_vz_1),
    .p_vz_1_ap_vld(grp_to_double_fu_951_p_vz_1_ap_vld),
    .p_x_2(grp_to_double_fu_951_p_x_2),
    .p_x_2_ap_vld(grp_to_double_fu_951_p_x_2_ap_vld),
    .p_y_2(grp_to_double_fu_951_p_y_2),
    .p_y_2_ap_vld(grp_to_double_fu_951_p_y_2_ap_vld),
    .p_z_2(grp_to_double_fu_951_p_z_2),
    .p_z_2_ap_vld(grp_to_double_fu_951_p_z_2_ap_vld),
    .p_vx_2(grp_to_double_fu_951_p_vx_2),
    .p_vx_2_ap_vld(grp_to_double_fu_951_p_vx_2_ap_vld),
    .p_vy_2(grp_to_double_fu_951_p_vy_2),
    .p_vy_2_ap_vld(grp_to_double_fu_951_p_vy_2_ap_vld),
    .p_vz_2(grp_to_double_fu_951_p_vz_2),
    .p_vz_2_ap_vld(grp_to_double_fu_951_p_vz_2_ap_vld),
    .p_x_3(grp_to_double_fu_951_p_x_3),
    .p_x_3_ap_vld(grp_to_double_fu_951_p_x_3_ap_vld),
    .p_y_3(grp_to_double_fu_951_p_y_3),
    .p_y_3_ap_vld(grp_to_double_fu_951_p_y_3_ap_vld),
    .p_z_3(grp_to_double_fu_951_p_z_3),
    .p_z_3_ap_vld(grp_to_double_fu_951_p_z_3_ap_vld),
    .p_vx_3(grp_to_double_fu_951_p_vx_3),
    .p_vx_3_ap_vld(grp_to_double_fu_951_p_vx_3_ap_vld),
    .p_vy_3(grp_to_double_fu_951_p_vy_3),
    .p_vy_3_ap_vld(grp_to_double_fu_951_p_vy_3_ap_vld),
    .p_vz_3(grp_to_double_fu_951_p_vz_3),
    .p_vz_3_ap_vld(grp_to_double_fu_951_p_vz_3_ap_vld),
    .p_x_4(grp_to_double_fu_951_p_x_4),
    .p_x_4_ap_vld(grp_to_double_fu_951_p_x_4_ap_vld),
    .p_y_4(grp_to_double_fu_951_p_y_4),
    .p_y_4_ap_vld(grp_to_double_fu_951_p_y_4_ap_vld),
    .p_z_4(grp_to_double_fu_951_p_z_4),
    .p_z_4_ap_vld(grp_to_double_fu_951_p_z_4_ap_vld),
    .p_vx_4(grp_to_double_fu_951_p_vx_4),
    .p_vx_4_ap_vld(grp_to_double_fu_951_p_vx_4_ap_vld),
    .p_vy_4(grp_to_double_fu_951_p_vy_4),
    .p_vy_4_ap_vld(grp_to_double_fu_951_p_vy_4_ap_vld),
    .p_vz_4(grp_to_double_fu_951_p_vz_4),
    .p_vz_4_ap_vld(grp_to_double_fu_951_p_vz_4_ap_vld),
    .p_x_5(grp_to_double_fu_951_p_x_5),
    .p_x_5_ap_vld(grp_to_double_fu_951_p_x_5_ap_vld),
    .p_y_5(grp_to_double_fu_951_p_y_5),
    .p_y_5_ap_vld(grp_to_double_fu_951_p_y_5_ap_vld),
    .p_z_5(grp_to_double_fu_951_p_z_5),
    .p_z_5_ap_vld(grp_to_double_fu_951_p_z_5_ap_vld),
    .p_vx_5(grp_to_double_fu_951_p_vx_5),
    .p_vx_5_ap_vld(grp_to_double_fu_951_p_vx_5_ap_vld),
    .p_vy_5(grp_to_double_fu_951_p_vy_5),
    .p_vy_5_ap_vld(grp_to_double_fu_951_p_vy_5_ap_vld),
    .p_vz_5(grp_to_double_fu_951_p_vz_5),
    .p_vz_5_ap_vld(grp_to_double_fu_951_p_vz_5_ap_vld),
    .p_x_6(grp_to_double_fu_951_p_x_6),
    .p_x_6_ap_vld(grp_to_double_fu_951_p_x_6_ap_vld),
    .p_y_6(grp_to_double_fu_951_p_y_6),
    .p_y_6_ap_vld(grp_to_double_fu_951_p_y_6_ap_vld),
    .p_z_6(grp_to_double_fu_951_p_z_6),
    .p_z_6_ap_vld(grp_to_double_fu_951_p_z_6_ap_vld),
    .p_vx_6(grp_to_double_fu_951_p_vx_6),
    .p_vx_6_ap_vld(grp_to_double_fu_951_p_vx_6_ap_vld),
    .p_vy_6(grp_to_double_fu_951_p_vy_6),
    .p_vy_6_ap_vld(grp_to_double_fu_951_p_vy_6_ap_vld),
    .p_vz_6(grp_to_double_fu_951_p_vz_6),
    .p_vz_6_ap_vld(grp_to_double_fu_951_p_vz_6_ap_vld),
    .p_x_7(grp_to_double_fu_951_p_x_7),
    .p_x_7_ap_vld(grp_to_double_fu_951_p_x_7_ap_vld),
    .p_y_7(grp_to_double_fu_951_p_y_7),
    .p_y_7_ap_vld(grp_to_double_fu_951_p_y_7_ap_vld),
    .p_z_7(grp_to_double_fu_951_p_z_7),
    .p_z_7_ap_vld(grp_to_double_fu_951_p_z_7_ap_vld),
    .p_vx_7(grp_to_double_fu_951_p_vx_7),
    .p_vx_7_ap_vld(grp_to_double_fu_951_p_vx_7_ap_vld),
    .p_vy_7(grp_to_double_fu_951_p_vy_7),
    .p_vy_7_ap_vld(grp_to_double_fu_951_p_vy_7_ap_vld),
    .p_vz_7(grp_to_double_fu_951_p_vz_7),
    .p_vz_7_ap_vld(grp_to_double_fu_951_p_vz_7_ap_vld),
    .p_x_8(grp_to_double_fu_951_p_x_8),
    .p_x_8_ap_vld(grp_to_double_fu_951_p_x_8_ap_vld),
    .p_y_8(grp_to_double_fu_951_p_y_8),
    .p_y_8_ap_vld(grp_to_double_fu_951_p_y_8_ap_vld),
    .p_z_8(grp_to_double_fu_951_p_z_8),
    .p_z_8_ap_vld(grp_to_double_fu_951_p_z_8_ap_vld),
    .p_vx_8(grp_to_double_fu_951_p_vx_8),
    .p_vx_8_ap_vld(grp_to_double_fu_951_p_vx_8_ap_vld),
    .p_vy_8(grp_to_double_fu_951_p_vy_8),
    .p_vy_8_ap_vld(grp_to_double_fu_951_p_vy_8_ap_vld),
    .p_vz_8(grp_to_double_fu_951_p_vz_8),
    .p_vz_8_ap_vld(grp_to_double_fu_951_p_vz_8_ap_vld)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_drift_fu_754_ap_start <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((1'b1 == ap_CS_fsm_state7) & (grp_kick_fu_866_ap_done == 1'b1)))) begin
            ap_reg_grp_drift_fu_754_ap_start <= 1'b1;
        end else if ((1'b1 == grp_drift_fu_754_ap_ready)) begin
            ap_reg_grp_drift_fu_754_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_gravity_fu_624_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_reg_grp_gravity_fu_624_ap_start <= 1'b1;
        end else if ((1'b1 == grp_gravity_fu_624_ap_ready)) begin
            ap_reg_grp_gravity_fu_624_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_kick_fu_866_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_reg_grp_kick_fu_866_ap_start <= 1'b1;
        end else if ((1'b1 == grp_kick_fu_866_ap_ready)) begin
            ap_reg_grp_kick_fu_866_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_to_double_fu_951_ap_start <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state2) & (grp_drift_fu_754_ap_done == 1'b1)) | ((grp_drift_fu_754_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)))) begin
            ap_reg_grp_to_double_fu_951_ap_start <= 1'b1;
        end else if ((1'b1 == grp_to_double_fu_951_ap_ready)) begin
            ap_reg_grp_to_double_fu_951_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b1 == grp_gravity_fu_624_p_ax_6_ap_vld))) begin
        p_ax_6 <= grp_gravity_fu_624_p_ax_6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b1 == grp_gravity_fu_624_p_ax_7_ap_vld))) begin
        p_ax_7 <= grp_gravity_fu_624_p_ax_7;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b1 == grp_gravity_fu_624_p_ax_8_ap_vld))) begin
        p_ax_8 <= grp_gravity_fu_624_p_ax_8;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b1 == grp_gravity_fu_624_p_ay_6_ap_vld))) begin
        p_ay_6 <= grp_gravity_fu_624_p_ay_6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b1 == grp_gravity_fu_624_p_ay_7_ap_vld))) begin
        p_ay_7 <= grp_gravity_fu_624_p_ay_7;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b1 == grp_gravity_fu_624_p_ay_8_ap_vld))) begin
        p_ay_8 <= grp_gravity_fu_624_p_ay_8;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b1 == grp_gravity_fu_624_p_az_6_ap_vld))) begin
        p_az_6 <= grp_gravity_fu_624_p_az_6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b1 == grp_gravity_fu_624_p_az_7_ap_vld))) begin
        p_az_7 <= grp_gravity_fu_624_p_az_7;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b1 == grp_gravity_fu_624_p_az_8_ap_vld))) begin
        p_az_8 <= grp_gravity_fu_624_p_az_8;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (grp_kick_fu_866_ap_done == 1'b1))) begin
        p_int_vx25_assign_4_reg_2177 <= grp_kick_fu_866_ap_return_1;
        p_int_vx26_assign_4_reg_2184 <= grp_kick_fu_866_ap_return_2;
        p_int_vx27_assign_4_reg_2191 <= grp_kick_fu_866_ap_return_3;
        p_int_vx28_assign_4_reg_2198 <= grp_kick_fu_866_ap_return_4;
        p_int_vx29_assign_4_reg_2205 <= grp_kick_fu_866_ap_return_5;
        p_int_vx30_assign_4_reg_2212 <= grp_kick_fu_866_ap_return_6;
        p_int_vx3138_assign_4_reg_2219 <= grp_kick_fu_866_ap_return_7;
        p_int_vx32_assign_4_reg_2226 <= grp_kick_fu_866_ap_return_8;
        p_int_vx_assign_4_reg_2170 <= grp_kick_fu_866_ap_return_0;
        p_int_vy33_assign_4_reg_2240 <= grp_kick_fu_866_ap_return_10;
        p_int_vy34_assign_4_reg_2247 <= grp_kick_fu_866_ap_return_11;
        p_int_vy35_assign_4_reg_2254 <= grp_kick_fu_866_ap_return_12;
        p_int_vy36_assign_4_reg_2261 <= grp_kick_fu_866_ap_return_13;
        p_int_vy37_assign_4_reg_2268 <= grp_kick_fu_866_ap_return_14;
        p_int_vy38_assign_4_reg_2275 <= grp_kick_fu_866_ap_return_15;
        p_int_vy39_assign_4_reg_2282 <= grp_kick_fu_866_ap_return_16;
        p_int_vy40_assign_4_reg_2289 <= grp_kick_fu_866_ap_return_17;
        p_int_vy_assign_4_reg_2233 <= grp_kick_fu_866_ap_return_9;
        p_int_vz41_assign_4_reg_2303 <= grp_kick_fu_866_ap_return_19;
        p_int_vz42_assign_4_reg_2310 <= grp_kick_fu_866_ap_return_20;
        p_int_vz43_assign_4_reg_2317 <= grp_kick_fu_866_ap_return_21;
        p_int_vz44_assign_4_reg_2324 <= grp_kick_fu_866_ap_return_22;
        p_int_vz45_assign_4_reg_2331 <= grp_kick_fu_866_ap_return_23;
        p_int_vz46_assign_4_reg_2338 <= grp_kick_fu_866_ap_return_24;
        p_int_vz47_assign_4_reg_2345 <= grp_kick_fu_866_ap_return_25;
        p_int_vz48_assign_4_reg_2352 <= grp_kick_fu_866_ap_return_26;
        p_int_vz_assign_4_reg_2296 <= grp_kick_fu_866_ap_return_18;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (grp_drift_fu_754_ap_done == 1'b1)) | ((grp_drift_fu_754_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)))) begin
        reg_1252 <= grp_drift_fu_754_ap_return_0;
        reg_1258 <= grp_drift_fu_754_ap_return_1;
        reg_1264 <= grp_drift_fu_754_ap_return_2;
        reg_1270 <= grp_drift_fu_754_ap_return_3;
        reg_1276 <= grp_drift_fu_754_ap_return_4;
        reg_1282 <= grp_drift_fu_754_ap_return_5;
        reg_1288 <= grp_drift_fu_754_ap_return_6;
        reg_1294 <= grp_drift_fu_754_ap_return_7;
        reg_1300 <= grp_drift_fu_754_ap_return_8;
        reg_1306 <= grp_drift_fu_754_ap_return_9;
        reg_1312 <= grp_drift_fu_754_ap_return_10;
        reg_1318 <= grp_drift_fu_754_ap_return_11;
        reg_1324 <= grp_drift_fu_754_ap_return_12;
        reg_1330 <= grp_drift_fu_754_ap_return_13;
        reg_1336 <= grp_drift_fu_754_ap_return_14;
        reg_1342 <= grp_drift_fu_754_ap_return_15;
        reg_1348 <= grp_drift_fu_754_ap_return_16;
        reg_1354 <= grp_drift_fu_754_ap_return_17;
        reg_1360 <= grp_drift_fu_754_ap_return_18;
        reg_1366 <= grp_drift_fu_754_ap_return_19;
        reg_1372 <= grp_drift_fu_754_ap_return_20;
        reg_1378 <= grp_drift_fu_754_ap_return_21;
        reg_1384 <= grp_drift_fu_754_ap_return_22;
        reg_1390 <= grp_drift_fu_754_ap_return_23;
        reg_1396 <= grp_drift_fu_754_ap_return_24;
        reg_1402 <= grp_drift_fu_754_ap_return_25;
        reg_1408 <= grp_drift_fu_754_ap_return_26;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state9) & (grp_to_double_fu_951_ap_done == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (grp_to_double_fu_951_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_0_vx_read = p_int_vx_assign_4_reg_2170;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_0_vx_read = p_int_0_vx_read;
    end else begin
        grp_drift_fu_754_p_int_0_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_0_vy_read = p_int_vy_assign_4_reg_2233;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_0_vy_read = p_int_0_vy_read;
    end else begin
        grp_drift_fu_754_p_int_0_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_0_vz_read = p_int_vz_assign_4_reg_2296;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_0_vz_read = p_int_0_vz_read;
    end else begin
        grp_drift_fu_754_p_int_0_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_0_x_read = reg_1252;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_0_x_read = p_int_0_x_read;
    end else begin
        grp_drift_fu_754_p_int_0_x_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_0_y_read = reg_1306;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_0_y_read = p_int_0_y_read;
    end else begin
        grp_drift_fu_754_p_int_0_y_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_0_z_read = reg_1360;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_0_z_read = p_int_0_z_read;
    end else begin
        grp_drift_fu_754_p_int_0_z_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_1_vx_read = p_int_vx25_assign_4_reg_2177;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_1_vx_read = p_int_1_vx_read;
    end else begin
        grp_drift_fu_754_p_int_1_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_1_vy_read = p_int_vy33_assign_4_reg_2240;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_1_vy_read = p_int_1_vy_read;
    end else begin
        grp_drift_fu_754_p_int_1_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_1_vz_read = p_int_vz41_assign_4_reg_2303;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_1_vz_read = p_int_1_vz_read;
    end else begin
        grp_drift_fu_754_p_int_1_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_1_x_read = reg_1258;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_1_x_read = p_int_1_x_read;
    end else begin
        grp_drift_fu_754_p_int_1_x_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_1_y_read = reg_1312;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_1_y_read = p_int_1_y_read;
    end else begin
        grp_drift_fu_754_p_int_1_y_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_1_z_read = reg_1366;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_1_z_read = p_int_1_z_read;
    end else begin
        grp_drift_fu_754_p_int_1_z_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_2_vx_read = p_int_vx26_assign_4_reg_2184;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_2_vx_read = p_int_2_vx_read;
    end else begin
        grp_drift_fu_754_p_int_2_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_2_vy_read = p_int_vy34_assign_4_reg_2247;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_2_vy_read = p_int_2_vy_read;
    end else begin
        grp_drift_fu_754_p_int_2_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_2_vz_read = p_int_vz42_assign_4_reg_2310;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_2_vz_read = p_int_2_vz_read;
    end else begin
        grp_drift_fu_754_p_int_2_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_2_x_read = reg_1264;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_2_x_read = p_int_2_x_read;
    end else begin
        grp_drift_fu_754_p_int_2_x_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_2_y_read = reg_1318;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_2_y_read = p_int_2_y_read;
    end else begin
        grp_drift_fu_754_p_int_2_y_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_2_z_read = reg_1372;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_2_z_read = p_int_2_z_read;
    end else begin
        grp_drift_fu_754_p_int_2_z_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_3_vx_read = p_int_vx27_assign_4_reg_2191;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_3_vx_read = p_int_3_vx_read;
    end else begin
        grp_drift_fu_754_p_int_3_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_3_vy_read = p_int_vy35_assign_4_reg_2254;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_3_vy_read = p_int_3_vy_read;
    end else begin
        grp_drift_fu_754_p_int_3_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_3_vz_read = p_int_vz43_assign_4_reg_2317;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_3_vz_read = p_int_3_vz_read;
    end else begin
        grp_drift_fu_754_p_int_3_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_3_x_read = reg_1270;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_3_x_read = p_int_3_x_read;
    end else begin
        grp_drift_fu_754_p_int_3_x_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_3_y_read = reg_1324;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_3_y_read = p_int_3_y_read;
    end else begin
        grp_drift_fu_754_p_int_3_y_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_3_z_read = reg_1378;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_3_z_read = p_int_3_z_read;
    end else begin
        grp_drift_fu_754_p_int_3_z_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_4_vx_read = p_int_vx28_assign_4_reg_2198;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_4_vx_read = p_int_4_vx_read;
    end else begin
        grp_drift_fu_754_p_int_4_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_4_vy_read = p_int_vy36_assign_4_reg_2261;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_4_vy_read = p_int_4_vy_read;
    end else begin
        grp_drift_fu_754_p_int_4_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_4_vz_read = p_int_vz44_assign_4_reg_2324;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_4_vz_read = p_int_4_vz_read;
    end else begin
        grp_drift_fu_754_p_int_4_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_4_x_read = reg_1276;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_4_x_read = p_int_4_x_read;
    end else begin
        grp_drift_fu_754_p_int_4_x_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_4_y_read = reg_1330;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_4_y_read = p_int_4_y_read;
    end else begin
        grp_drift_fu_754_p_int_4_y_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_4_z_read = reg_1384;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_4_z_read = p_int_4_z_read;
    end else begin
        grp_drift_fu_754_p_int_4_z_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_5_vx_read = p_int_vx29_assign_4_reg_2205;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_5_vx_read = p_int_5_vx_read;
    end else begin
        grp_drift_fu_754_p_int_5_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_5_vy_read = p_int_vy37_assign_4_reg_2268;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_5_vy_read = p_int_5_vy_read;
    end else begin
        grp_drift_fu_754_p_int_5_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_5_vz_read = p_int_vz45_assign_4_reg_2331;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_5_vz_read = p_int_5_vz_read;
    end else begin
        grp_drift_fu_754_p_int_5_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_5_x_read = reg_1282;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_5_x_read = p_int_5_x_read;
    end else begin
        grp_drift_fu_754_p_int_5_x_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_5_y_read = reg_1336;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_5_y_read = p_int_5_y_read;
    end else begin
        grp_drift_fu_754_p_int_5_y_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_5_z_read = reg_1390;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_5_z_read = p_int_5_z_read;
    end else begin
        grp_drift_fu_754_p_int_5_z_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_6_vx_read = p_int_vx30_assign_4_reg_2212;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_6_vx_read = p_int_6_vx_read;
    end else begin
        grp_drift_fu_754_p_int_6_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_6_vy_read = p_int_vy38_assign_4_reg_2275;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_6_vy_read = p_int_6_vy_read;
    end else begin
        grp_drift_fu_754_p_int_6_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_6_vz_read = p_int_vz46_assign_4_reg_2338;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_6_vz_read = p_int_6_vz_read;
    end else begin
        grp_drift_fu_754_p_int_6_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_6_x_read = reg_1288;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_6_x_read = p_int_6_x_read;
    end else begin
        grp_drift_fu_754_p_int_6_x_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_6_y_read = reg_1342;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_6_y_read = p_int_6_y_read;
    end else begin
        grp_drift_fu_754_p_int_6_y_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_6_z_read = reg_1396;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_6_z_read = p_int_6_z_read;
    end else begin
        grp_drift_fu_754_p_int_6_z_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_7_vx_read = p_int_vx3138_assign_4_reg_2219;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_7_vx_read = p_int_7_vx_read;
    end else begin
        grp_drift_fu_754_p_int_7_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_7_vy_read = p_int_vy39_assign_4_reg_2282;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_7_vy_read = p_int_7_vy_read;
    end else begin
        grp_drift_fu_754_p_int_7_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_7_vz_read = p_int_vz47_assign_4_reg_2345;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_7_vz_read = p_int_7_vz_read;
    end else begin
        grp_drift_fu_754_p_int_7_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_7_x_read = reg_1294;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_7_x_read = p_int_7_x_read;
    end else begin
        grp_drift_fu_754_p_int_7_x_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_7_y_read = reg_1348;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_7_y_read = p_int_7_y_read;
    end else begin
        grp_drift_fu_754_p_int_7_y_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_7_z_read = reg_1402;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_7_z_read = p_int_7_z_read;
    end else begin
        grp_drift_fu_754_p_int_7_z_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_8_vx_read = p_int_vx32_assign_4_reg_2226;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_8_vx_read = p_int_8_vx_read;
    end else begin
        grp_drift_fu_754_p_int_8_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_8_vy_read = p_int_vy40_assign_4_reg_2289;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_8_vy_read = p_int_8_vy_read;
    end else begin
        grp_drift_fu_754_p_int_8_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_8_vz_read = p_int_vz48_assign_4_reg_2352;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_8_vz_read = p_int_8_vz_read;
    end else begin
        grp_drift_fu_754_p_int_8_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_8_x_read = reg_1300;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_8_x_read = p_int_8_x_read;
    end else begin
        grp_drift_fu_754_p_int_8_x_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_8_y_read = reg_1354;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_8_y_read = p_int_8_y_read;
    end else begin
        grp_drift_fu_754_p_int_8_y_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_drift_fu_754_p_int_8_z_read = reg_1408;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_drift_fu_754_p_int_8_z_read = p_int_8_z_read;
    end else begin
        grp_drift_fu_754_p_int_8_z_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_to_double_fu_951_p_int_0_vx_read = p_int_vx_assign_4_reg_2170;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_951_p_int_0_vx_read = p_int_0_vx_read;
    end else begin
        grp_to_double_fu_951_p_int_0_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_to_double_fu_951_p_int_0_vy_read = p_int_vy_assign_4_reg_2233;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_951_p_int_0_vy_read = p_int_0_vy_read;
    end else begin
        grp_to_double_fu_951_p_int_0_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_to_double_fu_951_p_int_0_vz_read = p_int_vz_assign_4_reg_2296;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_951_p_int_0_vz_read = p_int_0_vz_read;
    end else begin
        grp_to_double_fu_951_p_int_0_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_to_double_fu_951_p_int_1_vx_read = p_int_vx25_assign_4_reg_2177;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_951_p_int_1_vx_read = p_int_1_vx_read;
    end else begin
        grp_to_double_fu_951_p_int_1_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_to_double_fu_951_p_int_1_vy_read = p_int_vy33_assign_4_reg_2240;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_951_p_int_1_vy_read = p_int_1_vy_read;
    end else begin
        grp_to_double_fu_951_p_int_1_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_to_double_fu_951_p_int_1_vz_read = p_int_vz41_assign_4_reg_2303;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_951_p_int_1_vz_read = p_int_1_vz_read;
    end else begin
        grp_to_double_fu_951_p_int_1_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_to_double_fu_951_p_int_2_vx_read = p_int_vx26_assign_4_reg_2184;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_951_p_int_2_vx_read = p_int_2_vx_read;
    end else begin
        grp_to_double_fu_951_p_int_2_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_to_double_fu_951_p_int_2_vy_read = p_int_vy34_assign_4_reg_2247;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_951_p_int_2_vy_read = p_int_2_vy_read;
    end else begin
        grp_to_double_fu_951_p_int_2_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_to_double_fu_951_p_int_2_vz_read = p_int_vz42_assign_4_reg_2310;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_951_p_int_2_vz_read = p_int_2_vz_read;
    end else begin
        grp_to_double_fu_951_p_int_2_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_to_double_fu_951_p_int_3_vx_read = p_int_vx27_assign_4_reg_2191;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_951_p_int_3_vx_read = p_int_3_vx_read;
    end else begin
        grp_to_double_fu_951_p_int_3_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_to_double_fu_951_p_int_3_vy_read = p_int_vy35_assign_4_reg_2254;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_951_p_int_3_vy_read = p_int_3_vy_read;
    end else begin
        grp_to_double_fu_951_p_int_3_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_to_double_fu_951_p_int_3_vz_read = p_int_vz43_assign_4_reg_2317;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_951_p_int_3_vz_read = p_int_3_vz_read;
    end else begin
        grp_to_double_fu_951_p_int_3_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_to_double_fu_951_p_int_4_vx_read = p_int_vx28_assign_4_reg_2198;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_951_p_int_4_vx_read = p_int_4_vx_read;
    end else begin
        grp_to_double_fu_951_p_int_4_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_to_double_fu_951_p_int_4_vy_read = p_int_vy36_assign_4_reg_2261;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_951_p_int_4_vy_read = p_int_4_vy_read;
    end else begin
        grp_to_double_fu_951_p_int_4_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_to_double_fu_951_p_int_4_vz_read = p_int_vz44_assign_4_reg_2324;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_951_p_int_4_vz_read = p_int_4_vz_read;
    end else begin
        grp_to_double_fu_951_p_int_4_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_to_double_fu_951_p_int_5_vx_read = p_int_vx29_assign_4_reg_2205;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_951_p_int_5_vx_read = p_int_5_vx_read;
    end else begin
        grp_to_double_fu_951_p_int_5_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_to_double_fu_951_p_int_5_vy_read = p_int_vy37_assign_4_reg_2268;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_951_p_int_5_vy_read = p_int_5_vy_read;
    end else begin
        grp_to_double_fu_951_p_int_5_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_to_double_fu_951_p_int_5_vz_read = p_int_vz45_assign_4_reg_2331;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_951_p_int_5_vz_read = p_int_5_vz_read;
    end else begin
        grp_to_double_fu_951_p_int_5_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_to_double_fu_951_p_int_6_vx_read = p_int_vx30_assign_4_reg_2212;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_951_p_int_6_vx_read = p_int_6_vx_read;
    end else begin
        grp_to_double_fu_951_p_int_6_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_to_double_fu_951_p_int_6_vy_read = p_int_vy38_assign_4_reg_2275;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_951_p_int_6_vy_read = p_int_6_vy_read;
    end else begin
        grp_to_double_fu_951_p_int_6_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_to_double_fu_951_p_int_6_vz_read = p_int_vz46_assign_4_reg_2338;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_951_p_int_6_vz_read = p_int_6_vz_read;
    end else begin
        grp_to_double_fu_951_p_int_6_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_to_double_fu_951_p_int_7_vx_read = p_int_vx3138_assign_4_reg_2219;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_951_p_int_7_vx_read = p_int_7_vx_read;
    end else begin
        grp_to_double_fu_951_p_int_7_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_to_double_fu_951_p_int_7_vy_read = p_int_vy39_assign_4_reg_2282;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_951_p_int_7_vy_read = p_int_7_vy_read;
    end else begin
        grp_to_double_fu_951_p_int_7_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_to_double_fu_951_p_int_7_vz_read = p_int_vz47_assign_4_reg_2345;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_951_p_int_7_vz_read = p_int_7_vz_read;
    end else begin
        grp_to_double_fu_951_p_int_7_vz_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_to_double_fu_951_p_int_8_vx_read = p_int_vx32_assign_4_reg_2226;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_951_p_int_8_vx_read = p_int_8_vx_read;
    end else begin
        grp_to_double_fu_951_p_int_8_vx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_to_double_fu_951_p_int_8_vy_read = p_int_vy40_assign_4_reg_2289;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_951_p_int_8_vy_read = p_int_8_vy_read;
    end else begin
        grp_to_double_fu_951_p_int_8_vy_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_to_double_fu_951_p_int_8_vz_read = p_int_vz48_assign_4_reg_2352;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_to_double_fu_951_p_int_8_vz_read = p_int_8_vz_read;
    end else begin
        grp_to_double_fu_951_p_int_8_vz_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b1 == grp_gravity_fu_624_p_ax_0_ap_vld))) begin
        p_ax_0_o = grp_gravity_fu_624_p_ax_0;
    end else begin
        p_ax_0_o = p_ax_0_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_ax_0_o_ap_vld = grp_gravity_fu_624_p_ax_0_ap_vld;
    end else begin
        p_ax_0_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b1 == grp_gravity_fu_624_p_ax_1_ap_vld))) begin
        p_ax_1_o = grp_gravity_fu_624_p_ax_1;
    end else begin
        p_ax_1_o = p_ax_1_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_ax_1_o_ap_vld = grp_gravity_fu_624_p_ax_1_ap_vld;
    end else begin
        p_ax_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b1 == grp_gravity_fu_624_p_ax_2_ap_vld))) begin
        p_ax_2_o = grp_gravity_fu_624_p_ax_2;
    end else begin
        p_ax_2_o = p_ax_2_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_ax_2_o_ap_vld = grp_gravity_fu_624_p_ax_2_ap_vld;
    end else begin
        p_ax_2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b1 == grp_gravity_fu_624_p_ax_3_ap_vld))) begin
        p_ax_3_o = grp_gravity_fu_624_p_ax_3;
    end else begin
        p_ax_3_o = p_ax_3_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_ax_3_o_ap_vld = grp_gravity_fu_624_p_ax_3_ap_vld;
    end else begin
        p_ax_3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b1 == grp_gravity_fu_624_p_ax_4_ap_vld))) begin
        p_ax_4_o = grp_gravity_fu_624_p_ax_4;
    end else begin
        p_ax_4_o = p_ax_4_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_ax_4_o_ap_vld = grp_gravity_fu_624_p_ax_4_ap_vld;
    end else begin
        p_ax_4_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b1 == grp_gravity_fu_624_p_ax_5_ap_vld))) begin
        p_ax_5_o = grp_gravity_fu_624_p_ax_5;
    end else begin
        p_ax_5_o = p_ax_5_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_ax_5_o_ap_vld = grp_gravity_fu_624_p_ax_5_ap_vld;
    end else begin
        p_ax_5_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b1 == grp_gravity_fu_624_p_ay_0_ap_vld))) begin
        p_ay_0_o = grp_gravity_fu_624_p_ay_0;
    end else begin
        p_ay_0_o = p_ay_0_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_ay_0_o_ap_vld = grp_gravity_fu_624_p_ay_0_ap_vld;
    end else begin
        p_ay_0_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b1 == grp_gravity_fu_624_p_ay_1_ap_vld))) begin
        p_ay_1_o = grp_gravity_fu_624_p_ay_1;
    end else begin
        p_ay_1_o = p_ay_1_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_ay_1_o_ap_vld = grp_gravity_fu_624_p_ay_1_ap_vld;
    end else begin
        p_ay_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b1 == grp_gravity_fu_624_p_ay_2_ap_vld))) begin
        p_ay_2_o = grp_gravity_fu_624_p_ay_2;
    end else begin
        p_ay_2_o = p_ay_2_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_ay_2_o_ap_vld = grp_gravity_fu_624_p_ay_2_ap_vld;
    end else begin
        p_ay_2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b1 == grp_gravity_fu_624_p_ay_3_ap_vld))) begin
        p_ay_3_o = grp_gravity_fu_624_p_ay_3;
    end else begin
        p_ay_3_o = p_ay_3_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_ay_3_o_ap_vld = grp_gravity_fu_624_p_ay_3_ap_vld;
    end else begin
        p_ay_3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b1 == grp_gravity_fu_624_p_ay_4_ap_vld))) begin
        p_ay_4_o = grp_gravity_fu_624_p_ay_4;
    end else begin
        p_ay_4_o = p_ay_4_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_ay_4_o_ap_vld = grp_gravity_fu_624_p_ay_4_ap_vld;
    end else begin
        p_ay_4_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b1 == grp_gravity_fu_624_p_ay_5_ap_vld))) begin
        p_ay_5_o = grp_gravity_fu_624_p_ay_5;
    end else begin
        p_ay_5_o = p_ay_5_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_ay_5_o_ap_vld = grp_gravity_fu_624_p_ay_5_ap_vld;
    end else begin
        p_ay_5_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b1 == grp_gravity_fu_624_p_az_0_ap_vld))) begin
        p_az_0_o = grp_gravity_fu_624_p_az_0;
    end else begin
        p_az_0_o = p_az_0_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_az_0_o_ap_vld = grp_gravity_fu_624_p_az_0_ap_vld;
    end else begin
        p_az_0_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b1 == grp_gravity_fu_624_p_az_1_ap_vld))) begin
        p_az_1_o = grp_gravity_fu_624_p_az_1;
    end else begin
        p_az_1_o = p_az_1_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_az_1_o_ap_vld = grp_gravity_fu_624_p_az_1_ap_vld;
    end else begin
        p_az_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b1 == grp_gravity_fu_624_p_az_2_ap_vld))) begin
        p_az_2_o = grp_gravity_fu_624_p_az_2;
    end else begin
        p_az_2_o = p_az_2_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_az_2_o_ap_vld = grp_gravity_fu_624_p_az_2_ap_vld;
    end else begin
        p_az_2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b1 == grp_gravity_fu_624_p_az_3_ap_vld))) begin
        p_az_3_o = grp_gravity_fu_624_p_az_3;
    end else begin
        p_az_3_o = p_az_3_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_az_3_o_ap_vld = grp_gravity_fu_624_p_az_3_ap_vld;
    end else begin
        p_az_3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b1 == grp_gravity_fu_624_p_az_4_ap_vld))) begin
        p_az_4_o = grp_gravity_fu_624_p_az_4;
    end else begin
        p_az_4_o = p_az_4_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_az_4_o_ap_vld = grp_gravity_fu_624_p_az_4_ap_vld;
    end else begin
        p_az_4_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b1 == grp_gravity_fu_624_p_az_5_ap_vld))) begin
        p_az_5_o = grp_gravity_fu_624_p_az_5;
    end else begin
        p_az_5_o = p_az_5_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_az_5_o_ap_vld = grp_gravity_fu_624_p_az_5_ap_vld;
    end else begin
        p_az_5_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_vx_0_ap_vld = grp_to_double_fu_951_p_vx_0_ap_vld;
    end else begin
        p_vx_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_vx_1_ap_vld = grp_to_double_fu_951_p_vx_1_ap_vld;
    end else begin
        p_vx_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_vx_2_ap_vld = grp_to_double_fu_951_p_vx_2_ap_vld;
    end else begin
        p_vx_2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_vx_3_ap_vld = grp_to_double_fu_951_p_vx_3_ap_vld;
    end else begin
        p_vx_3_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_vx_4_ap_vld = grp_to_double_fu_951_p_vx_4_ap_vld;
    end else begin
        p_vx_4_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_vx_5_ap_vld = grp_to_double_fu_951_p_vx_5_ap_vld;
    end else begin
        p_vx_5_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_vx_6_ap_vld = grp_to_double_fu_951_p_vx_6_ap_vld;
    end else begin
        p_vx_6_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_vx_7_ap_vld = grp_to_double_fu_951_p_vx_7_ap_vld;
    end else begin
        p_vx_7_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_vx_8_ap_vld = grp_to_double_fu_951_p_vx_8_ap_vld;
    end else begin
        p_vx_8_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_vy_0_ap_vld = grp_to_double_fu_951_p_vy_0_ap_vld;
    end else begin
        p_vy_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_vy_1_ap_vld = grp_to_double_fu_951_p_vy_1_ap_vld;
    end else begin
        p_vy_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_vy_2_ap_vld = grp_to_double_fu_951_p_vy_2_ap_vld;
    end else begin
        p_vy_2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_vy_3_ap_vld = grp_to_double_fu_951_p_vy_3_ap_vld;
    end else begin
        p_vy_3_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_vy_4_ap_vld = grp_to_double_fu_951_p_vy_4_ap_vld;
    end else begin
        p_vy_4_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_vy_5_ap_vld = grp_to_double_fu_951_p_vy_5_ap_vld;
    end else begin
        p_vy_5_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_vy_6_ap_vld = grp_to_double_fu_951_p_vy_6_ap_vld;
    end else begin
        p_vy_6_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_vy_7_ap_vld = grp_to_double_fu_951_p_vy_7_ap_vld;
    end else begin
        p_vy_7_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_vy_8_ap_vld = grp_to_double_fu_951_p_vy_8_ap_vld;
    end else begin
        p_vy_8_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_vz_0_ap_vld = grp_to_double_fu_951_p_vz_0_ap_vld;
    end else begin
        p_vz_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_vz_1_ap_vld = grp_to_double_fu_951_p_vz_1_ap_vld;
    end else begin
        p_vz_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_vz_2_ap_vld = grp_to_double_fu_951_p_vz_2_ap_vld;
    end else begin
        p_vz_2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_vz_3_ap_vld = grp_to_double_fu_951_p_vz_3_ap_vld;
    end else begin
        p_vz_3_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_vz_4_ap_vld = grp_to_double_fu_951_p_vz_4_ap_vld;
    end else begin
        p_vz_4_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_vz_5_ap_vld = grp_to_double_fu_951_p_vz_5_ap_vld;
    end else begin
        p_vz_5_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_vz_6_ap_vld = grp_to_double_fu_951_p_vz_6_ap_vld;
    end else begin
        p_vz_6_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_vz_7_ap_vld = grp_to_double_fu_951_p_vz_7_ap_vld;
    end else begin
        p_vz_7_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_vz_8_ap_vld = grp_to_double_fu_951_p_vz_8_ap_vld;
    end else begin
        p_vz_8_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (1'b1 == grp_to_double_fu_951_p_x_0_ap_vld)) | ((1'b1 == ap_CS_fsm_state9) & (1'b1 == grp_to_double_fu_951_p_x_0_ap_vld)))) begin
        p_x_0_o = grp_to_double_fu_951_p_x_0;
    end else begin
        p_x_0_o = p_x_0_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_x_0_o_ap_vld = grp_to_double_fu_951_p_x_0_ap_vld;
    end else begin
        p_x_0_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (1'b1 == grp_to_double_fu_951_p_x_1_ap_vld)) | ((1'b1 == ap_CS_fsm_state9) & (1'b1 == grp_to_double_fu_951_p_x_1_ap_vld)))) begin
        p_x_1_o = grp_to_double_fu_951_p_x_1;
    end else begin
        p_x_1_o = p_x_1_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_x_1_o_ap_vld = grp_to_double_fu_951_p_x_1_ap_vld;
    end else begin
        p_x_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (1'b1 == grp_to_double_fu_951_p_x_2_ap_vld)) | ((1'b1 == ap_CS_fsm_state9) & (1'b1 == grp_to_double_fu_951_p_x_2_ap_vld)))) begin
        p_x_2_o = grp_to_double_fu_951_p_x_2;
    end else begin
        p_x_2_o = p_x_2_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_x_2_o_ap_vld = grp_to_double_fu_951_p_x_2_ap_vld;
    end else begin
        p_x_2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (1'b1 == grp_to_double_fu_951_p_x_3_ap_vld)) | ((1'b1 == ap_CS_fsm_state9) & (1'b1 == grp_to_double_fu_951_p_x_3_ap_vld)))) begin
        p_x_3_o = grp_to_double_fu_951_p_x_3;
    end else begin
        p_x_3_o = p_x_3_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_x_3_o_ap_vld = grp_to_double_fu_951_p_x_3_ap_vld;
    end else begin
        p_x_3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (1'b1 == grp_to_double_fu_951_p_x_4_ap_vld)) | ((1'b1 == ap_CS_fsm_state9) & (1'b1 == grp_to_double_fu_951_p_x_4_ap_vld)))) begin
        p_x_4_o = grp_to_double_fu_951_p_x_4;
    end else begin
        p_x_4_o = p_x_4_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_x_4_o_ap_vld = grp_to_double_fu_951_p_x_4_ap_vld;
    end else begin
        p_x_4_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (1'b1 == grp_to_double_fu_951_p_x_5_ap_vld)) | ((1'b1 == ap_CS_fsm_state9) & (1'b1 == grp_to_double_fu_951_p_x_5_ap_vld)))) begin
        p_x_5_o = grp_to_double_fu_951_p_x_5;
    end else begin
        p_x_5_o = p_x_5_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_x_5_o_ap_vld = grp_to_double_fu_951_p_x_5_ap_vld;
    end else begin
        p_x_5_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (1'b1 == grp_to_double_fu_951_p_x_6_ap_vld)) | ((1'b1 == ap_CS_fsm_state9) & (1'b1 == grp_to_double_fu_951_p_x_6_ap_vld)))) begin
        p_x_6_o = grp_to_double_fu_951_p_x_6;
    end else begin
        p_x_6_o = p_x_6_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_x_6_o_ap_vld = grp_to_double_fu_951_p_x_6_ap_vld;
    end else begin
        p_x_6_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (1'b1 == grp_to_double_fu_951_p_x_7_ap_vld)) | ((1'b1 == ap_CS_fsm_state9) & (1'b1 == grp_to_double_fu_951_p_x_7_ap_vld)))) begin
        p_x_7_o = grp_to_double_fu_951_p_x_7;
    end else begin
        p_x_7_o = p_x_7_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_x_7_o_ap_vld = grp_to_double_fu_951_p_x_7_ap_vld;
    end else begin
        p_x_7_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (1'b1 == grp_to_double_fu_951_p_x_8_ap_vld)) | ((1'b1 == ap_CS_fsm_state9) & (1'b1 == grp_to_double_fu_951_p_x_8_ap_vld)))) begin
        p_x_8_o = grp_to_double_fu_951_p_x_8;
    end else begin
        p_x_8_o = p_x_8_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_x_8_o_ap_vld = grp_to_double_fu_951_p_x_8_ap_vld;
    end else begin
        p_x_8_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (1'b1 == grp_to_double_fu_951_p_y_0_ap_vld)) | ((1'b1 == ap_CS_fsm_state9) & (1'b1 == grp_to_double_fu_951_p_y_0_ap_vld)))) begin
        p_y_0_o = grp_to_double_fu_951_p_y_0;
    end else begin
        p_y_0_o = p_y_0_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_y_0_o_ap_vld = grp_to_double_fu_951_p_y_0_ap_vld;
    end else begin
        p_y_0_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (1'b1 == grp_to_double_fu_951_p_y_1_ap_vld)) | ((1'b1 == ap_CS_fsm_state9) & (1'b1 == grp_to_double_fu_951_p_y_1_ap_vld)))) begin
        p_y_1_o = grp_to_double_fu_951_p_y_1;
    end else begin
        p_y_1_o = p_y_1_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_y_1_o_ap_vld = grp_to_double_fu_951_p_y_1_ap_vld;
    end else begin
        p_y_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (1'b1 == grp_to_double_fu_951_p_y_2_ap_vld)) | ((1'b1 == ap_CS_fsm_state9) & (1'b1 == grp_to_double_fu_951_p_y_2_ap_vld)))) begin
        p_y_2_o = grp_to_double_fu_951_p_y_2;
    end else begin
        p_y_2_o = p_y_2_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_y_2_o_ap_vld = grp_to_double_fu_951_p_y_2_ap_vld;
    end else begin
        p_y_2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (1'b1 == grp_to_double_fu_951_p_y_3_ap_vld)) | ((1'b1 == ap_CS_fsm_state9) & (1'b1 == grp_to_double_fu_951_p_y_3_ap_vld)))) begin
        p_y_3_o = grp_to_double_fu_951_p_y_3;
    end else begin
        p_y_3_o = p_y_3_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_y_3_o_ap_vld = grp_to_double_fu_951_p_y_3_ap_vld;
    end else begin
        p_y_3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (1'b1 == grp_to_double_fu_951_p_y_4_ap_vld)) | ((1'b1 == ap_CS_fsm_state9) & (1'b1 == grp_to_double_fu_951_p_y_4_ap_vld)))) begin
        p_y_4_o = grp_to_double_fu_951_p_y_4;
    end else begin
        p_y_4_o = p_y_4_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_y_4_o_ap_vld = grp_to_double_fu_951_p_y_4_ap_vld;
    end else begin
        p_y_4_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (1'b1 == grp_to_double_fu_951_p_y_5_ap_vld)) | ((1'b1 == ap_CS_fsm_state9) & (1'b1 == grp_to_double_fu_951_p_y_5_ap_vld)))) begin
        p_y_5_o = grp_to_double_fu_951_p_y_5;
    end else begin
        p_y_5_o = p_y_5_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_y_5_o_ap_vld = grp_to_double_fu_951_p_y_5_ap_vld;
    end else begin
        p_y_5_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (1'b1 == grp_to_double_fu_951_p_y_6_ap_vld)) | ((1'b1 == ap_CS_fsm_state9) & (1'b1 == grp_to_double_fu_951_p_y_6_ap_vld)))) begin
        p_y_6_o = grp_to_double_fu_951_p_y_6;
    end else begin
        p_y_6_o = p_y_6_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_y_6_o_ap_vld = grp_to_double_fu_951_p_y_6_ap_vld;
    end else begin
        p_y_6_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (1'b1 == grp_to_double_fu_951_p_y_7_ap_vld)) | ((1'b1 == ap_CS_fsm_state9) & (1'b1 == grp_to_double_fu_951_p_y_7_ap_vld)))) begin
        p_y_7_o = grp_to_double_fu_951_p_y_7;
    end else begin
        p_y_7_o = p_y_7_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_y_7_o_ap_vld = grp_to_double_fu_951_p_y_7_ap_vld;
    end else begin
        p_y_7_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (1'b1 == grp_to_double_fu_951_p_y_8_ap_vld)) | ((1'b1 == ap_CS_fsm_state9) & (1'b1 == grp_to_double_fu_951_p_y_8_ap_vld)))) begin
        p_y_8_o = grp_to_double_fu_951_p_y_8;
    end else begin
        p_y_8_o = p_y_8_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_y_8_o_ap_vld = grp_to_double_fu_951_p_y_8_ap_vld;
    end else begin
        p_y_8_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (1'b1 == grp_to_double_fu_951_p_z_0_ap_vld)) | ((1'b1 == ap_CS_fsm_state9) & (1'b1 == grp_to_double_fu_951_p_z_0_ap_vld)))) begin
        p_z_0_o = grp_to_double_fu_951_p_z_0;
    end else begin
        p_z_0_o = p_z_0_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_z_0_o_ap_vld = grp_to_double_fu_951_p_z_0_ap_vld;
    end else begin
        p_z_0_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (1'b1 == grp_to_double_fu_951_p_z_1_ap_vld)) | ((1'b1 == ap_CS_fsm_state9) & (1'b1 == grp_to_double_fu_951_p_z_1_ap_vld)))) begin
        p_z_1_o = grp_to_double_fu_951_p_z_1;
    end else begin
        p_z_1_o = p_z_1_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_z_1_o_ap_vld = grp_to_double_fu_951_p_z_1_ap_vld;
    end else begin
        p_z_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (1'b1 == grp_to_double_fu_951_p_z_2_ap_vld)) | ((1'b1 == ap_CS_fsm_state9) & (1'b1 == grp_to_double_fu_951_p_z_2_ap_vld)))) begin
        p_z_2_o = grp_to_double_fu_951_p_z_2;
    end else begin
        p_z_2_o = p_z_2_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_z_2_o_ap_vld = grp_to_double_fu_951_p_z_2_ap_vld;
    end else begin
        p_z_2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (1'b1 == grp_to_double_fu_951_p_z_3_ap_vld)) | ((1'b1 == ap_CS_fsm_state9) & (1'b1 == grp_to_double_fu_951_p_z_3_ap_vld)))) begin
        p_z_3_o = grp_to_double_fu_951_p_z_3;
    end else begin
        p_z_3_o = p_z_3_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_z_3_o_ap_vld = grp_to_double_fu_951_p_z_3_ap_vld;
    end else begin
        p_z_3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (1'b1 == grp_to_double_fu_951_p_z_4_ap_vld)) | ((1'b1 == ap_CS_fsm_state9) & (1'b1 == grp_to_double_fu_951_p_z_4_ap_vld)))) begin
        p_z_4_o = grp_to_double_fu_951_p_z_4;
    end else begin
        p_z_4_o = p_z_4_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_z_4_o_ap_vld = grp_to_double_fu_951_p_z_4_ap_vld;
    end else begin
        p_z_4_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (1'b1 == grp_to_double_fu_951_p_z_5_ap_vld)) | ((1'b1 == ap_CS_fsm_state9) & (1'b1 == grp_to_double_fu_951_p_z_5_ap_vld)))) begin
        p_z_5_o = grp_to_double_fu_951_p_z_5;
    end else begin
        p_z_5_o = p_z_5_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_z_5_o_ap_vld = grp_to_double_fu_951_p_z_5_ap_vld;
    end else begin
        p_z_5_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (1'b1 == grp_to_double_fu_951_p_z_6_ap_vld)) | ((1'b1 == ap_CS_fsm_state9) & (1'b1 == grp_to_double_fu_951_p_z_6_ap_vld)))) begin
        p_z_6_o = grp_to_double_fu_951_p_z_6;
    end else begin
        p_z_6_o = p_z_6_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_z_6_o_ap_vld = grp_to_double_fu_951_p_z_6_ap_vld;
    end else begin
        p_z_6_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (1'b1 == grp_to_double_fu_951_p_z_7_ap_vld)) | ((1'b1 == ap_CS_fsm_state9) & (1'b1 == grp_to_double_fu_951_p_z_7_ap_vld)))) begin
        p_z_7_o = grp_to_double_fu_951_p_z_7;
    end else begin
        p_z_7_o = p_z_7_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_z_7_o_ap_vld = grp_to_double_fu_951_p_z_7_ap_vld;
    end else begin
        p_z_7_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (1'b1 == grp_to_double_fu_951_p_z_8_ap_vld)) | ((1'b1 == ap_CS_fsm_state9) & (1'b1 == grp_to_double_fu_951_p_z_8_ap_vld)))) begin
        p_z_8_o = grp_to_double_fu_951_p_z_8;
    end else begin
        p_z_8_o = p_z_8_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9))) begin
        p_z_8_o_ap_vld = grp_to_double_fu_951_p_z_8_ap_vld;
    end else begin
        p_z_8_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (grp_drift_fu_754_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_to_double_fu_951_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (grp_gravity_fu_624_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (grp_kick_fu_866_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((grp_drift_fu_754_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (grp_to_double_fu_951_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return_0 = reg_1252;

assign ap_return_1 = reg_1258;

assign ap_return_10 = reg_1312;

assign ap_return_11 = reg_1318;

assign ap_return_12 = reg_1324;

assign ap_return_13 = reg_1330;

assign ap_return_14 = reg_1336;

assign ap_return_15 = reg_1342;

assign ap_return_16 = reg_1348;

assign ap_return_17 = reg_1354;

assign ap_return_18 = reg_1360;

assign ap_return_19 = reg_1366;

assign ap_return_2 = reg_1264;

assign ap_return_20 = reg_1372;

assign ap_return_21 = reg_1378;

assign ap_return_22 = reg_1384;

assign ap_return_23 = reg_1390;

assign ap_return_24 = reg_1396;

assign ap_return_25 = reg_1402;

assign ap_return_26 = reg_1408;

assign ap_return_27 = p_int_vx_assign_4_reg_2170;

assign ap_return_28 = p_int_vx25_assign_4_reg_2177;

assign ap_return_29 = p_int_vx26_assign_4_reg_2184;

assign ap_return_3 = reg_1270;

assign ap_return_30 = p_int_vx27_assign_4_reg_2191;

assign ap_return_31 = p_int_vx28_assign_4_reg_2198;

assign ap_return_32 = p_int_vx29_assign_4_reg_2205;

assign ap_return_33 = p_int_vx30_assign_4_reg_2212;

assign ap_return_34 = p_int_vx3138_assign_4_reg_2219;

assign ap_return_35 = p_int_vx32_assign_4_reg_2226;

assign ap_return_36 = p_int_vy_assign_4_reg_2233;

assign ap_return_37 = p_int_vy33_assign_4_reg_2240;

assign ap_return_38 = p_int_vy34_assign_4_reg_2247;

assign ap_return_39 = p_int_vy35_assign_4_reg_2254;

assign ap_return_4 = reg_1276;

assign ap_return_40 = p_int_vy36_assign_4_reg_2261;

assign ap_return_41 = p_int_vy37_assign_4_reg_2268;

assign ap_return_42 = p_int_vy38_assign_4_reg_2275;

assign ap_return_43 = p_int_vy39_assign_4_reg_2282;

assign ap_return_44 = p_int_vy40_assign_4_reg_2289;

assign ap_return_45 = p_int_vz_assign_4_reg_2296;

assign ap_return_46 = p_int_vz41_assign_4_reg_2303;

assign ap_return_47 = p_int_vz42_assign_4_reg_2310;

assign ap_return_48 = p_int_vz43_assign_4_reg_2317;

assign ap_return_49 = p_int_vz44_assign_4_reg_2324;

assign ap_return_5 = reg_1282;

assign ap_return_50 = p_int_vz45_assign_4_reg_2331;

assign ap_return_51 = p_int_vz46_assign_4_reg_2338;

assign ap_return_52 = p_int_vz47_assign_4_reg_2345;

assign ap_return_53 = p_int_vz48_assign_4_reg_2352;

assign ap_return_6 = reg_1288;

assign ap_return_7 = reg_1294;

assign ap_return_8 = reg_1300;

assign ap_return_9 = reg_1306;

assign grp_drift_fu_754_ap_start = ap_reg_grp_drift_fu_754_ap_start;

assign grp_gravity_fu_624_ap_start = ap_reg_grp_gravity_fu_624_ap_start;

assign grp_kick_fu_866_ap_start = ap_reg_grp_kick_fu_866_ap_start;

assign grp_to_double_fu_951_ap_start = ap_reg_grp_to_double_fu_951_ap_start;

assign p_vx_0 = grp_to_double_fu_951_p_vx_0;

assign p_vx_1 = grp_to_double_fu_951_p_vx_1;

assign p_vx_2 = grp_to_double_fu_951_p_vx_2;

assign p_vx_3 = grp_to_double_fu_951_p_vx_3;

assign p_vx_4 = grp_to_double_fu_951_p_vx_4;

assign p_vx_5 = grp_to_double_fu_951_p_vx_5;

assign p_vx_6 = grp_to_double_fu_951_p_vx_6;

assign p_vx_7 = grp_to_double_fu_951_p_vx_7;

assign p_vx_8 = grp_to_double_fu_951_p_vx_8;

assign p_vy_0 = grp_to_double_fu_951_p_vy_0;

assign p_vy_1 = grp_to_double_fu_951_p_vy_1;

assign p_vy_2 = grp_to_double_fu_951_p_vy_2;

assign p_vy_3 = grp_to_double_fu_951_p_vy_3;

assign p_vy_4 = grp_to_double_fu_951_p_vy_4;

assign p_vy_5 = grp_to_double_fu_951_p_vy_5;

assign p_vy_6 = grp_to_double_fu_951_p_vy_6;

assign p_vy_7 = grp_to_double_fu_951_p_vy_7;

assign p_vy_8 = grp_to_double_fu_951_p_vy_8;

assign p_vz_0 = grp_to_double_fu_951_p_vz_0;

assign p_vz_1 = grp_to_double_fu_951_p_vz_1;

assign p_vz_2 = grp_to_double_fu_951_p_vz_2;

assign p_vz_3 = grp_to_double_fu_951_p_vz_3;

assign p_vz_4 = grp_to_double_fu_951_p_vz_4;

assign p_vz_5 = grp_to_double_fu_951_p_vz_5;

assign p_vz_6 = grp_to_double_fu_951_p_vz_6;

assign p_vz_7 = grp_to_double_fu_951_p_vz_7;

assign p_vz_8 = grp_to_double_fu_951_p_vz_8;

endmodule //janus_step
