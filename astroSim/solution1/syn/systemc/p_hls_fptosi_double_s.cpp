// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "p_hls_fptosi_double_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const bool p_hls_fptosi_double_s::ap_const_boolean_1 = true;
const sc_lv<32> p_hls_fptosi_double_s::ap_const_lv32_3F = "111111";
const sc_lv<32> p_hls_fptosi_double_s::ap_const_lv32_34 = "110100";
const sc_lv<32> p_hls_fptosi_double_s::ap_const_lv32_3E = "111110";
const sc_lv<1> p_hls_fptosi_double_s::ap_const_lv1_1 = "1";
const sc_lv<1> p_hls_fptosi_double_s::ap_const_lv1_0 = "0";
const sc_lv<12> p_hls_fptosi_double_s::ap_const_lv12_C01 = "110000000001";
const sc_lv<32> p_hls_fptosi_double_s::ap_const_lv32_B = "1011";
const sc_lv<11> p_hls_fptosi_double_s::ap_const_lv11_3FF = "1111111111";
const sc_lv<32> p_hls_fptosi_double_s::ap_const_lv32_35 = "110101";
const sc_lv<32> p_hls_fptosi_double_s::ap_const_lv32_73 = "1110011";
const sc_lv<64> p_hls_fptosi_double_s::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_logic p_hls_fptosi_double_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic p_hls_fptosi_double_s::ap_const_logic_0 = sc_dt::Log_0;

p_hls_fptosi_double_s::p_hls_fptosi_double_s(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_return);
    sensitive << ( tmp_6_i_i_fu_174_p1 );
    sensitive << ( p_Result_s_fu_48_p3 );
    sensitive << ( tmp_9_i_i_fu_178_p2 );

    SC_METHOD(thread_isNeg_fu_94_p3);
    sensitive << ( sh_assign_fu_88_p2 );

    SC_METHOD(thread_loc_V_1_fu_66_p1);
    sensitive << ( p_Val2_s_fu_44_p1 );

    SC_METHOD(thread_loc_V_fu_56_p4);
    sensitive << ( p_Val2_s_fu_44_p1 );

    SC_METHOD(thread_p_Result_s_fu_48_p3);
    sensitive << ( p_Val2_s_fu_44_p1 );

    SC_METHOD(thread_p_Val2_2_fu_166_p3);
    sensitive << ( isNeg_fu_94_p3 );
    sensitive << ( tmp_1_fu_152_p1 );
    sensitive << ( tmp_2_fu_156_p4 );

    SC_METHOD(thread_p_Val2_s_fu_44_p1);
    sensitive << ( x );

    SC_METHOD(thread_sh_assign_1_cast_fu_120_p1);
    sensitive << ( sh_assign_1_fu_112_p3 );

    SC_METHOD(thread_sh_assign_1_fu_112_p3);
    sensitive << ( sh_assign_fu_88_p2 );
    sensitive << ( isNeg_fu_94_p3 );
    sensitive << ( tmp_1_i_i_cast_fu_108_p1 );

    SC_METHOD(thread_sh_assign_fu_88_p2);
    sensitive << ( tmp_i_i_i_cast1_fu_84_p1 );

    SC_METHOD(thread_tmp_1_fu_152_p1);
    sensitive << ( tmp_fu_144_p3 );

    SC_METHOD(thread_tmp_1_i_i_cast_fu_108_p1);
    sensitive << ( tmp_1_i_i_fu_102_p2 );

    SC_METHOD(thread_tmp_1_i_i_fu_102_p2);
    sensitive << ( loc_V_fu_56_p4 );

    SC_METHOD(thread_tmp_2_fu_156_p4);
    sensitive << ( tmp_4_i_i_fu_138_p2 );

    SC_METHOD(thread_tmp_2_i_i_cast_fu_128_p1);
    sensitive << ( sh_assign_1_cast_fu_120_p1 );

    SC_METHOD(thread_tmp_2_i_i_fu_124_p1);
    sensitive << ( sh_assign_1_cast_fu_120_p1 );

    SC_METHOD(thread_tmp_3_i_i_fu_132_p2);
    sensitive << ( tmp_i_i_fu_70_p4 );
    sensitive << ( tmp_2_i_i_cast_fu_128_p1 );

    SC_METHOD(thread_tmp_4_i_i_fu_138_p2);
    sensitive << ( tmp_i_i_cast_fu_80_p1 );
    sensitive << ( tmp_2_i_i_fu_124_p1 );

    SC_METHOD(thread_tmp_6_i_i_fu_174_p1);
    sensitive << ( p_Val2_2_fu_166_p3 );

    SC_METHOD(thread_tmp_9_i_i_fu_178_p2);
    sensitive << ( tmp_6_i_i_fu_174_p1 );

    SC_METHOD(thread_tmp_fu_144_p3);
    sensitive << ( tmp_3_i_i_fu_132_p2 );

    SC_METHOD(thread_tmp_i_i_cast_fu_80_p1);
    sensitive << ( tmp_i_i_fu_70_p4 );

    SC_METHOD(thread_tmp_i_i_fu_70_p4);
    sensitive << ( loc_V_1_fu_66_p1 );

    SC_METHOD(thread_tmp_i_i_i_cast1_fu_84_p1);
    sensitive << ( loc_V_fu_56_p4 );

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "p_hls_fptosi_double_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, x, "(port)x");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, p_Val2_s_fu_44_p1, "p_Val2_s_fu_44_p1");
    sc_trace(mVcdFile, loc_V_1_fu_66_p1, "loc_V_1_fu_66_p1");
    sc_trace(mVcdFile, tmp_i_i_fu_70_p4, "tmp_i_i_fu_70_p4");
    sc_trace(mVcdFile, loc_V_fu_56_p4, "loc_V_fu_56_p4");
    sc_trace(mVcdFile, tmp_i_i_i_cast1_fu_84_p1, "tmp_i_i_i_cast1_fu_84_p1");
    sc_trace(mVcdFile, sh_assign_fu_88_p2, "sh_assign_fu_88_p2");
    sc_trace(mVcdFile, tmp_1_i_i_fu_102_p2, "tmp_1_i_i_fu_102_p2");
    sc_trace(mVcdFile, isNeg_fu_94_p3, "isNeg_fu_94_p3");
    sc_trace(mVcdFile, tmp_1_i_i_cast_fu_108_p1, "tmp_1_i_i_cast_fu_108_p1");
    sc_trace(mVcdFile, sh_assign_1_fu_112_p3, "sh_assign_1_fu_112_p3");
    sc_trace(mVcdFile, sh_assign_1_cast_fu_120_p1, "sh_assign_1_cast_fu_120_p1");
    sc_trace(mVcdFile, tmp_2_i_i_cast_fu_128_p1, "tmp_2_i_i_cast_fu_128_p1");
    sc_trace(mVcdFile, tmp_i_i_cast_fu_80_p1, "tmp_i_i_cast_fu_80_p1");
    sc_trace(mVcdFile, tmp_2_i_i_fu_124_p1, "tmp_2_i_i_fu_124_p1");
    sc_trace(mVcdFile, tmp_3_i_i_fu_132_p2, "tmp_3_i_i_fu_132_p2");
    sc_trace(mVcdFile, tmp_fu_144_p3, "tmp_fu_144_p3");
    sc_trace(mVcdFile, tmp_4_i_i_fu_138_p2, "tmp_4_i_i_fu_138_p2");
    sc_trace(mVcdFile, tmp_1_fu_152_p1, "tmp_1_fu_152_p1");
    sc_trace(mVcdFile, tmp_2_fu_156_p4, "tmp_2_fu_156_p4");
    sc_trace(mVcdFile, p_Val2_2_fu_166_p3, "p_Val2_2_fu_166_p3");
    sc_trace(mVcdFile, tmp_6_i_i_fu_174_p1, "tmp_6_i_i_fu_174_p1");
    sc_trace(mVcdFile, p_Result_s_fu_48_p3, "p_Result_s_fu_48_p3");
    sc_trace(mVcdFile, tmp_9_i_i_fu_178_p2, "tmp_9_i_i_fu_178_p2");
#endif

    }
}

p_hls_fptosi_double_s::~p_hls_fptosi_double_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void p_hls_fptosi_double_s::thread_ap_return() {
    ap_return = (!p_Result_s_fu_48_p3.read()[0].is_01())? sc_lv<64>(): ((p_Result_s_fu_48_p3.read()[0].to_bool())? tmp_9_i_i_fu_178_p2.read(): tmp_6_i_i_fu_174_p1.read());
}

void p_hls_fptosi_double_s::thread_isNeg_fu_94_p3() {
    isNeg_fu_94_p3 = sh_assign_fu_88_p2.read().range(11, 11);
}

void p_hls_fptosi_double_s::thread_loc_V_1_fu_66_p1() {
    loc_V_1_fu_66_p1 = p_Val2_s_fu_44_p1.read().range(52-1, 0);
}

void p_hls_fptosi_double_s::thread_loc_V_fu_56_p4() {
    loc_V_fu_56_p4 = p_Val2_s_fu_44_p1.read().range(62, 52);
}

void p_hls_fptosi_double_s::thread_p_Result_s_fu_48_p3() {
    p_Result_s_fu_48_p3 = p_Val2_s_fu_44_p1.read().range(63, 63);
}

void p_hls_fptosi_double_s::thread_p_Val2_2_fu_166_p3() {
    p_Val2_2_fu_166_p3 = (!isNeg_fu_94_p3.read()[0].is_01())? sc_lv<63>(): ((isNeg_fu_94_p3.read()[0].to_bool())? tmp_1_fu_152_p1.read(): tmp_2_fu_156_p4.read());
}

void p_hls_fptosi_double_s::thread_p_Val2_s_fu_44_p1() {
    p_Val2_s_fu_44_p1 = x.read();
}

void p_hls_fptosi_double_s::thread_sh_assign_1_cast_fu_120_p1() {
    sh_assign_1_cast_fu_120_p1 = esl_sext<32,12>(sh_assign_1_fu_112_p3.read());
}

void p_hls_fptosi_double_s::thread_sh_assign_1_fu_112_p3() {
    sh_assign_1_fu_112_p3 = (!isNeg_fu_94_p3.read()[0].is_01())? sc_lv<12>(): ((isNeg_fu_94_p3.read()[0].to_bool())? tmp_1_i_i_cast_fu_108_p1.read(): sh_assign_fu_88_p2.read());
}

void p_hls_fptosi_double_s::thread_sh_assign_fu_88_p2() {
    sh_assign_fu_88_p2 = (!ap_const_lv12_C01.is_01() || !tmp_i_i_i_cast1_fu_84_p1.read().is_01())? sc_lv<12>(): (sc_bigint<12>(ap_const_lv12_C01) + sc_biguint<12>(tmp_i_i_i_cast1_fu_84_p1.read()));
}

void p_hls_fptosi_double_s::thread_tmp_1_fu_152_p1() {
    tmp_1_fu_152_p1 = esl_zext<63,1>(tmp_fu_144_p3.read());
}

void p_hls_fptosi_double_s::thread_tmp_1_i_i_cast_fu_108_p1() {
    tmp_1_i_i_cast_fu_108_p1 = esl_sext<12,11>(tmp_1_i_i_fu_102_p2.read());
}

void p_hls_fptosi_double_s::thread_tmp_1_i_i_fu_102_p2() {
    tmp_1_i_i_fu_102_p2 = (!ap_const_lv11_3FF.is_01() || !loc_V_fu_56_p4.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_3FF) - sc_biguint<11>(loc_V_fu_56_p4.read()));
}

void p_hls_fptosi_double_s::thread_tmp_2_fu_156_p4() {
    tmp_2_fu_156_p4 = tmp_4_i_i_fu_138_p2.read().range(115, 53);
}

void p_hls_fptosi_double_s::thread_tmp_2_i_i_cast_fu_128_p1() {
    tmp_2_i_i_cast_fu_128_p1 = esl_zext<54,32>(sh_assign_1_cast_fu_120_p1.read());
}

void p_hls_fptosi_double_s::thread_tmp_2_i_i_fu_124_p1() {
    tmp_2_i_i_fu_124_p1 = esl_zext<169,32>(sh_assign_1_cast_fu_120_p1.read());
}

void p_hls_fptosi_double_s::thread_tmp_3_i_i_fu_132_p2() {
    tmp_3_i_i_fu_132_p2 = (!tmp_2_i_i_cast_fu_128_p1.read().is_01())? sc_lv<54>(): tmp_i_i_fu_70_p4.read() >> (unsigned short)tmp_2_i_i_cast_fu_128_p1.read().to_uint();
}

void p_hls_fptosi_double_s::thread_tmp_4_i_i_fu_138_p2() {
    tmp_4_i_i_fu_138_p2 = (!tmp_2_i_i_fu_124_p1.read().is_01())? sc_lv<169>(): tmp_i_i_cast_fu_80_p1.read() << (unsigned short)tmp_2_i_i_fu_124_p1.read().to_uint();
}

void p_hls_fptosi_double_s::thread_tmp_6_i_i_fu_174_p1() {
    tmp_6_i_i_fu_174_p1 = esl_zext<64,63>(p_Val2_2_fu_166_p3.read());
}

void p_hls_fptosi_double_s::thread_tmp_9_i_i_fu_178_p2() {
    tmp_9_i_i_fu_178_p2 = (!ap_const_lv64_0.is_01() || !tmp_6_i_i_fu_174_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(ap_const_lv64_0) - sc_biguint<64>(tmp_6_i_i_fu_174_p1.read()));
}

void p_hls_fptosi_double_s::thread_tmp_fu_144_p3() {
    tmp_fu_144_p3 = tmp_3_i_i_fu_132_p2.read().range(53, 53);
}

void p_hls_fptosi_double_s::thread_tmp_i_i_cast_fu_80_p1() {
    tmp_i_i_cast_fu_80_p1 = esl_zext<169,54>(tmp_i_i_fu_70_p4.read());
}

void p_hls_fptosi_double_s::thread_tmp_i_i_fu_70_p4() {
    tmp_i_i_fu_70_p4 = esl_concat<53,1>(esl_concat<1,52>(ap_const_lv1_1, loc_V_1_fu_66_p1.read()), ap_const_lv1_0);
}

void p_hls_fptosi_double_s::thread_tmp_i_i_i_cast1_fu_84_p1() {
    tmp_i_i_i_cast1_fu_84_p1 = esl_zext<12,11>(loc_V_fu_56_p4.read());
}

}

