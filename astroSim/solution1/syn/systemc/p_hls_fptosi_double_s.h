// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _p_hls_fptosi_double_s_HH_
#define _p_hls_fptosi_double_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct p_hls_fptosi_double_s : public sc_module {
    // Port declarations 2
    sc_in< sc_lv<64> > x;
    sc_out< sc_lv<64> > ap_return;


    // Module declarations
    p_hls_fptosi_double_s(sc_module_name name);
    SC_HAS_PROCESS(p_hls_fptosi_double_s);

    ~p_hls_fptosi_double_s();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<64> > p_Val2_s_fu_44_p1;
    sc_signal< sc_lv<52> > loc_V_1_fu_66_p1;
    sc_signal< sc_lv<54> > tmp_i_i_fu_70_p4;
    sc_signal< sc_lv<11> > loc_V_fu_56_p4;
    sc_signal< sc_lv<12> > tmp_i_i_i_cast1_fu_84_p1;
    sc_signal< sc_lv<12> > sh_assign_fu_88_p2;
    sc_signal< sc_lv<11> > tmp_1_i_i_fu_102_p2;
    sc_signal< sc_lv<1> > isNeg_fu_94_p3;
    sc_signal< sc_lv<12> > tmp_1_i_i_cast_fu_108_p1;
    sc_signal< sc_lv<12> > sh_assign_1_fu_112_p3;
    sc_signal< sc_lv<32> > sh_assign_1_cast_fu_120_p1;
    sc_signal< sc_lv<54> > tmp_2_i_i_cast_fu_128_p1;
    sc_signal< sc_lv<169> > tmp_i_i_cast_fu_80_p1;
    sc_signal< sc_lv<169> > tmp_2_i_i_fu_124_p1;
    sc_signal< sc_lv<54> > tmp_3_i_i_fu_132_p2;
    sc_signal< sc_lv<1> > tmp_fu_144_p3;
    sc_signal< sc_lv<169> > tmp_4_i_i_fu_138_p2;
    sc_signal< sc_lv<63> > tmp_1_fu_152_p1;
    sc_signal< sc_lv<63> > tmp_2_fu_156_p4;
    sc_signal< sc_lv<63> > p_Val2_2_fu_166_p3;
    sc_signal< sc_lv<64> > tmp_6_i_i_fu_174_p1;
    sc_signal< sc_lv<1> > p_Result_s_fu_48_p3;
    sc_signal< sc_lv<64> > tmp_9_i_i_fu_178_p2;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_34;
    static const sc_lv<32> ap_const_lv32_3E;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<12> ap_const_lv12_C01;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<11> ap_const_lv11_3FF;
    static const sc_lv<32> ap_const_lv32_35;
    static const sc_lv<32> ap_const_lv32_73;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_ap_return();
    void thread_isNeg_fu_94_p3();
    void thread_loc_V_1_fu_66_p1();
    void thread_loc_V_fu_56_p4();
    void thread_p_Result_s_fu_48_p3();
    void thread_p_Val2_2_fu_166_p3();
    void thread_p_Val2_s_fu_44_p1();
    void thread_sh_assign_1_cast_fu_120_p1();
    void thread_sh_assign_1_fu_112_p3();
    void thread_sh_assign_fu_88_p2();
    void thread_tmp_1_fu_152_p1();
    void thread_tmp_1_i_i_cast_fu_108_p1();
    void thread_tmp_1_i_i_fu_102_p2();
    void thread_tmp_2_fu_156_p4();
    void thread_tmp_2_i_i_cast_fu_128_p1();
    void thread_tmp_2_i_i_fu_124_p1();
    void thread_tmp_3_i_i_fu_132_p2();
    void thread_tmp_4_i_i_fu_138_p2();
    void thread_tmp_6_i_i_fu_174_p1();
    void thread_tmp_9_i_i_fu_178_p2();
    void thread_tmp_fu_144_p3();
    void thread_tmp_i_i_cast_fu_80_p1();
    void thread_tmp_i_i_fu_70_p4();
    void thread_tmp_i_i_i_cast1_fu_84_p1();
};

}

using namespace ap_rtl;

#endif
